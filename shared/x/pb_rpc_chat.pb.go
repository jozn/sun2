// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pb_rpc_chat.proto

package x

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// AddNewMessage
type PB_ChatParam_AddNewMessage struct {
	MessageView *PB_MessageView `protobuf:"bytes,1,opt,name=MessageView" json:"MessageView,omitempty"`
	//    PB_MessageFileView MessageFileView = 2;
	FileBlob []byte `protobuf:"bytes,10,opt,name=FileBlob,proto3" json:"FileBlob,omitempty"`
}

func (m *PB_ChatParam_AddNewMessage) Reset()                    { *m = PB_ChatParam_AddNewMessage{} }
func (m *PB_ChatParam_AddNewMessage) String() string            { return proto.CompactTextString(m) }
func (*PB_ChatParam_AddNewMessage) ProtoMessage()               {}
func (*PB_ChatParam_AddNewMessage) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{0} }

func (m *PB_ChatParam_AddNewMessage) GetMessageView() *PB_MessageView {
	if m != nil {
		return m.MessageView
	}
	return nil
}

func (m *PB_ChatParam_AddNewMessage) GetFileBlob() []byte {
	if m != nil {
		return m.FileBlob
	}
	return nil
}

type PB_ChatResponse_AddNewMessage struct {
	MessageView *PB_MessageView `protobuf:"bytes,2,opt,name=MessageView" json:"MessageView,omitempty"`
}

func (m *PB_ChatResponse_AddNewMessage) Reset()                    { *m = PB_ChatResponse_AddNewMessage{} }
func (m *PB_ChatResponse_AddNewMessage) String() string            { return proto.CompactTextString(m) }
func (*PB_ChatResponse_AddNewMessage) ProtoMessage()               {}
func (*PB_ChatResponse_AddNewMessage) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{1} }

func (m *PB_ChatResponse_AddNewMessage) GetMessageView() *PB_MessageView {
	if m != nil {
		return m.MessageView
	}
	return nil
}

// SetRoomActionDoing
type PB_ChatParam_SetRoomActionDoing struct {
	GroupId       int64               `protobuf:"varint,1,opt,name=GroupId" json:"GroupId,omitempty"`
	DirectRoomKey string              `protobuf:"bytes,2,opt,name=DirectRoomKey" json:"DirectRoomKey,omitempty"`
	ActionType    RoomActionDoingEnum `protobuf:"varint,3,opt,name=ActionType,enum=RoomActionDoingEnum" json:"ActionType,omitempty"`
}

func (m *PB_ChatParam_SetRoomActionDoing) Reset()                    { *m = PB_ChatParam_SetRoomActionDoing{} }
func (m *PB_ChatParam_SetRoomActionDoing) String() string            { return proto.CompactTextString(m) }
func (*PB_ChatParam_SetRoomActionDoing) ProtoMessage()               {}
func (*PB_ChatParam_SetRoomActionDoing) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{2} }

func (m *PB_ChatParam_SetRoomActionDoing) GetGroupId() int64 {
	if m != nil {
		return m.GroupId
	}
	return 0
}

func (m *PB_ChatParam_SetRoomActionDoing) GetDirectRoomKey() string {
	if m != nil {
		return m.DirectRoomKey
	}
	return ""
}

func (m *PB_ChatParam_SetRoomActionDoing) GetActionType() RoomActionDoingEnum {
	if m != nil {
		return m.ActionType
	}
	return RoomActionDoingEnum_UNKNOWN_ROOM_ACTION_DOING
}

type PB_ChatResponse_SetRoomActionDoing struct {
}

func (m *PB_ChatResponse_SetRoomActionDoing) Reset()         { *m = PB_ChatResponse_SetRoomActionDoing{} }
func (m *PB_ChatResponse_SetRoomActionDoing) String() string { return proto.CompactTextString(m) }
func (*PB_ChatResponse_SetRoomActionDoing) ProtoMessage()    {}
func (*PB_ChatResponse_SetRoomActionDoing) Descriptor() ([]byte, []int) {
	return fileDescriptor3, []int{3}
}

// ///////////////////////////////////
type PB_ChatParam_SetMessagesAsReceived struct {
	RoomKey    string  `protobuf:"bytes,1,opt,name=RoomKey" json:"RoomKey,omitempty"`
	MessageIds []int64 `protobuf:"varint,3,rep,packed,name=MessageIds" json:"MessageIds,omitempty"`
}

func (m *PB_ChatParam_SetMessagesAsReceived) Reset()         { *m = PB_ChatParam_SetMessagesAsReceived{} }
func (m *PB_ChatParam_SetMessagesAsReceived) String() string { return proto.CompactTextString(m) }
func (*PB_ChatParam_SetMessagesAsReceived) ProtoMessage()    {}
func (*PB_ChatParam_SetMessagesAsReceived) Descriptor() ([]byte, []int) {
	return fileDescriptor3, []int{4}
}

func (m *PB_ChatParam_SetMessagesAsReceived) GetRoomKey() string {
	if m != nil {
		return m.RoomKey
	}
	return ""
}

func (m *PB_ChatParam_SetMessagesAsReceived) GetMessageIds() []int64 {
	if m != nil {
		return m.MessageIds
	}
	return nil
}

type PB_ChatResponse_SetMessagesAsReceived struct {
}

func (m *PB_ChatResponse_SetMessagesAsReceived) Reset()         { *m = PB_ChatResponse_SetMessagesAsReceived{} }
func (m *PB_ChatResponse_SetMessagesAsReceived) String() string { return proto.CompactTextString(m) }
func (*PB_ChatResponse_SetMessagesAsReceived) ProtoMessage()    {}
func (*PB_ChatResponse_SetMessagesAsReceived) Descriptor() ([]byte, []int) {
	return fileDescriptor3, []int{5}
}

// ///////////////////////////////////
type PB_ChatParam_SetChatMessagesRangeAsSeen struct {
	RoomKey            string `protobuf:"bytes,1,opt,name=RoomKey" json:"RoomKey,omitempty"`
	FromOlderMessageId int64  `protobuf:"varint,2,opt,name=FromOlderMessageId" json:"FromOlderMessageId,omitempty"`
	TopNewerMessageId  int64  `protobuf:"varint,3,opt,name=TopNewerMessageId" json:"TopNewerMessageId,omitempty"`
	LastSeqSeen        int32  `protobuf:"varint,4,opt,name=LastSeqSeen" json:"LastSeqSeen,omitempty"`
	SeenTimeMs         int64  `protobuf:"varint,5,opt,name=SeenTimeMs" json:"SeenTimeMs,omitempty"`
}

func (m *PB_ChatParam_SetChatMessagesRangeAsSeen) Reset() {
	*m = PB_ChatParam_SetChatMessagesRangeAsSeen{}
}
func (m *PB_ChatParam_SetChatMessagesRangeAsSeen) String() string { return proto.CompactTextString(m) }
func (*PB_ChatParam_SetChatMessagesRangeAsSeen) ProtoMessage()    {}
func (*PB_ChatParam_SetChatMessagesRangeAsSeen) Descriptor() ([]byte, []int) {
	return fileDescriptor3, []int{6}
}

func (m *PB_ChatParam_SetChatMessagesRangeAsSeen) GetRoomKey() string {
	if m != nil {
		return m.RoomKey
	}
	return ""
}

func (m *PB_ChatParam_SetChatMessagesRangeAsSeen) GetFromOlderMessageId() int64 {
	if m != nil {
		return m.FromOlderMessageId
	}
	return 0
}

func (m *PB_ChatParam_SetChatMessagesRangeAsSeen) GetTopNewerMessageId() int64 {
	if m != nil {
		return m.TopNewerMessageId
	}
	return 0
}

func (m *PB_ChatParam_SetChatMessagesRangeAsSeen) GetLastSeqSeen() int32 {
	if m != nil {
		return m.LastSeqSeen
	}
	return 0
}

func (m *PB_ChatParam_SetChatMessagesRangeAsSeen) GetSeenTimeMs() int64 {
	if m != nil {
		return m.SeenTimeMs
	}
	return 0
}

type PB_ChatResponse_SetChatMessagesRangeAsSeen struct {
}

func (m *PB_ChatResponse_SetChatMessagesRangeAsSeen) Reset() {
	*m = PB_ChatResponse_SetChatMessagesRangeAsSeen{}
}
func (m *PB_ChatResponse_SetChatMessagesRangeAsSeen) String() string {
	return proto.CompactTextString(m)
}
func (*PB_ChatResponse_SetChatMessagesRangeAsSeen) ProtoMessage() {}
func (*PB_ChatResponse_SetChatMessagesRangeAsSeen) Descriptor() ([]byte, []int) {
	return fileDescriptor3, []int{7}
}

// ///////////////////////////////////
type PB_ChatParam_DeleteChatHistory struct {
	ChatKey       string `protobuf:"bytes,1,opt,name=ChatKey" json:"ChatKey,omitempty"`
	FromMessageId int64  `protobuf:"varint,2,opt,name=FromMessageId" json:"FromMessageId,omitempty"`
}

func (m *PB_ChatParam_DeleteChatHistory) Reset()                    { *m = PB_ChatParam_DeleteChatHistory{} }
func (m *PB_ChatParam_DeleteChatHistory) String() string            { return proto.CompactTextString(m) }
func (*PB_ChatParam_DeleteChatHistory) ProtoMessage()               {}
func (*PB_ChatParam_DeleteChatHistory) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{8} }

func (m *PB_ChatParam_DeleteChatHistory) GetChatKey() string {
	if m != nil {
		return m.ChatKey
	}
	return ""
}

func (m *PB_ChatParam_DeleteChatHistory) GetFromMessageId() int64 {
	if m != nil {
		return m.FromMessageId
	}
	return 0
}

type PB_ChatResponse_DeleteChatHistory struct {
}

func (m *PB_ChatResponse_DeleteChatHistory) Reset()         { *m = PB_ChatResponse_DeleteChatHistory{} }
func (m *PB_ChatResponse_DeleteChatHistory) String() string { return proto.CompactTextString(m) }
func (*PB_ChatResponse_DeleteChatHistory) ProtoMessage()    {}
func (*PB_ChatResponse_DeleteChatHistory) Descriptor() ([]byte, []int) {
	return fileDescriptor3, []int{9}
}

// ///////////////////////////////////
type PB_ChatParam_DeleteMessagesByIds struct {
	ChatKey     string  `protobuf:"bytes,1,opt,name=ChatKey" json:"ChatKey,omitempty"`
	Both        bool    `protobuf:"varint,2,opt,name=Both" json:"Both,omitempty"`
	MessagesIds []int64 `protobuf:"varint,10,rep,packed,name=MessagesIds" json:"MessagesIds,omitempty"`
}

func (m *PB_ChatParam_DeleteMessagesByIds) Reset()         { *m = PB_ChatParam_DeleteMessagesByIds{} }
func (m *PB_ChatParam_DeleteMessagesByIds) String() string { return proto.CompactTextString(m) }
func (*PB_ChatParam_DeleteMessagesByIds) ProtoMessage()    {}
func (*PB_ChatParam_DeleteMessagesByIds) Descriptor() ([]byte, []int) {
	return fileDescriptor3, []int{10}
}

func (m *PB_ChatParam_DeleteMessagesByIds) GetChatKey() string {
	if m != nil {
		return m.ChatKey
	}
	return ""
}

func (m *PB_ChatParam_DeleteMessagesByIds) GetBoth() bool {
	if m != nil {
		return m.Both
	}
	return false
}

func (m *PB_ChatParam_DeleteMessagesByIds) GetMessagesIds() []int64 {
	if m != nil {
		return m.MessagesIds
	}
	return nil
}

type PB_ChatResponse_DeleteMessagesByIds struct {
}

func (m *PB_ChatResponse_DeleteMessagesByIds) Reset()         { *m = PB_ChatResponse_DeleteMessagesByIds{} }
func (m *PB_ChatResponse_DeleteMessagesByIds) String() string { return proto.CompactTextString(m) }
func (*PB_ChatResponse_DeleteMessagesByIds) ProtoMessage()    {}
func (*PB_ChatResponse_DeleteMessagesByIds) Descriptor() ([]byte, []int) {
	return fileDescriptor3, []int{11}
}

// ///////////////////////////////////
type PB_ChatParam_EditMessage struct {
	RoomKey   string `protobuf:"bytes,1,opt,name=RoomKey" json:"RoomKey,omitempty"`
	MessageId int64  `protobuf:"varint,3,opt,name=MessageId" json:"MessageId,omitempty"`
	NewText   string `protobuf:"bytes,4,opt,name=NewText" json:"NewText,omitempty"`
}

func (m *PB_ChatParam_EditMessage) Reset()                    { *m = PB_ChatParam_EditMessage{} }
func (m *PB_ChatParam_EditMessage) String() string            { return proto.CompactTextString(m) }
func (*PB_ChatParam_EditMessage) ProtoMessage()               {}
func (*PB_ChatParam_EditMessage) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{12} }

func (m *PB_ChatParam_EditMessage) GetRoomKey() string {
	if m != nil {
		return m.RoomKey
	}
	return ""
}

func (m *PB_ChatParam_EditMessage) GetMessageId() int64 {
	if m != nil {
		return m.MessageId
	}
	return 0
}

func (m *PB_ChatParam_EditMessage) GetNewText() string {
	if m != nil {
		return m.NewText
	}
	return ""
}

type PB_ChatResponse_EditMessage struct {
}

func (m *PB_ChatResponse_EditMessage) Reset()                    { *m = PB_ChatResponse_EditMessage{} }
func (m *PB_ChatResponse_EditMessage) String() string            { return proto.CompactTextString(m) }
func (*PB_ChatResponse_EditMessage) ProtoMessage()               {}
func (*PB_ChatResponse_EditMessage) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{13} }

type PB_ChatParam_GetChatList struct {
}

func (m *PB_ChatParam_GetChatList) Reset()                    { *m = PB_ChatParam_GetChatList{} }
func (m *PB_ChatParam_GetChatList) String() string            { return proto.CompactTextString(m) }
func (*PB_ChatParam_GetChatList) ProtoMessage()               {}
func (*PB_ChatParam_GetChatList) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{14} }

type PB_ChatResponse_GetChatList struct {
	Chats []*PB_ChatView `protobuf:"bytes,2,rep,name=Chats" json:"Chats,omitempty"`
}

func (m *PB_ChatResponse_GetChatList) Reset()                    { *m = PB_ChatResponse_GetChatList{} }
func (m *PB_ChatResponse_GetChatList) String() string            { return proto.CompactTextString(m) }
func (*PB_ChatResponse_GetChatList) ProtoMessage()               {}
func (*PB_ChatResponse_GetChatList) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{15} }

func (m *PB_ChatResponse_GetChatList) GetChats() []*PB_ChatView {
	if m != nil {
		return m.Chats
	}
	return nil
}

// GetChatHistoryToOlder
type PB_ChatParam_GetChatHistoryToOlder struct {
	ChatKey          string `protobuf:"bytes,1,opt,name=ChatKey" json:"ChatKey,omitempty"`
	Limit            int32  `protobuf:"varint,2,opt,name=Limit" json:"Limit,omitempty"`
	FromTopMessageId int64  `protobuf:"varint,3,opt,name=FromTopMessageId" json:"FromTopMessageId,omitempty"`
}

func (m *PB_ChatParam_GetChatHistoryToOlder) Reset()         { *m = PB_ChatParam_GetChatHistoryToOlder{} }
func (m *PB_ChatParam_GetChatHistoryToOlder) String() string { return proto.CompactTextString(m) }
func (*PB_ChatParam_GetChatHistoryToOlder) ProtoMessage()    {}
func (*PB_ChatParam_GetChatHistoryToOlder) Descriptor() ([]byte, []int) {
	return fileDescriptor3, []int{16}
}

func (m *PB_ChatParam_GetChatHistoryToOlder) GetChatKey() string {
	if m != nil {
		return m.ChatKey
	}
	return ""
}

func (m *PB_ChatParam_GetChatHistoryToOlder) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *PB_ChatParam_GetChatHistoryToOlder) GetFromTopMessageId() int64 {
	if m != nil {
		return m.FromTopMessageId
	}
	return 0
}

type PB_ChatResponse_GetChatHistoryToOlder struct {
	MessagesViews []*PB_MessageView `protobuf:"bytes,2,rep,name=MessagesViews" json:"MessagesViews,omitempty"`
	HasMore       bool              `protobuf:"varint,3,opt,name=HasMore" json:"HasMore,omitempty"`
}

func (m *PB_ChatResponse_GetChatHistoryToOlder) Reset()         { *m = PB_ChatResponse_GetChatHistoryToOlder{} }
func (m *PB_ChatResponse_GetChatHistoryToOlder) String() string { return proto.CompactTextString(m) }
func (*PB_ChatResponse_GetChatHistoryToOlder) ProtoMessage()    {}
func (*PB_ChatResponse_GetChatHistoryToOlder) Descriptor() ([]byte, []int) {
	return fileDescriptor3, []int{17}
}

func (m *PB_ChatResponse_GetChatHistoryToOlder) GetMessagesViews() []*PB_MessageView {
	if m != nil {
		return m.MessagesViews
	}
	return nil
}

func (m *PB_ChatResponse_GetChatHistoryToOlder) GetHasMore() bool {
	if m != nil {
		return m.HasMore
	}
	return false
}

func init() {
	proto.RegisterType((*PB_ChatParam_AddNewMessage)(nil), "PB_ChatParam_AddNewMessage")
	proto.RegisterType((*PB_ChatResponse_AddNewMessage)(nil), "PB_ChatResponse_AddNewMessage")
	proto.RegisterType((*PB_ChatParam_SetRoomActionDoing)(nil), "PB_ChatParam_SetRoomActionDoing")
	proto.RegisterType((*PB_ChatResponse_SetRoomActionDoing)(nil), "PB_ChatResponse_SetRoomActionDoing")
	proto.RegisterType((*PB_ChatParam_SetMessagesAsReceived)(nil), "PB_ChatParam_SetMessagesAsReceived")
	proto.RegisterType((*PB_ChatResponse_SetMessagesAsReceived)(nil), "PB_ChatResponse_SetMessagesAsReceived")
	proto.RegisterType((*PB_ChatParam_SetChatMessagesRangeAsSeen)(nil), "PB_ChatParam_SetChatMessagesRangeAsSeen")
	proto.RegisterType((*PB_ChatResponse_SetChatMessagesRangeAsSeen)(nil), "PB_ChatResponse_SetChatMessagesRangeAsSeen")
	proto.RegisterType((*PB_ChatParam_DeleteChatHistory)(nil), "PB_ChatParam_DeleteChatHistory")
	proto.RegisterType((*PB_ChatResponse_DeleteChatHistory)(nil), "PB_ChatResponse_DeleteChatHistory")
	proto.RegisterType((*PB_ChatParam_DeleteMessagesByIds)(nil), "PB_ChatParam_DeleteMessagesByIds")
	proto.RegisterType((*PB_ChatResponse_DeleteMessagesByIds)(nil), "PB_ChatResponse_DeleteMessagesByIds")
	proto.RegisterType((*PB_ChatParam_EditMessage)(nil), "PB_ChatParam_EditMessage")
	proto.RegisterType((*PB_ChatResponse_EditMessage)(nil), "PB_ChatResponse_EditMessage")
	proto.RegisterType((*PB_ChatParam_GetChatList)(nil), "PB_ChatParam_GetChatList")
	proto.RegisterType((*PB_ChatResponse_GetChatList)(nil), "PB_ChatResponse_GetChatList")
	proto.RegisterType((*PB_ChatParam_GetChatHistoryToOlder)(nil), "PB_ChatParam_GetChatHistoryToOlder")
	proto.RegisterType((*PB_ChatResponse_GetChatHistoryToOlder)(nil), "PB_ChatResponse_GetChatHistoryToOlder")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for RPC_Chat service

type RPC_ChatClient interface {
	AddNewMessage(ctx context.Context, in *PB_ChatParam_AddNewMessage, opts ...grpc.CallOption) (*PB_ChatResponse_AddNewMessage, error)
	SetRoomActionDoing(ctx context.Context, in *PB_ChatParam_SetRoomActionDoing, opts ...grpc.CallOption) (*PB_ChatResponse_SetRoomActionDoing, error)
	SetMessagesAsReceived(ctx context.Context, in *PB_ChatParam_SetMessagesAsReceived, opts ...grpc.CallOption) (*PB_ChatResponse_SetMessagesAsReceived, error)
	SetMessagesRangeAsSeen(ctx context.Context, in *PB_ChatParam_SetChatMessagesRangeAsSeen, opts ...grpc.CallOption) (*PB_ChatResponse_SetChatMessagesRangeAsSeen, error)
	DeleteChatHistory(ctx context.Context, in *PB_ChatParam_DeleteChatHistory, opts ...grpc.CallOption) (*PB_ChatResponse_DeleteChatHistory, error)
	DeleteMessagesByIds(ctx context.Context, in *PB_ChatParam_DeleteMessagesByIds, opts ...grpc.CallOption) (*PB_ChatResponse_DeleteMessagesByIds, error)
	EditMessage(ctx context.Context, in *PB_ChatParam_EditMessage, opts ...grpc.CallOption) (*PB_ChatResponse_EditMessage, error)
	GetChatList(ctx context.Context, in *PB_ChatParam_GetChatList, opts ...grpc.CallOption) (*PB_ChatResponse_GetChatList, error)
	GetChatHistoryToOlder(ctx context.Context, in *PB_ChatParam_GetChatHistoryToOlder, opts ...grpc.CallOption) (*PB_ChatResponse_GetChatHistoryToOlder, error)
}

type rPC_ChatClient struct {
	cc *grpc.ClientConn
}

func NewRPC_ChatClient(cc *grpc.ClientConn) RPC_ChatClient {
	return &rPC_ChatClient{cc}
}

func (c *rPC_ChatClient) AddNewMessage(ctx context.Context, in *PB_ChatParam_AddNewMessage, opts ...grpc.CallOption) (*PB_ChatResponse_AddNewMessage, error) {
	out := new(PB_ChatResponse_AddNewMessage)
	err := grpc.Invoke(ctx, "/RPC_Chat/AddNewMessage", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPC_ChatClient) SetRoomActionDoing(ctx context.Context, in *PB_ChatParam_SetRoomActionDoing, opts ...grpc.CallOption) (*PB_ChatResponse_SetRoomActionDoing, error) {
	out := new(PB_ChatResponse_SetRoomActionDoing)
	err := grpc.Invoke(ctx, "/RPC_Chat/SetRoomActionDoing", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPC_ChatClient) SetMessagesAsReceived(ctx context.Context, in *PB_ChatParam_SetMessagesAsReceived, opts ...grpc.CallOption) (*PB_ChatResponse_SetMessagesAsReceived, error) {
	out := new(PB_ChatResponse_SetMessagesAsReceived)
	err := grpc.Invoke(ctx, "/RPC_Chat/SetMessagesAsReceived", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPC_ChatClient) SetMessagesRangeAsSeen(ctx context.Context, in *PB_ChatParam_SetChatMessagesRangeAsSeen, opts ...grpc.CallOption) (*PB_ChatResponse_SetChatMessagesRangeAsSeen, error) {
	out := new(PB_ChatResponse_SetChatMessagesRangeAsSeen)
	err := grpc.Invoke(ctx, "/RPC_Chat/SetMessagesRangeAsSeen", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPC_ChatClient) DeleteChatHistory(ctx context.Context, in *PB_ChatParam_DeleteChatHistory, opts ...grpc.CallOption) (*PB_ChatResponse_DeleteChatHistory, error) {
	out := new(PB_ChatResponse_DeleteChatHistory)
	err := grpc.Invoke(ctx, "/RPC_Chat/DeleteChatHistory", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPC_ChatClient) DeleteMessagesByIds(ctx context.Context, in *PB_ChatParam_DeleteMessagesByIds, opts ...grpc.CallOption) (*PB_ChatResponse_DeleteMessagesByIds, error) {
	out := new(PB_ChatResponse_DeleteMessagesByIds)
	err := grpc.Invoke(ctx, "/RPC_Chat/DeleteMessagesByIds", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPC_ChatClient) EditMessage(ctx context.Context, in *PB_ChatParam_EditMessage, opts ...grpc.CallOption) (*PB_ChatResponse_EditMessage, error) {
	out := new(PB_ChatResponse_EditMessage)
	err := grpc.Invoke(ctx, "/RPC_Chat/EditMessage", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPC_ChatClient) GetChatList(ctx context.Context, in *PB_ChatParam_GetChatList, opts ...grpc.CallOption) (*PB_ChatResponse_GetChatList, error) {
	out := new(PB_ChatResponse_GetChatList)
	err := grpc.Invoke(ctx, "/RPC_Chat/GetChatList", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPC_ChatClient) GetChatHistoryToOlder(ctx context.Context, in *PB_ChatParam_GetChatHistoryToOlder, opts ...grpc.CallOption) (*PB_ChatResponse_GetChatHistoryToOlder, error) {
	out := new(PB_ChatResponse_GetChatHistoryToOlder)
	err := grpc.Invoke(ctx, "/RPC_Chat/GetChatHistoryToOlder", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for RPC_Chat service

type RPC_ChatServer interface {
	AddNewMessage(context.Context, *PB_ChatParam_AddNewMessage) (*PB_ChatResponse_AddNewMessage, error)
	SetRoomActionDoing(context.Context, *PB_ChatParam_SetRoomActionDoing) (*PB_ChatResponse_SetRoomActionDoing, error)
	SetMessagesAsReceived(context.Context, *PB_ChatParam_SetMessagesAsReceived) (*PB_ChatResponse_SetMessagesAsReceived, error)
	SetMessagesRangeAsSeen(context.Context, *PB_ChatParam_SetChatMessagesRangeAsSeen) (*PB_ChatResponse_SetChatMessagesRangeAsSeen, error)
	DeleteChatHistory(context.Context, *PB_ChatParam_DeleteChatHistory) (*PB_ChatResponse_DeleteChatHistory, error)
	DeleteMessagesByIds(context.Context, *PB_ChatParam_DeleteMessagesByIds) (*PB_ChatResponse_DeleteMessagesByIds, error)
	EditMessage(context.Context, *PB_ChatParam_EditMessage) (*PB_ChatResponse_EditMessage, error)
	GetChatList(context.Context, *PB_ChatParam_GetChatList) (*PB_ChatResponse_GetChatList, error)
	GetChatHistoryToOlder(context.Context, *PB_ChatParam_GetChatHistoryToOlder) (*PB_ChatResponse_GetChatHistoryToOlder, error)
}

func RegisterRPC_ChatServer(s *grpc.Server, srv RPC_ChatServer) {
	s.RegisterService(&_RPC_Chat_serviceDesc, srv)
}

func _RPC_Chat_AddNewMessage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PB_ChatParam_AddNewMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPC_ChatServer).AddNewMessage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/RPC_Chat/AddNewMessage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPC_ChatServer).AddNewMessage(ctx, req.(*PB_ChatParam_AddNewMessage))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPC_Chat_SetRoomActionDoing_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PB_ChatParam_SetRoomActionDoing)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPC_ChatServer).SetRoomActionDoing(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/RPC_Chat/SetRoomActionDoing",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPC_ChatServer).SetRoomActionDoing(ctx, req.(*PB_ChatParam_SetRoomActionDoing))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPC_Chat_SetMessagesAsReceived_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PB_ChatParam_SetMessagesAsReceived)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPC_ChatServer).SetMessagesAsReceived(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/RPC_Chat/SetMessagesAsReceived",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPC_ChatServer).SetMessagesAsReceived(ctx, req.(*PB_ChatParam_SetMessagesAsReceived))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPC_Chat_SetMessagesRangeAsSeen_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PB_ChatParam_SetChatMessagesRangeAsSeen)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPC_ChatServer).SetMessagesRangeAsSeen(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/RPC_Chat/SetMessagesRangeAsSeen",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPC_ChatServer).SetMessagesRangeAsSeen(ctx, req.(*PB_ChatParam_SetChatMessagesRangeAsSeen))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPC_Chat_DeleteChatHistory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PB_ChatParam_DeleteChatHistory)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPC_ChatServer).DeleteChatHistory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/RPC_Chat/DeleteChatHistory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPC_ChatServer).DeleteChatHistory(ctx, req.(*PB_ChatParam_DeleteChatHistory))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPC_Chat_DeleteMessagesByIds_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PB_ChatParam_DeleteMessagesByIds)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPC_ChatServer).DeleteMessagesByIds(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/RPC_Chat/DeleteMessagesByIds",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPC_ChatServer).DeleteMessagesByIds(ctx, req.(*PB_ChatParam_DeleteMessagesByIds))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPC_Chat_EditMessage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PB_ChatParam_EditMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPC_ChatServer).EditMessage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/RPC_Chat/EditMessage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPC_ChatServer).EditMessage(ctx, req.(*PB_ChatParam_EditMessage))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPC_Chat_GetChatList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PB_ChatParam_GetChatList)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPC_ChatServer).GetChatList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/RPC_Chat/GetChatList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPC_ChatServer).GetChatList(ctx, req.(*PB_ChatParam_GetChatList))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPC_Chat_GetChatHistoryToOlder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PB_ChatParam_GetChatHistoryToOlder)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPC_ChatServer).GetChatHistoryToOlder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/RPC_Chat/GetChatHistoryToOlder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPC_ChatServer).GetChatHistoryToOlder(ctx, req.(*PB_ChatParam_GetChatHistoryToOlder))
	}
	return interceptor(ctx, in, info, handler)
}

var _RPC_Chat_serviceDesc = grpc.ServiceDesc{
	ServiceName: "RPC_Chat",
	HandlerType: (*RPC_ChatServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddNewMessage",
			Handler:    _RPC_Chat_AddNewMessage_Handler,
		},
		{
			MethodName: "SetRoomActionDoing",
			Handler:    _RPC_Chat_SetRoomActionDoing_Handler,
		},
		{
			MethodName: "SetMessagesAsReceived",
			Handler:    _RPC_Chat_SetMessagesAsReceived_Handler,
		},
		{
			MethodName: "SetMessagesRangeAsSeen",
			Handler:    _RPC_Chat_SetMessagesRangeAsSeen_Handler,
		},
		{
			MethodName: "DeleteChatHistory",
			Handler:    _RPC_Chat_DeleteChatHistory_Handler,
		},
		{
			MethodName: "DeleteMessagesByIds",
			Handler:    _RPC_Chat_DeleteMessagesByIds_Handler,
		},
		{
			MethodName: "EditMessage",
			Handler:    _RPC_Chat_EditMessage_Handler,
		},
		{
			MethodName: "GetChatList",
			Handler:    _RPC_Chat_GetChatList_Handler,
		},
		{
			MethodName: "GetChatHistoryToOlder",
			Handler:    _RPC_Chat_GetChatHistoryToOlder_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pb_rpc_chat.proto",
}

func init() { proto.RegisterFile("pb_rpc_chat.proto", fileDescriptor3) }

var fileDescriptor3 = []byte{
	// 805 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x56, 0xeb, 0x6e, 0xdb, 0x36,
	0x14, 0x86, 0xaa, 0xba, 0x73, 0x8e, 0xeb, 0x6e, 0xe6, 0xda, 0x41, 0x53, 0xdb, 0x54, 0xa5, 0xd3,
	0xd5, 0xc8, 0x02, 0x02, 0xf3, 0xb6, 0x07, 0xb0, 0x73, 0xc7, 0x9c, 0xcc, 0x60, 0x8c, 0x61, 0xd8,
	0x80, 0x78, 0xb2, 0x45, 0x24, 0xc2, 0x2c, 0x53, 0x13, 0x95, 0x38, 0xfe, 0xb7, 0xb7, 0xd8, 0xcb,
	0xec, 0x6d, 0xf6, 0x22, 0x03, 0x69, 0xc9, 0xa5, 0x2e, 0x91, 0xfd, 0x2b, 0xfa, 0x0e, 0x0f, 0x79,
	0xbe, 0x73, 0xfb, 0x62, 0x68, 0x85, 0x93, 0x71, 0x14, 0x4e, 0xc7, 0xd3, 0x5b, 0x37, 0x26, 0x61,
	0xc4, 0x63, 0x6e, 0x37, 0xc3, 0xc9, 0x98, 0xcd, 0xef, 0x82, 0x04, 0xbe, 0x08, 0x27, 0xe3, 0x7b,
	0x9f, 0x2d, 0xc4, 0x0a, 0xe3, 0x3f, 0xc1, 0x1e, 0xf6, 0xc7, 0x87, 0xb7, 0x6e, 0x3c, 0x74, 0x23,
	0x37, 0x18, 0xf7, 0x3c, 0xef, 0x92, 0x2d, 0x2e, 0x98, 0x10, 0xee, 0x0d, 0x43, 0xdf, 0x41, 0x23,
	0xf9, 0xfc, 0xc5, 0x67, 0x0b, 0xcb, 0x70, 0x8c, 0x4e, 0xa3, 0xfb, 0x39, 0x19, 0xf6, 0xc7, 0x9a,
	0x99, 0xea, 0x3e, 0xc8, 0x86, 0xfa, 0x89, 0x3f, 0x63, 0xfd, 0x19, 0x9f, 0x58, 0xe0, 0x18, 0x9d,
	0xe7, 0x74, 0x8d, 0x31, 0x85, 0xb7, 0x49, 0x30, 0xca, 0x44, 0xc8, 0xe7, 0x82, 0x55, 0xc7, 0x7b,
	0xb2, 0x39, 0x1e, 0xfe, 0xc7, 0x80, 0x77, 0x99, 0x0c, 0xae, 0x58, 0x4c, 0x39, 0x0f, 0x7a, 0xd3,
	0xd8, 0xe7, 0xf3, 0x23, 0xee, 0xcf, 0x6f, 0x90, 0x05, 0x9f, 0x9d, 0x46, 0xfc, 0x2e, 0x3c, 0xf7,
	0x54, 0x0a, 0x26, 0x4d, 0x21, 0xda, 0x83, 0xe6, 0x91, 0x1f, 0xb1, 0xa9, 0xba, 0xf2, 0x13, 0x5b,
	0xaa, 0x90, 0x3b, 0x34, 0x6b, 0x44, 0x3f, 0x00, 0xac, 0x9e, 0x1b, 0x2d, 0x43, 0x66, 0x99, 0x8e,
	0xd1, 0x79, 0xd1, 0x7d, 0x49, 0x72, 0x51, 0x8e, 0xe7, 0x77, 0x01, 0xd5, 0xfc, 0xf0, 0x1e, 0xe0,
	0x7c, 0xb6, 0x45, 0x6e, 0xf8, 0x7a, 0xed, 0xb5, 0xa6, 0x9f, 0xa4, 0x27, 0x7a, 0x82, 0xb2, 0x29,
	0xf3, 0xef, 0x99, 0x27, 0x33, 0x48, 0x19, 0x1a, 0x8a, 0x61, 0x0a, 0xd1, 0x2e, 0x40, 0xe2, 0x7f,
	0xee, 0x09, 0xcb, 0x74, 0xcc, 0x8e, 0x49, 0x35, 0x0b, 0xfe, 0x08, 0x1f, 0x4a, 0x58, 0x14, 0x43,
	0xe0, 0xff, 0x0c, 0xf8, 0x98, 0x67, 0x22, 0x41, 0xea, 0x4a, 0xdd, 0xf9, 0x0d, 0xeb, 0x89, 0x2b,
	0xc6, 0xe6, 0x15, 0x74, 0x08, 0xa0, 0x93, 0x88, 0x07, 0x3f, 0xcf, 0x3c, 0x16, 0xad, 0x59, 0xa8,
	0xaa, 0x9a, 0xb4, 0xe4, 0x04, 0x1d, 0x40, 0x6b, 0xc4, 0xc3, 0x4b, 0xb6, 0xd0, 0xdd, 0x4d, 0xe5,
	0x5e, 0x3c, 0x40, 0x0e, 0x34, 0x06, 0xae, 0x88, 0xaf, 0xd8, 0x5f, 0x92, 0x86, 0xf5, 0xd4, 0x31,
	0x3a, 0x35, 0xaa, 0x9b, 0x64, 0x39, 0xe4, 0xdf, 0x91, 0x1f, 0xb0, 0x0b, 0x61, 0xd5, 0xd4, 0x43,
	0x9a, 0x05, 0x1f, 0xc0, 0x7e, 0x49, 0x39, 0x1e, 0xc9, 0x13, 0xff, 0x01, 0xbb, 0x99, 0x92, 0x1c,
	0xb1, 0x19, 0x8b, 0x99, 0xc4, 0x67, 0xbe, 0x88, 0x79, 0xb4, 0x94, 0x95, 0x90, 0x50, 0xab, 0x44,
	0x02, 0xe5, 0x68, 0xc9, 0x7c, 0xf3, 0x45, 0xc8, 0x1a, 0x71, 0x1b, 0xde, 0xe7, 0xf9, 0x14, 0x82,
	0xe0, 0x08, 0x9c, 0x12, 0x1a, 0x29, 0xe1, 0xfe, 0xf2, 0xdc, 0x13, 0x15, 0x44, 0x10, 0x3c, 0xed,
	0xf3, 0xf8, 0x56, 0xc5, 0xaf, 0x53, 0xf5, 0x2d, 0x0b, 0x99, 0x5e, 0x97, 0x63, 0x03, 0x6a, 0x6c,
	0x74, 0x13, 0xfe, 0x00, 0xed, 0x72, 0x62, 0x99, 0xb0, 0x78, 0x06, 0x56, 0x86, 0xda, 0xb1, 0xe7,
	0xa7, 0x95, 0xac, 0x98, 0x92, 0x37, 0xb0, 0x93, 0xef, 0xf6, 0x27, 0x83, 0xbc, 0x77, 0xc9, 0x16,
	0x23, 0xf6, 0x10, 0xab, 0x0e, 0xef, 0xd0, 0x14, 0xe2, 0xb7, 0xf0, 0x3a, 0x4f, 0x4a, 0x0b, 0x88,
	0xed, 0x1c, 0x99, 0xd3, 0x55, 0x67, 0x07, 0xbe, 0x88, 0x71, 0xaf, 0x78, 0x55, 0x3b, 0x46, 0x18,
	0x6a, 0xf2, 0x5b, 0x58, 0x4f, 0x1c, 0xb3, 0xd3, 0xe8, 0x3e, 0x27, 0x89, 0xb3, 0x12, 0x9c, 0xd5,
	0x11, 0xfe, 0xdb, 0xc8, 0xed, 0x6a, 0xf2, 0x40, 0xd2, 0xa6, 0x11, 0x57, 0xb3, 0x5d, 0xd1, 0x89,
	0x97, 0x50, 0x1b, 0xf8, 0x81, 0x1f, 0xab, 0x56, 0xd4, 0xe8, 0x0a, 0xa0, 0x7d, 0xf8, 0x42, 0xce,
	0xc4, 0x88, 0x87, 0xf9, 0x9a, 0x14, 0xec, 0xf8, 0xa1, 0xb8, 0xcd, 0xe5, 0x24, 0x7e, 0x84, 0x66,
	0xda, 0x28, 0x99, 0x42, 0x9a, 0x57, 0x41, 0x4b, 0xb3, 0x5e, 0x92, 0xfb, 0x99, 0x2b, 0x2e, 0x78,
	0xb4, 0x92, 0xb9, 0x3a, 0x4d, 0x61, 0xf7, 0xdf, 0x67, 0x50, 0xa7, 0xc3, 0x43, 0x15, 0x1b, 0x0d,
	0xa0, 0x99, 0x15, 0xee, 0xd7, 0xe4, 0xf1, 0xff, 0x22, 0xf6, 0x2e, 0xa9, 0x56, 0xfd, 0xdf, 0x01,
	0x95, 0x88, 0xb6, 0x43, 0x36, 0xc8, 0xba, 0xdd, 0x26, 0x9b, 0xf5, 0x15, 0x79, 0xf0, 0xaa, 0x5c,
	0x52, 0xdb, 0x64, 0xb3, 0xee, 0xda, 0xdf, 0x90, 0xad, 0xc4, 0x13, 0x71, 0xf8, 0x4a, 0x3b, 0xd0,
	0xa5, 0xb2, 0x43, 0xb6, 0x14, 0x55, 0xfb, 0x5b, 0xb2, 0xbd, 0x32, 0xa1, 0x5f, 0xa1, 0x55, 0x14,
	0xa3, 0x77, 0xa4, 0x5a, 0xad, 0x6c, 0x4c, 0x36, 0x8a, 0x0d, 0xba, 0x86, 0x2f, 0xcb, 0xf4, 0xe5,
	0x3d, 0xd9, 0x24, 0x41, 0xf6, 0x1e, 0xd9, 0x42, 0x31, 0xd0, 0x09, 0x34, 0x74, 0x91, 0xf8, 0x9a,
	0x3c, 0xa6, 0x1f, 0xf6, 0x1b, 0x52, 0xb1, 0xec, 0xf2, 0x1d, 0x7d, 0x81, 0x73, 0xef, 0x68, 0x47,
	0x25, 0xef, 0xe8, 0x17, 0x3d, 0x78, 0x55, 0xbe, 0x42, 0x6d, 0xb2, 0x79, 0xd9, 0x4b, 0x06, 0xa4,
	0xd4, 0xaf, 0xdf, 0x82, 0xba, 0x1f, 0x91, 0x40, 0x90, 0x70, 0x72, 0x66, 0x0e, 0x8d, 0xdf, 0x8c,
	0x87, 0xc9, 0x33, 0xf5, 0x0b, 0xec, 0xfb, 0xff, 0x03, 0x00, 0x00, 0xff, 0xff, 0xbd, 0x40, 0xdf,
	0x5d, 0xb5, 0x09, 0x00, 0x00,
}
