// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pb_global.proto

package x

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type PB_CommandToServer struct {
	ClientCallId   int64  `protobuf:"varint,1,opt,name=ClientCallId" json:"ClientCallId,omitempty"`
	Command        string `protobuf:"bytes,2,opt,name=Command" json:"Command,omitempty"`
	RespondReached bool   `protobuf:"varint,3,opt,name=RespondReached" json:"RespondReached,omitempty"`
	Data           []byte `protobuf:"bytes,4,opt,name=Data,proto3" json:"Data,omitempty"`
}

func (m *PB_CommandToServer) Reset()                    { *m = PB_CommandToServer{} }
func (m *PB_CommandToServer) String() string            { return proto.CompactTextString(m) }
func (*PB_CommandToServer) ProtoMessage()               {}
func (*PB_CommandToServer) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *PB_CommandToServer) GetClientCallId() int64 {
	if m != nil {
		return m.ClientCallId
	}
	return 0
}

func (m *PB_CommandToServer) GetCommand() string {
	if m != nil {
		return m.Command
	}
	return ""
}

func (m *PB_CommandToServer) GetRespondReached() bool {
	if m != nil {
		return m.RespondReached
	}
	return false
}

func (m *PB_CommandToServer) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type PB_CommandToClient struct {
	ServerCallId   int64  `protobuf:"varint,1,opt,name=ServerCallId" json:"ServerCallId,omitempty"`
	Command        string `protobuf:"bytes,2,opt,name=Command" json:"Command,omitempty"`
	RespondReached bool   `protobuf:"varint,3,opt,name=RespondReached" json:"RespondReached,omitempty"`
	Data           []byte `protobuf:"bytes,4,opt,name=Data,proto3" json:"Data,omitempty"`
}

func (m *PB_CommandToClient) Reset()                    { *m = PB_CommandToClient{} }
func (m *PB_CommandToClient) String() string            { return proto.CompactTextString(m) }
func (*PB_CommandToClient) ProtoMessage()               {}
func (*PB_CommandToClient) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *PB_CommandToClient) GetServerCallId() int64 {
	if m != nil {
		return m.ServerCallId
	}
	return 0
}

func (m *PB_CommandToClient) GetCommand() string {
	if m != nil {
		return m.Command
	}
	return ""
}

func (m *PB_CommandToClient) GetRespondReached() bool {
	if m != nil {
		return m.RespondReached
	}
	return false
}

func (m *PB_CommandToClient) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type PB_CommandReachedToServer struct {
	ClientCallId int64 `protobuf:"varint,1,opt,name=ClientCallId" json:"ClientCallId,omitempty"`
}

func (m *PB_CommandReachedToServer) Reset()                    { *m = PB_CommandReachedToServer{} }
func (m *PB_CommandReachedToServer) String() string            { return proto.CompactTextString(m) }
func (*PB_CommandReachedToServer) ProtoMessage()               {}
func (*PB_CommandReachedToServer) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

func (m *PB_CommandReachedToServer) GetClientCallId() int64 {
	if m != nil {
		return m.ClientCallId
	}
	return 0
}

type PB_CommandReachedToClient struct {
	ServerCallId int64 `protobuf:"varint,1,opt,name=ServerCallId" json:"ServerCallId,omitempty"`
}

func (m *PB_CommandReachedToClient) Reset()                    { *m = PB_CommandReachedToClient{} }
func (m *PB_CommandReachedToClient) String() string            { return proto.CompactTextString(m) }
func (*PB_CommandReachedToClient) ProtoMessage()               {}
func (*PB_CommandReachedToClient) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{3} }

func (m *PB_CommandReachedToClient) GetServerCallId() int64 {
	if m != nil {
		return m.ServerCallId
	}
	return 0
}

type PB_ResponseToClient struct {
	ClientCallId int64  `protobuf:"varint,1,opt,name=ClientCallId" json:"ClientCallId,omitempty"`
	PBClass      string `protobuf:"bytes,2,opt,name=PBClass" json:"PBClass,omitempty"`
	RpcFullName  string `protobuf:"bytes,3,opt,name=RpcFullName" json:"RpcFullName,omitempty"`
	Data         []byte `protobuf:"bytes,4,opt,name=Data,proto3" json:"Data,omitempty"`
}

func (m *PB_ResponseToClient) Reset()                    { *m = PB_ResponseToClient{} }
func (m *PB_ResponseToClient) String() string            { return proto.CompactTextString(m) }
func (*PB_ResponseToClient) ProtoMessage()               {}
func (*PB_ResponseToClient) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{4} }

func (m *PB_ResponseToClient) GetClientCallId() int64 {
	if m != nil {
		return m.ClientCallId
	}
	return 0
}

func (m *PB_ResponseToClient) GetPBClass() string {
	if m != nil {
		return m.PBClass
	}
	return ""
}

func (m *PB_ResponseToClient) GetRpcFullName() string {
	if m != nil {
		return m.RpcFullName
	}
	return ""
}

func (m *PB_ResponseToClient) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

// /////////////////////
type PB_ResponseExtra struct {
	ErrorCode   int64  `protobuf:"varint,1,opt,name=ErrorCode" json:"ErrorCode,omitempty"`
	ErrMessage  string `protobuf:"bytes,2,opt,name=ErrMessage" json:"ErrMessage,omitempty"`
	RpcFullName string `protobuf:"bytes,3,opt,name=RpcFullName" json:"RpcFullName,omitempty"`
	Data        []byte `protobuf:"bytes,4,opt,name=Data,proto3" json:"Data,omitempty"`
}

func (m *PB_ResponseExtra) Reset()                    { *m = PB_ResponseExtra{} }
func (m *PB_ResponseExtra) String() string            { return proto.CompactTextString(m) }
func (*PB_ResponseExtra) ProtoMessage()               {}
func (*PB_ResponseExtra) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{5} }

func (m *PB_ResponseExtra) GetErrorCode() int64 {
	if m != nil {
		return m.ErrorCode
	}
	return 0
}

func (m *PB_ResponseExtra) GetErrMessage() string {
	if m != nil {
		return m.ErrMessage
	}
	return ""
}

func (m *PB_ResponseExtra) GetRpcFullName() string {
	if m != nil {
		return m.RpcFullName
	}
	return ""
}

func (m *PB_ResponseExtra) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type PB_Pager struct {
	Page  int64 `protobuf:"varint,1,opt,name=Page" json:"Page,omitempty"`
	Limit int64 `protobuf:"varint,2,opt,name=Limit" json:"Limit,omitempty"`
	Last  int64 `protobuf:"varint,3,opt,name=Last" json:"Last,omitempty"`
}

func (m *PB_Pager) Reset()                    { *m = PB_Pager{} }
func (m *PB_Pager) String() string            { return proto.CompactTextString(m) }
func (*PB_Pager) ProtoMessage()               {}
func (*PB_Pager) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{6} }

func (m *PB_Pager) GetPage() int64 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *PB_Pager) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *PB_Pager) GetLast() int64 {
	if m != nil {
		return m.Last
	}
	return 0
}

func init() {
	proto.RegisterType((*PB_CommandToServer)(nil), "PB_CommandToServer")
	proto.RegisterType((*PB_CommandToClient)(nil), "PB_CommandToClient")
	proto.RegisterType((*PB_CommandReachedToServer)(nil), "PB_CommandReachedToServer")
	proto.RegisterType((*PB_CommandReachedToClient)(nil), "PB_CommandReachedToClient")
	proto.RegisterType((*PB_ResponseToClient)(nil), "PB_ResponseToClient")
	proto.RegisterType((*PB_ResponseExtra)(nil), "PB_ResponseExtra")
	proto.RegisterType((*PB_Pager)(nil), "PB_Pager")
}

func init() { proto.RegisterFile("pb_global.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 337 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x93, 0xcd, 0x4a, 0xfb, 0x40,
	0x14, 0xc5, 0x99, 0x7f, 0xfa, 0xd7, 0xf6, 0x5a, 0xfc, 0x18, 0x5d, 0x44, 0x10, 0x09, 0x5d, 0x48,
	0x56, 0xdd, 0xf8, 0x00, 0x42, 0x62, 0xa5, 0x42, 0x95, 0x30, 0xba, 0x72, 0x13, 0x6e, 0x9a, 0x4b,
	0x0d, 0x4c, 0x3a, 0x61, 0x26, 0x4a, 0x9f, 0x40, 0x70, 0xe3, 0x33, 0x4b, 0x26, 0x29, 0x4d, 0xfd,
	0x80, 0x2a, 0xb8, 0x3b, 0xf7, 0x64, 0x6e, 0xce, 0x2f, 0x27, 0x0c, 0xec, 0x15, 0x49, 0x3c, 0x93,
	0x2a, 0x41, 0x39, 0x2c, 0xb4, 0x2a, 0xd5, 0xe0, 0x8d, 0x01, 0x8f, 0x82, 0x38, 0x54, 0x79, 0x8e,
	0xf3, 0xf4, 0x5e, 0xdd, 0x91, 0x7e, 0x26, 0xcd, 0x07, 0xd0, 0x0f, 0x65, 0x46, 0xf3, 0x32, 0x44,
	0x29, 0xaf, 0x53, 0x97, 0x79, 0xcc, 0x77, 0xc4, 0x9a, 0xc7, 0x5d, 0xd8, 0x6e, 0xd6, 0xdc, 0x7f,
	0x1e, 0xf3, 0x7b, 0x62, 0x39, 0xf2, 0x33, 0xd8, 0x15, 0x64, 0x0a, 0x35, 0x4f, 0x05, 0xe1, 0xf4,
	0x91, 0x52, 0xd7, 0xf1, 0x98, 0xdf, 0x15, 0x1f, 0x5c, 0xce, 0xa1, 0x73, 0x89, 0x25, 0xba, 0x1d,
	0x8f, 0xf9, 0x7d, 0x61, 0xf5, 0x27, 0xa0, 0x3a, 0xb2, 0x02, 0xaa, 0xd1, 0xd6, 0x81, 0xda, 0xde,
	0x1f, 0x01, 0x5d, 0xc0, 0xf1, 0x8a, 0xa7, 0x39, 0xf8, 0x93, 0x9e, 0xbe, 0x79, 0xc1, 0xe6, 0xdf,
	0x35, 0x78, 0x65, 0x70, 0x18, 0x05, 0x71, 0xcd, 0x6a, 0xa8, 0xbd, 0xbb, 0xc9, 0x4f, 0x8a, 0x82,
	0x50, 0xa2, 0x31, 0xcb, 0x4e, 0x9a, 0x91, 0x7b, 0xb0, 0x23, 0x8a, 0xe9, 0xd5, 0x93, 0x94, 0xb7,
	0x98, 0x93, 0x2d, 0xa4, 0x27, 0xda, 0xd6, 0x97, 0x6d, 0xbc, 0x30, 0xd8, 0x6f, 0xb1, 0x8c, 0x16,
	0xa5, 0x46, 0x7e, 0x02, 0xbd, 0x91, 0xd6, 0x4a, 0x87, 0x2a, 0xa5, 0x86, 0x62, 0x65, 0xf0, 0x53,
	0x80, 0x91, 0xd6, 0x37, 0x64, 0x0c, 0xce, 0xa8, 0xa1, 0x68, 0x39, 0xbf, 0x04, 0x19, 0x43, 0x37,
	0x0a, 0xe2, 0x08, 0x67, 0xa4, 0xab, 0xe7, 0x95, 0x68, 0xa2, 0xad, 0xe6, 0x47, 0xf0, 0x7f, 0x92,
	0xe5, 0x59, 0x69, 0x03, 0x1d, 0x51, 0x0f, 0xd5, 0xc9, 0x09, 0x9a, 0xd2, 0x86, 0x38, 0xc2, 0xea,
	0xe0, 0x00, 0xba, 0x99, 0x1e, 0xe6, 0x66, 0x58, 0x24, 0x63, 0x27, 0x62, 0x0f, 0x6c, 0x91, 0x6c,
	0xd9, 0xcb, 0x71, 0xfe, 0x1e, 0x00, 0x00, 0xff, 0xff, 0x49, 0xe9, 0x28, 0x42, 0x2f, 0x03, 0x00,
	0x00,
}
