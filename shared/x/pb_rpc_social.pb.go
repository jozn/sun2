// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pb_rpc_social.proto

package x

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type RPC_Social_Types struct {
}

func (m *RPC_Social_Types) Reset()                    { *m = RPC_Social_Types{} }
func (m *RPC_Social_Types) String() string            { return proto.CompactTextString(m) }
func (*RPC_Social_Types) ProtoMessage()               {}
func (*RPC_Social_Types) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{0} }

type RPC_Social_Types_AddComment struct {
}

func (m *RPC_Social_Types_AddComment) Reset()                    { *m = RPC_Social_Types_AddComment{} }
func (m *RPC_Social_Types_AddComment) String() string            { return proto.CompactTextString(m) }
func (*RPC_Social_Types_AddComment) ProtoMessage()               {}
func (*RPC_Social_Types_AddComment) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{0, 0} }

type RPC_Social_Types_AddComment_Param struct {
	PostId   int64  `protobuf:"varint,1,opt,name=PostId" json:"PostId,omitempty"`
	Text     string `protobuf:"bytes,2,opt,name=Text" json:"Text,omitempty"`
	RandHash int64  `protobuf:"varint,3,opt,name=RandHash" json:"RandHash,omitempty"`
}

func (m *RPC_Social_Types_AddComment_Param) Reset()         { *m = RPC_Social_Types_AddComment_Param{} }
func (m *RPC_Social_Types_AddComment_Param) String() string { return proto.CompactTextString(m) }
func (*RPC_Social_Types_AddComment_Param) ProtoMessage()    {}
func (*RPC_Social_Types_AddComment_Param) Descriptor() ([]byte, []int) {
	return fileDescriptor7, []int{0, 0, 0}
}

func (m *RPC_Social_Types_AddComment_Param) GetPostId() int64 {
	if m != nil {
		return m.PostId
	}
	return 0
}

func (m *RPC_Social_Types_AddComment_Param) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func (m *RPC_Social_Types_AddComment_Param) GetRandHash() int64 {
	if m != nil {
		return m.RandHash
	}
	return 0
}

type RPC_Social_Types_AddComment_Response struct {
	Done    bool            `protobuf:"varint,1,opt,name=Done" json:"Done,omitempty"`
	Error   *PB_Error       `protobuf:"bytes,2,opt,name=Error" json:"Error,omitempty"`
	Comment *PB_CommentView `protobuf:"bytes,3,opt,name=Comment" json:"Comment,omitempty"`
}

func (m *RPC_Social_Types_AddComment_Response) Reset()         { *m = RPC_Social_Types_AddComment_Response{} }
func (m *RPC_Social_Types_AddComment_Response) String() string { return proto.CompactTextString(m) }
func (*RPC_Social_Types_AddComment_Response) ProtoMessage()    {}
func (*RPC_Social_Types_AddComment_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor7, []int{0, 0, 1}
}

func (m *RPC_Social_Types_AddComment_Response) GetDone() bool {
	if m != nil {
		return m.Done
	}
	return false
}

func (m *RPC_Social_Types_AddComment_Response) GetError() *PB_Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *RPC_Social_Types_AddComment_Response) GetComment() *PB_CommentView {
	if m != nil {
		return m.Comment
	}
	return nil
}

type RPC_Social_Types_DeleteComment struct {
}

func (m *RPC_Social_Types_DeleteComment) Reset()         { *m = RPC_Social_Types_DeleteComment{} }
func (m *RPC_Social_Types_DeleteComment) String() string { return proto.CompactTextString(m) }
func (*RPC_Social_Types_DeleteComment) ProtoMessage()    {}
func (*RPC_Social_Types_DeleteComment) Descriptor() ([]byte, []int) {
	return fileDescriptor7, []int{0, 1}
}

type RPC_Social_Types_DeleteComment_Param struct {
	PostId    int64 `protobuf:"varint,1,opt,name=PostId" json:"PostId,omitempty"`
	CommentId int64 `protobuf:"varint,2,opt,name=CommentId" json:"CommentId,omitempty"`
}

func (m *RPC_Social_Types_DeleteComment_Param) Reset()         { *m = RPC_Social_Types_DeleteComment_Param{} }
func (m *RPC_Social_Types_DeleteComment_Param) String() string { return proto.CompactTextString(m) }
func (*RPC_Social_Types_DeleteComment_Param) ProtoMessage()    {}
func (*RPC_Social_Types_DeleteComment_Param) Descriptor() ([]byte, []int) {
	return fileDescriptor7, []int{0, 1, 0}
}

func (m *RPC_Social_Types_DeleteComment_Param) GetPostId() int64 {
	if m != nil {
		return m.PostId
	}
	return 0
}

func (m *RPC_Social_Types_DeleteComment_Param) GetCommentId() int64 {
	if m != nil {
		return m.CommentId
	}
	return 0
}

type RPC_Social_Types_DeleteComment_Response struct {
	Done  bool      `protobuf:"varint,1,opt,name=Done" json:"Done,omitempty"`
	Error *PB_Error `protobuf:"bytes,2,opt,name=Error" json:"Error,omitempty"`
}

func (m *RPC_Social_Types_DeleteComment_Response) Reset() {
	*m = RPC_Social_Types_DeleteComment_Response{}
}
func (m *RPC_Social_Types_DeleteComment_Response) String() string { return proto.CompactTextString(m) }
func (*RPC_Social_Types_DeleteComment_Response) ProtoMessage()    {}
func (*RPC_Social_Types_DeleteComment_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor7, []int{0, 1, 1}
}

func (m *RPC_Social_Types_DeleteComment_Response) GetDone() bool {
	if m != nil {
		return m.Done
	}
	return false
}

func (m *RPC_Social_Types_DeleteComment_Response) GetError() *PB_Error {
	if m != nil {
		return m.Error
	}
	return nil
}

type RPC_Social_Types_EditComment struct {
}

func (m *RPC_Social_Types_EditComment) Reset()                    { *m = RPC_Social_Types_EditComment{} }
func (m *RPC_Social_Types_EditComment) String() string            { return proto.CompactTextString(m) }
func (*RPC_Social_Types_EditComment) ProtoMessage()               {}
func (*RPC_Social_Types_EditComment) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{0, 2} }

type RPC_Social_Types_EditComment_Param struct {
	PostId    int64  `protobuf:"varint,1,opt,name=PostId" json:"PostId,omitempty"`
	CommentId int64  `protobuf:"varint,2,opt,name=CommentId" json:"CommentId,omitempty"`
	Text      string `protobuf:"bytes,3,opt,name=Text" json:"Text,omitempty"`
	RandHash  int64  `protobuf:"varint,4,opt,name=RandHash" json:"RandHash,omitempty"`
}

func (m *RPC_Social_Types_EditComment_Param) Reset()         { *m = RPC_Social_Types_EditComment_Param{} }
func (m *RPC_Social_Types_EditComment_Param) String() string { return proto.CompactTextString(m) }
func (*RPC_Social_Types_EditComment_Param) ProtoMessage()    {}
func (*RPC_Social_Types_EditComment_Param) Descriptor() ([]byte, []int) {
	return fileDescriptor7, []int{0, 2, 0}
}

func (m *RPC_Social_Types_EditComment_Param) GetPostId() int64 {
	if m != nil {
		return m.PostId
	}
	return 0
}

func (m *RPC_Social_Types_EditComment_Param) GetCommentId() int64 {
	if m != nil {
		return m.CommentId
	}
	return 0
}

func (m *RPC_Social_Types_EditComment_Param) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func (m *RPC_Social_Types_EditComment_Param) GetRandHash() int64 {
	if m != nil {
		return m.RandHash
	}
	return 0
}

type RPC_Social_Types_EditComment_Response struct {
	Done    bool            `protobuf:"varint,1,opt,name=Done" json:"Done,omitempty"`
	Error   *PB_Error       `protobuf:"bytes,2,opt,name=Error" json:"Error,omitempty"`
	Comment *PB_CommentView `protobuf:"bytes,3,opt,name=Comment" json:"Comment,omitempty"`
}

func (m *RPC_Social_Types_EditComment_Response) Reset()         { *m = RPC_Social_Types_EditComment_Response{} }
func (m *RPC_Social_Types_EditComment_Response) String() string { return proto.CompactTextString(m) }
func (*RPC_Social_Types_EditComment_Response) ProtoMessage()    {}
func (*RPC_Social_Types_EditComment_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor7, []int{0, 2, 1}
}

func (m *RPC_Social_Types_EditComment_Response) GetDone() bool {
	if m != nil {
		return m.Done
	}
	return false
}

func (m *RPC_Social_Types_EditComment_Response) GetError() *PB_Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *RPC_Social_Types_EditComment_Response) GetComment() *PB_CommentView {
	if m != nil {
		return m.Comment
	}
	return nil
}

// posts
type RPC_Social_Types_AddPost struct {
}

func (m *RPC_Social_Types_AddPost) Reset()                    { *m = RPC_Social_Types_AddPost{} }
func (m *RPC_Social_Types_AddPost) String() string            { return proto.CompactTextString(m) }
func (*RPC_Social_Types_AddPost) ProtoMessage()               {}
func (*RPC_Social_Types_AddPost) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{0, 3} }

type RPC_Social_Types_AddPost_Param struct {
	Text string `protobuf:"bytes,1,opt,name=Text" json:"Text,omitempty"`
	// todo add pic files
	ImageBlob []byte `protobuf:"bytes,2,opt,name=ImageBlob,proto3" json:"ImageBlob,omitempty"`
}

func (m *RPC_Social_Types_AddPost_Param) Reset()         { *m = RPC_Social_Types_AddPost_Param{} }
func (m *RPC_Social_Types_AddPost_Param) String() string { return proto.CompactTextString(m) }
func (*RPC_Social_Types_AddPost_Param) ProtoMessage()    {}
func (*RPC_Social_Types_AddPost_Param) Descriptor() ([]byte, []int) {
	return fileDescriptor7, []int{0, 3, 0}
}

func (m *RPC_Social_Types_AddPost_Param) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func (m *RPC_Social_Types_AddPost_Param) GetImageBlob() []byte {
	if m != nil {
		return m.ImageBlob
	}
	return nil
}

type RPC_Social_Types_AddPost_Response struct {
	Done     bool         `protobuf:"varint,1,opt,name=Done" json:"Done,omitempty"`
	Error    *PB_Error    `protobuf:"bytes,2,opt,name=Error" json:"Error,omitempty"`
	PostView *PB_PostView `protobuf:"bytes,3,opt,name=PostView" json:"PostView,omitempty"`
}

func (m *RPC_Social_Types_AddPost_Response) Reset()         { *m = RPC_Social_Types_AddPost_Response{} }
func (m *RPC_Social_Types_AddPost_Response) String() string { return proto.CompactTextString(m) }
func (*RPC_Social_Types_AddPost_Response) ProtoMessage()    {}
func (*RPC_Social_Types_AddPost_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor7, []int{0, 3, 1}
}

func (m *RPC_Social_Types_AddPost_Response) GetDone() bool {
	if m != nil {
		return m.Done
	}
	return false
}

func (m *RPC_Social_Types_AddPost_Response) GetError() *PB_Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *RPC_Social_Types_AddPost_Response) GetPostView() *PB_PostView {
	if m != nil {
		return m.PostView
	}
	return nil
}

type RPC_Social_Types_EditPost struct {
}

func (m *RPC_Social_Types_EditPost) Reset()                    { *m = RPC_Social_Types_EditPost{} }
func (m *RPC_Social_Types_EditPost) String() string            { return proto.CompactTextString(m) }
func (*RPC_Social_Types_EditPost) ProtoMessage()               {}
func (*RPC_Social_Types_EditPost) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{0, 4} }

type RPC_Social_Types_EditPost_Param struct {
	PostId int64  `protobuf:"varint,1,opt,name=PostId" json:"PostId,omitempty"`
	Text   string `protobuf:"bytes,2,opt,name=Text" json:"Text,omitempty"`
}

func (m *RPC_Social_Types_EditPost_Param) Reset()         { *m = RPC_Social_Types_EditPost_Param{} }
func (m *RPC_Social_Types_EditPost_Param) String() string { return proto.CompactTextString(m) }
func (*RPC_Social_Types_EditPost_Param) ProtoMessage()    {}
func (*RPC_Social_Types_EditPost_Param) Descriptor() ([]byte, []int) {
	return fileDescriptor7, []int{0, 4, 0}
}

func (m *RPC_Social_Types_EditPost_Param) GetPostId() int64 {
	if m != nil {
		return m.PostId
	}
	return 0
}

func (m *RPC_Social_Types_EditPost_Param) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

type RPC_Social_Types_EditPost_Response struct {
	Done     bool         `protobuf:"varint,1,opt,name=Done" json:"Done,omitempty"`
	Error    *PB_Error    `protobuf:"bytes,2,opt,name=Error" json:"Error,omitempty"`
	PostView *PB_PostView `protobuf:"bytes,3,opt,name=PostView" json:"PostView,omitempty"`
}

func (m *RPC_Social_Types_EditPost_Response) Reset()         { *m = RPC_Social_Types_EditPost_Response{} }
func (m *RPC_Social_Types_EditPost_Response) String() string { return proto.CompactTextString(m) }
func (*RPC_Social_Types_EditPost_Response) ProtoMessage()    {}
func (*RPC_Social_Types_EditPost_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor7, []int{0, 4, 1}
}

func (m *RPC_Social_Types_EditPost_Response) GetDone() bool {
	if m != nil {
		return m.Done
	}
	return false
}

func (m *RPC_Social_Types_EditPost_Response) GetError() *PB_Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *RPC_Social_Types_EditPost_Response) GetPostView() *PB_PostView {
	if m != nil {
		return m.PostView
	}
	return nil
}

type RPC_Social_Types_DeletePost struct {
}

func (m *RPC_Social_Types_DeletePost) Reset()                    { *m = RPC_Social_Types_DeletePost{} }
func (m *RPC_Social_Types_DeletePost) String() string            { return proto.CompactTextString(m) }
func (*RPC_Social_Types_DeletePost) ProtoMessage()               {}
func (*RPC_Social_Types_DeletePost) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{0, 5} }

type RPC_Social_Types_DeletePost_Param struct {
	PostId int64 `protobuf:"varint,1,opt,name=PostId" json:"PostId,omitempty"`
}

func (m *RPC_Social_Types_DeletePost_Param) Reset()         { *m = RPC_Social_Types_DeletePost_Param{} }
func (m *RPC_Social_Types_DeletePost_Param) String() string { return proto.CompactTextString(m) }
func (*RPC_Social_Types_DeletePost_Param) ProtoMessage()    {}
func (*RPC_Social_Types_DeletePost_Param) Descriptor() ([]byte, []int) {
	return fileDescriptor7, []int{0, 5, 0}
}

func (m *RPC_Social_Types_DeletePost_Param) GetPostId() int64 {
	if m != nil {
		return m.PostId
	}
	return 0
}

type RPC_Social_Types_DeletePost_Response struct {
	Done  bool      `protobuf:"varint,1,opt,name=Done" json:"Done,omitempty"`
	Error *PB_Error `protobuf:"bytes,2,opt,name=Error" json:"Error,omitempty"`
}

func (m *RPC_Social_Types_DeletePost_Response) Reset()         { *m = RPC_Social_Types_DeletePost_Response{} }
func (m *RPC_Social_Types_DeletePost_Response) String() string { return proto.CompactTextString(m) }
func (*RPC_Social_Types_DeletePost_Response) ProtoMessage()    {}
func (*RPC_Social_Types_DeletePost_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor7, []int{0, 5, 1}
}

func (m *RPC_Social_Types_DeletePost_Response) GetDone() bool {
	if m != nil {
		return m.Done
	}
	return false
}

func (m *RPC_Social_Types_DeletePost_Response) GetError() *PB_Error {
	if m != nil {
		return m.Error
	}
	return nil
}

type RPC_Social_Types_ArchivePost struct {
}

func (m *RPC_Social_Types_ArchivePost) Reset()                    { *m = RPC_Social_Types_ArchivePost{} }
func (m *RPC_Social_Types_ArchivePost) String() string            { return proto.CompactTextString(m) }
func (*RPC_Social_Types_ArchivePost) ProtoMessage()               {}
func (*RPC_Social_Types_ArchivePost) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{0, 6} }

type RPC_Social_Types_ArchivePost_Param struct {
	PostId int64 `protobuf:"varint,1,opt,name=PostId" json:"PostId,omitempty"`
}

func (m *RPC_Social_Types_ArchivePost_Param) Reset()         { *m = RPC_Social_Types_ArchivePost_Param{} }
func (m *RPC_Social_Types_ArchivePost_Param) String() string { return proto.CompactTextString(m) }
func (*RPC_Social_Types_ArchivePost_Param) ProtoMessage()    {}
func (*RPC_Social_Types_ArchivePost_Param) Descriptor() ([]byte, []int) {
	return fileDescriptor7, []int{0, 6, 0}
}

func (m *RPC_Social_Types_ArchivePost_Param) GetPostId() int64 {
	if m != nil {
		return m.PostId
	}
	return 0
}

type RPC_Social_Types_ArchivePost_Response struct {
	Done  bool      `protobuf:"varint,1,opt,name=Done" json:"Done,omitempty"`
	Error *PB_Error `protobuf:"bytes,2,opt,name=Error" json:"Error,omitempty"`
}

func (m *RPC_Social_Types_ArchivePost_Response) Reset()         { *m = RPC_Social_Types_ArchivePost_Response{} }
func (m *RPC_Social_Types_ArchivePost_Response) String() string { return proto.CompactTextString(m) }
func (*RPC_Social_Types_ArchivePost_Response) ProtoMessage()    {}
func (*RPC_Social_Types_ArchivePost_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor7, []int{0, 6, 1}
}

func (m *RPC_Social_Types_ArchivePost_Response) GetDone() bool {
	if m != nil {
		return m.Done
	}
	return false
}

func (m *RPC_Social_Types_ArchivePost_Response) GetError() *PB_Error {
	if m != nil {
		return m.Error
	}
	return nil
}

// likes
type RPC_Social_Types_LikePost struct {
}

func (m *RPC_Social_Types_LikePost) Reset()                    { *m = RPC_Social_Types_LikePost{} }
func (m *RPC_Social_Types_LikePost) String() string            { return proto.CompactTextString(m) }
func (*RPC_Social_Types_LikePost) ProtoMessage()               {}
func (*RPC_Social_Types_LikePost) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{0, 7} }

type RPC_Social_Types_LikePost_Param struct {
	PostId int64 `protobuf:"varint,1,opt,name=PostId" json:"PostId,omitempty"`
}

func (m *RPC_Social_Types_LikePost_Param) Reset()         { *m = RPC_Social_Types_LikePost_Param{} }
func (m *RPC_Social_Types_LikePost_Param) String() string { return proto.CompactTextString(m) }
func (*RPC_Social_Types_LikePost_Param) ProtoMessage()    {}
func (*RPC_Social_Types_LikePost_Param) Descriptor() ([]byte, []int) {
	return fileDescriptor7, []int{0, 7, 0}
}

func (m *RPC_Social_Types_LikePost_Param) GetPostId() int64 {
	if m != nil {
		return m.PostId
	}
	return 0
}

type RPC_Social_Types_LikePost_Response struct {
	Done  bool      `protobuf:"varint,1,opt,name=Done" json:"Done,omitempty"`
	Error *PB_Error `protobuf:"bytes,2,opt,name=Error" json:"Error,omitempty"`
}

func (m *RPC_Social_Types_LikePost_Response) Reset()         { *m = RPC_Social_Types_LikePost_Response{} }
func (m *RPC_Social_Types_LikePost_Response) String() string { return proto.CompactTextString(m) }
func (*RPC_Social_Types_LikePost_Response) ProtoMessage()    {}
func (*RPC_Social_Types_LikePost_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor7, []int{0, 7, 1}
}

func (m *RPC_Social_Types_LikePost_Response) GetDone() bool {
	if m != nil {
		return m.Done
	}
	return false
}

func (m *RPC_Social_Types_LikePost_Response) GetError() *PB_Error {
	if m != nil {
		return m.Error
	}
	return nil
}

type RPC_Social_Types_UnLikePost struct {
}

func (m *RPC_Social_Types_UnLikePost) Reset()                    { *m = RPC_Social_Types_UnLikePost{} }
func (m *RPC_Social_Types_UnLikePost) String() string            { return proto.CompactTextString(m) }
func (*RPC_Social_Types_UnLikePost) ProtoMessage()               {}
func (*RPC_Social_Types_UnLikePost) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{0, 8} }

type RPC_Social_Types_UnLikePost_Param struct {
	PostId int64 `protobuf:"varint,1,opt,name=PostId" json:"PostId,omitempty"`
}

func (m *RPC_Social_Types_UnLikePost_Param) Reset()         { *m = RPC_Social_Types_UnLikePost_Param{} }
func (m *RPC_Social_Types_UnLikePost_Param) String() string { return proto.CompactTextString(m) }
func (*RPC_Social_Types_UnLikePost_Param) ProtoMessage()    {}
func (*RPC_Social_Types_UnLikePost_Param) Descriptor() ([]byte, []int) {
	return fileDescriptor7, []int{0, 8, 0}
}

func (m *RPC_Social_Types_UnLikePost_Param) GetPostId() int64 {
	if m != nil {
		return m.PostId
	}
	return 0
}

type RPC_Social_Types_UnLikePost_Response struct {
	Done  bool      `protobuf:"varint,1,opt,name=Done" json:"Done,omitempty"`
	Error *PB_Error `protobuf:"bytes,2,opt,name=Error" json:"Error,omitempty"`
}

func (m *RPC_Social_Types_UnLikePost_Response) Reset()         { *m = RPC_Social_Types_UnLikePost_Response{} }
func (m *RPC_Social_Types_UnLikePost_Response) String() string { return proto.CompactTextString(m) }
func (*RPC_Social_Types_UnLikePost_Response) ProtoMessage()    {}
func (*RPC_Social_Types_UnLikePost_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor7, []int{0, 8, 1}
}

func (m *RPC_Social_Types_UnLikePost_Response) GetDone() bool {
	if m != nil {
		return m.Done
	}
	return false
}

func (m *RPC_Social_Types_UnLikePost_Response) GetError() *PB_Error {
	if m != nil {
		return m.Error
	}
	return nil
}

type RPC_Social_Types_FollowUser struct {
}

func (m *RPC_Social_Types_FollowUser) Reset()                    { *m = RPC_Social_Types_FollowUser{} }
func (m *RPC_Social_Types_FollowUser) String() string            { return proto.CompactTextString(m) }
func (*RPC_Social_Types_FollowUser) ProtoMessage()               {}
func (*RPC_Social_Types_FollowUser) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{0, 9} }

type RPC_Social_Types_FollowUser_Param struct {
	UserId int64 `protobuf:"varint,1,opt,name=UserId" json:"UserId,omitempty"`
}

func (m *RPC_Social_Types_FollowUser_Param) Reset()         { *m = RPC_Social_Types_FollowUser_Param{} }
func (m *RPC_Social_Types_FollowUser_Param) String() string { return proto.CompactTextString(m) }
func (*RPC_Social_Types_FollowUser_Param) ProtoMessage()    {}
func (*RPC_Social_Types_FollowUser_Param) Descriptor() ([]byte, []int) {
	return fileDescriptor7, []int{0, 9, 0}
}

func (m *RPC_Social_Types_FollowUser_Param) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

type RPC_Social_Types_FollowUser_Response struct {
	Done  bool      `protobuf:"varint,1,opt,name=Done" json:"Done,omitempty"`
	Error *PB_Error `protobuf:"bytes,2,opt,name=Error" json:"Error,omitempty"`
}

func (m *RPC_Social_Types_FollowUser_Response) Reset()         { *m = RPC_Social_Types_FollowUser_Response{} }
func (m *RPC_Social_Types_FollowUser_Response) String() string { return proto.CompactTextString(m) }
func (*RPC_Social_Types_FollowUser_Response) ProtoMessage()    {}
func (*RPC_Social_Types_FollowUser_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor7, []int{0, 9, 1}
}

func (m *RPC_Social_Types_FollowUser_Response) GetDone() bool {
	if m != nil {
		return m.Done
	}
	return false
}

func (m *RPC_Social_Types_FollowUser_Response) GetError() *PB_Error {
	if m != nil {
		return m.Error
	}
	return nil
}

type RPC_Social_Types_UnFollowUser struct {
}

func (m *RPC_Social_Types_UnFollowUser) Reset()         { *m = RPC_Social_Types_UnFollowUser{} }
func (m *RPC_Social_Types_UnFollowUser) String() string { return proto.CompactTextString(m) }
func (*RPC_Social_Types_UnFollowUser) ProtoMessage()    {}
func (*RPC_Social_Types_UnFollowUser) Descriptor() ([]byte, []int) {
	return fileDescriptor7, []int{0, 10}
}

type RPC_Social_Types_UnFollowUser_Param struct {
	UserId int64 `protobuf:"varint,1,opt,name=UserId" json:"UserId,omitempty"`
}

func (m *RPC_Social_Types_UnFollowUser_Param) Reset()         { *m = RPC_Social_Types_UnFollowUser_Param{} }
func (m *RPC_Social_Types_UnFollowUser_Param) String() string { return proto.CompactTextString(m) }
func (*RPC_Social_Types_UnFollowUser_Param) ProtoMessage()    {}
func (*RPC_Social_Types_UnFollowUser_Param) Descriptor() ([]byte, []int) {
	return fileDescriptor7, []int{0, 10, 0}
}

func (m *RPC_Social_Types_UnFollowUser_Param) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

type RPC_Social_Types_UnFollowUser_Response struct {
	Done  bool      `protobuf:"varint,1,opt,name=Done" json:"Done,omitempty"`
	Error *PB_Error `protobuf:"bytes,2,opt,name=Error" json:"Error,omitempty"`
}

func (m *RPC_Social_Types_UnFollowUser_Response) Reset() {
	*m = RPC_Social_Types_UnFollowUser_Response{}
}
func (m *RPC_Social_Types_UnFollowUser_Response) String() string { return proto.CompactTextString(m) }
func (*RPC_Social_Types_UnFollowUser_Response) ProtoMessage()    {}
func (*RPC_Social_Types_UnFollowUser_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor7, []int{0, 10, 1}
}

func (m *RPC_Social_Types_UnFollowUser_Response) GetDone() bool {
	if m != nil {
		return m.Done
	}
	return false
}

func (m *RPC_Social_Types_UnFollowUser_Response) GetError() *PB_Error {
	if m != nil {
		return m.Error
	}
	return nil
}

type RPC_Social_Types_BlockUser struct {
}

func (m *RPC_Social_Types_BlockUser) Reset()                    { *m = RPC_Social_Types_BlockUser{} }
func (m *RPC_Social_Types_BlockUser) String() string            { return proto.CompactTextString(m) }
func (*RPC_Social_Types_BlockUser) ProtoMessage()               {}
func (*RPC_Social_Types_BlockUser) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{0, 11} }

type RPC_Social_Types_BlockUser_Param struct {
	UserId int64 `protobuf:"varint,1,opt,name=UserId" json:"UserId,omitempty"`
}

func (m *RPC_Social_Types_BlockUser_Param) Reset()         { *m = RPC_Social_Types_BlockUser_Param{} }
func (m *RPC_Social_Types_BlockUser_Param) String() string { return proto.CompactTextString(m) }
func (*RPC_Social_Types_BlockUser_Param) ProtoMessage()    {}
func (*RPC_Social_Types_BlockUser_Param) Descriptor() ([]byte, []int) {
	return fileDescriptor7, []int{0, 11, 0}
}

func (m *RPC_Social_Types_BlockUser_Param) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

type RPC_Social_Types_BlockUser_Response struct {
	Done  bool      `protobuf:"varint,1,opt,name=Done" json:"Done,omitempty"`
	Error *PB_Error `protobuf:"bytes,2,opt,name=Error" json:"Error,omitempty"`
}

func (m *RPC_Social_Types_BlockUser_Response) Reset()         { *m = RPC_Social_Types_BlockUser_Response{} }
func (m *RPC_Social_Types_BlockUser_Response) String() string { return proto.CompactTextString(m) }
func (*RPC_Social_Types_BlockUser_Response) ProtoMessage()    {}
func (*RPC_Social_Types_BlockUser_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor7, []int{0, 11, 1}
}

func (m *RPC_Social_Types_BlockUser_Response) GetDone() bool {
	if m != nil {
		return m.Done
	}
	return false
}

func (m *RPC_Social_Types_BlockUser_Response) GetError() *PB_Error {
	if m != nil {
		return m.Error
	}
	return nil
}

type RPC_Social_Types_UnBlockUser struct {
}

func (m *RPC_Social_Types_UnBlockUser) Reset()         { *m = RPC_Social_Types_UnBlockUser{} }
func (m *RPC_Social_Types_UnBlockUser) String() string { return proto.CompactTextString(m) }
func (*RPC_Social_Types_UnBlockUser) ProtoMessage()    {}
func (*RPC_Social_Types_UnBlockUser) Descriptor() ([]byte, []int) {
	return fileDescriptor7, []int{0, 12}
}

type RPC_Social_Types_UnBlockUser_Param struct {
	UserId int64 `protobuf:"varint,1,opt,name=UserId" json:"UserId,omitempty"`
}

func (m *RPC_Social_Types_UnBlockUser_Param) Reset()         { *m = RPC_Social_Types_UnBlockUser_Param{} }
func (m *RPC_Social_Types_UnBlockUser_Param) String() string { return proto.CompactTextString(m) }
func (*RPC_Social_Types_UnBlockUser_Param) ProtoMessage()    {}
func (*RPC_Social_Types_UnBlockUser_Param) Descriptor() ([]byte, []int) {
	return fileDescriptor7, []int{0, 12, 0}
}

func (m *RPC_Social_Types_UnBlockUser_Param) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

type RPC_Social_Types_UnBlockUser_Response struct {
	Done  bool      `protobuf:"varint,1,opt,name=Done" json:"Done,omitempty"`
	Error *PB_Error `protobuf:"bytes,2,opt,name=Error" json:"Error,omitempty"`
}

func (m *RPC_Social_Types_UnBlockUser_Response) Reset()         { *m = RPC_Social_Types_UnBlockUser_Response{} }
func (m *RPC_Social_Types_UnBlockUser_Response) String() string { return proto.CompactTextString(m) }
func (*RPC_Social_Types_UnBlockUser_Response) ProtoMessage()    {}
func (*RPC_Social_Types_UnBlockUser_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor7, []int{0, 12, 1}
}

func (m *RPC_Social_Types_UnBlockUser_Response) GetDone() bool {
	if m != nil {
		return m.Done
	}
	return false
}

func (m *RPC_Social_Types_UnBlockUser_Response) GetError() *PB_Error {
	if m != nil {
		return m.Error
	}
	return nil
}

type RPC_Social_Types_AddSeenPosts struct {
}

func (m *RPC_Social_Types_AddSeenPosts) Reset()         { *m = RPC_Social_Types_AddSeenPosts{} }
func (m *RPC_Social_Types_AddSeenPosts) String() string { return proto.CompactTextString(m) }
func (*RPC_Social_Types_AddSeenPosts) ProtoMessage()    {}
func (*RPC_Social_Types_AddSeenPosts) Descriptor() ([]byte, []int) {
	return fileDescriptor7, []int{0, 13}
}

type RPC_Social_Types_AddSeenPosts_Param struct {
	RandHash int64   `protobuf:"varint,1,opt,name=RandHash" json:"RandHash,omitempty"`
	PostIds  []int64 `protobuf:"varint,2,rep,packed,name=PostIds" json:"PostIds,omitempty"`
}

func (m *RPC_Social_Types_AddSeenPosts_Param) Reset()         { *m = RPC_Social_Types_AddSeenPosts_Param{} }
func (m *RPC_Social_Types_AddSeenPosts_Param) String() string { return proto.CompactTextString(m) }
func (*RPC_Social_Types_AddSeenPosts_Param) ProtoMessage()    {}
func (*RPC_Social_Types_AddSeenPosts_Param) Descriptor() ([]byte, []int) {
	return fileDescriptor7, []int{0, 13, 0}
}

func (m *RPC_Social_Types_AddSeenPosts_Param) GetRandHash() int64 {
	if m != nil {
		return m.RandHash
	}
	return 0
}

func (m *RPC_Social_Types_AddSeenPosts_Param) GetPostIds() []int64 {
	if m != nil {
		return m.PostIds
	}
	return nil
}

type RPC_Social_Types_AddSeenPosts_Response struct {
	Done     bool      `protobuf:"varint,1,opt,name=Done" json:"Done,omitempty"`
	Error    *PB_Error `protobuf:"bytes,2,opt,name=Error" json:"Error,omitempty"`
	RandHash int64     `protobuf:"varint,3,opt,name=RandHash" json:"RandHash,omitempty"`
}

func (m *RPC_Social_Types_AddSeenPosts_Response) Reset() {
	*m = RPC_Social_Types_AddSeenPosts_Response{}
}
func (m *RPC_Social_Types_AddSeenPosts_Response) String() string { return proto.CompactTextString(m) }
func (*RPC_Social_Types_AddSeenPosts_Response) ProtoMessage()    {}
func (*RPC_Social_Types_AddSeenPosts_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor7, []int{0, 13, 1}
}

func (m *RPC_Social_Types_AddSeenPosts_Response) GetDone() bool {
	if m != nil {
		return m.Done
	}
	return false
}

func (m *RPC_Social_Types_AddSeenPosts_Response) GetError() *PB_Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *RPC_Social_Types_AddSeenPosts_Response) GetRandHash() int64 {
	if m != nil {
		return m.RandHash
	}
	return 0
}

func init() {
	proto.RegisterType((*RPC_Social_Types)(nil), "RPC_Social_Types")
	proto.RegisterType((*RPC_Social_Types_AddComment)(nil), "RPC_Social_Types.AddComment")
	proto.RegisterType((*RPC_Social_Types_AddComment_Param)(nil), "RPC_Social_Types.AddComment.Param")
	proto.RegisterType((*RPC_Social_Types_AddComment_Response)(nil), "RPC_Social_Types.AddComment.Response")
	proto.RegisterType((*RPC_Social_Types_DeleteComment)(nil), "RPC_Social_Types.DeleteComment")
	proto.RegisterType((*RPC_Social_Types_DeleteComment_Param)(nil), "RPC_Social_Types.DeleteComment.Param")
	proto.RegisterType((*RPC_Social_Types_DeleteComment_Response)(nil), "RPC_Social_Types.DeleteComment.Response")
	proto.RegisterType((*RPC_Social_Types_EditComment)(nil), "RPC_Social_Types.EditComment")
	proto.RegisterType((*RPC_Social_Types_EditComment_Param)(nil), "RPC_Social_Types.EditComment.Param")
	proto.RegisterType((*RPC_Social_Types_EditComment_Response)(nil), "RPC_Social_Types.EditComment.Response")
	proto.RegisterType((*RPC_Social_Types_AddPost)(nil), "RPC_Social_Types.AddPost")
	proto.RegisterType((*RPC_Social_Types_AddPost_Param)(nil), "RPC_Social_Types.AddPost.Param")
	proto.RegisterType((*RPC_Social_Types_AddPost_Response)(nil), "RPC_Social_Types.AddPost.Response")
	proto.RegisterType((*RPC_Social_Types_EditPost)(nil), "RPC_Social_Types.EditPost")
	proto.RegisterType((*RPC_Social_Types_EditPost_Param)(nil), "RPC_Social_Types.EditPost.Param")
	proto.RegisterType((*RPC_Social_Types_EditPost_Response)(nil), "RPC_Social_Types.EditPost.Response")
	proto.RegisterType((*RPC_Social_Types_DeletePost)(nil), "RPC_Social_Types.DeletePost")
	proto.RegisterType((*RPC_Social_Types_DeletePost_Param)(nil), "RPC_Social_Types.DeletePost.Param")
	proto.RegisterType((*RPC_Social_Types_DeletePost_Response)(nil), "RPC_Social_Types.DeletePost.Response")
	proto.RegisterType((*RPC_Social_Types_ArchivePost)(nil), "RPC_Social_Types.ArchivePost")
	proto.RegisterType((*RPC_Social_Types_ArchivePost_Param)(nil), "RPC_Social_Types.ArchivePost.Param")
	proto.RegisterType((*RPC_Social_Types_ArchivePost_Response)(nil), "RPC_Social_Types.ArchivePost.Response")
	proto.RegisterType((*RPC_Social_Types_LikePost)(nil), "RPC_Social_Types.LikePost")
	proto.RegisterType((*RPC_Social_Types_LikePost_Param)(nil), "RPC_Social_Types.LikePost.Param")
	proto.RegisterType((*RPC_Social_Types_LikePost_Response)(nil), "RPC_Social_Types.LikePost.Response")
	proto.RegisterType((*RPC_Social_Types_UnLikePost)(nil), "RPC_Social_Types.UnLikePost")
	proto.RegisterType((*RPC_Social_Types_UnLikePost_Param)(nil), "RPC_Social_Types.UnLikePost.Param")
	proto.RegisterType((*RPC_Social_Types_UnLikePost_Response)(nil), "RPC_Social_Types.UnLikePost.Response")
	proto.RegisterType((*RPC_Social_Types_FollowUser)(nil), "RPC_Social_Types.FollowUser")
	proto.RegisterType((*RPC_Social_Types_FollowUser_Param)(nil), "RPC_Social_Types.FollowUser.Param")
	proto.RegisterType((*RPC_Social_Types_FollowUser_Response)(nil), "RPC_Social_Types.FollowUser.Response")
	proto.RegisterType((*RPC_Social_Types_UnFollowUser)(nil), "RPC_Social_Types.UnFollowUser")
	proto.RegisterType((*RPC_Social_Types_UnFollowUser_Param)(nil), "RPC_Social_Types.UnFollowUser.Param")
	proto.RegisterType((*RPC_Social_Types_UnFollowUser_Response)(nil), "RPC_Social_Types.UnFollowUser.Response")
	proto.RegisterType((*RPC_Social_Types_BlockUser)(nil), "RPC_Social_Types.BlockUser")
	proto.RegisterType((*RPC_Social_Types_BlockUser_Param)(nil), "RPC_Social_Types.BlockUser.Param")
	proto.RegisterType((*RPC_Social_Types_BlockUser_Response)(nil), "RPC_Social_Types.BlockUser.Response")
	proto.RegisterType((*RPC_Social_Types_UnBlockUser)(nil), "RPC_Social_Types.UnBlockUser")
	proto.RegisterType((*RPC_Social_Types_UnBlockUser_Param)(nil), "RPC_Social_Types.UnBlockUser.Param")
	proto.RegisterType((*RPC_Social_Types_UnBlockUser_Response)(nil), "RPC_Social_Types.UnBlockUser.Response")
	proto.RegisterType((*RPC_Social_Types_AddSeenPosts)(nil), "RPC_Social_Types.AddSeenPosts")
	proto.RegisterType((*RPC_Social_Types_AddSeenPosts_Param)(nil), "RPC_Social_Types.AddSeenPosts.Param")
	proto.RegisterType((*RPC_Social_Types_AddSeenPosts_Response)(nil), "RPC_Social_Types.AddSeenPosts.Response")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for RPC_Social service

type RPC_SocialClient interface {
	// comments
	AddComment(ctx context.Context, in *RPC_Social_Types_AddComment_Param, opts ...grpc.CallOption) (*RPC_Social_Types_AddComment_Response, error)
	DeleteComment(ctx context.Context, in *RPC_Social_Types_DeleteComment_Param, opts ...grpc.CallOption) (*RPC_Social_Types_DeleteComment_Response, error)
	EditComment(ctx context.Context, in *RPC_Social_Types_EditComment_Param, opts ...grpc.CallOption) (*RPC_Social_Types_EditComment_Response, error)
	// posts
	AddPost(ctx context.Context, in *RPC_Social_Types_AddPost_Param, opts ...grpc.CallOption) (*RPC_Social_Types_AddPost_Response, error)
	EditPost(ctx context.Context, in *RPC_Social_Types_EditPost_Param, opts ...grpc.CallOption) (*RPC_Social_Types_EditPost_Response, error)
	DeletePost(ctx context.Context, in *RPC_Social_Types_DeletePost_Param, opts ...grpc.CallOption) (*RPC_Social_Types_DeletePost_Response, error)
	ArchivePost(ctx context.Context, in *RPC_Social_Types_ArchivePost_Param, opts ...grpc.CallOption) (*RPC_Social_Types_ArchivePost_Response, error)
	// likes
	LikePost(ctx context.Context, in *RPC_Social_Types_LikePost_Param, opts ...grpc.CallOption) (*RPC_Social_Types_LikePost_Response, error)
	UnLikePost(ctx context.Context, in *RPC_Social_Types_UnLikePost_Param, opts ...grpc.CallOption) (*RPC_Social_Types_UnLikePost_Response, error)
	// follow
	FollowUser(ctx context.Context, in *RPC_Social_Types_FollowUser_Param, opts ...grpc.CallOption) (*RPC_Social_Types_FollowUser_Response, error)
	UnFollowUser(ctx context.Context, in *RPC_Social_Types_UnFollowUser_Param, opts ...grpc.CallOption) (*RPC_Social_Types_UnFollowUser_Response, error)
	// profile - user
	BlockUser(ctx context.Context, in *RPC_Social_Types_BlockUser_Param, opts ...grpc.CallOption) (*RPC_Social_Types_BlockUser_Response, error)
	UnBlockUser(ctx context.Context, in *RPC_Social_Types_UnBlockUser_Param, opts ...grpc.CallOption) (*RPC_Social_Types_UnBlockUser_Response, error)
	AddSeenPosts(ctx context.Context, in *RPC_Social_Types_AddSeenPosts_Param, opts ...grpc.CallOption) (*RPC_Social_Types_AddSeenPosts_Response, error)
}

type rPC_SocialClient struct {
	cc *grpc.ClientConn
}

func NewRPC_SocialClient(cc *grpc.ClientConn) RPC_SocialClient {
	return &rPC_SocialClient{cc}
}

func (c *rPC_SocialClient) AddComment(ctx context.Context, in *RPC_Social_Types_AddComment_Param, opts ...grpc.CallOption) (*RPC_Social_Types_AddComment_Response, error) {
	out := new(RPC_Social_Types_AddComment_Response)
	err := grpc.Invoke(ctx, "/RPC_Social/AddComment", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPC_SocialClient) DeleteComment(ctx context.Context, in *RPC_Social_Types_DeleteComment_Param, opts ...grpc.CallOption) (*RPC_Social_Types_DeleteComment_Response, error) {
	out := new(RPC_Social_Types_DeleteComment_Response)
	err := grpc.Invoke(ctx, "/RPC_Social/DeleteComment", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPC_SocialClient) EditComment(ctx context.Context, in *RPC_Social_Types_EditComment_Param, opts ...grpc.CallOption) (*RPC_Social_Types_EditComment_Response, error) {
	out := new(RPC_Social_Types_EditComment_Response)
	err := grpc.Invoke(ctx, "/RPC_Social/EditComment", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPC_SocialClient) AddPost(ctx context.Context, in *RPC_Social_Types_AddPost_Param, opts ...grpc.CallOption) (*RPC_Social_Types_AddPost_Response, error) {
	out := new(RPC_Social_Types_AddPost_Response)
	err := grpc.Invoke(ctx, "/RPC_Social/AddPost", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPC_SocialClient) EditPost(ctx context.Context, in *RPC_Social_Types_EditPost_Param, opts ...grpc.CallOption) (*RPC_Social_Types_EditPost_Response, error) {
	out := new(RPC_Social_Types_EditPost_Response)
	err := grpc.Invoke(ctx, "/RPC_Social/EditPost", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPC_SocialClient) DeletePost(ctx context.Context, in *RPC_Social_Types_DeletePost_Param, opts ...grpc.CallOption) (*RPC_Social_Types_DeletePost_Response, error) {
	out := new(RPC_Social_Types_DeletePost_Response)
	err := grpc.Invoke(ctx, "/RPC_Social/DeletePost", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPC_SocialClient) ArchivePost(ctx context.Context, in *RPC_Social_Types_ArchivePost_Param, opts ...grpc.CallOption) (*RPC_Social_Types_ArchivePost_Response, error) {
	out := new(RPC_Social_Types_ArchivePost_Response)
	err := grpc.Invoke(ctx, "/RPC_Social/ArchivePost", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPC_SocialClient) LikePost(ctx context.Context, in *RPC_Social_Types_LikePost_Param, opts ...grpc.CallOption) (*RPC_Social_Types_LikePost_Response, error) {
	out := new(RPC_Social_Types_LikePost_Response)
	err := grpc.Invoke(ctx, "/RPC_Social/LikePost", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPC_SocialClient) UnLikePost(ctx context.Context, in *RPC_Social_Types_UnLikePost_Param, opts ...grpc.CallOption) (*RPC_Social_Types_UnLikePost_Response, error) {
	out := new(RPC_Social_Types_UnLikePost_Response)
	err := grpc.Invoke(ctx, "/RPC_Social/UnLikePost", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPC_SocialClient) FollowUser(ctx context.Context, in *RPC_Social_Types_FollowUser_Param, opts ...grpc.CallOption) (*RPC_Social_Types_FollowUser_Response, error) {
	out := new(RPC_Social_Types_FollowUser_Response)
	err := grpc.Invoke(ctx, "/RPC_Social/FollowUser", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPC_SocialClient) UnFollowUser(ctx context.Context, in *RPC_Social_Types_UnFollowUser_Param, opts ...grpc.CallOption) (*RPC_Social_Types_UnFollowUser_Response, error) {
	out := new(RPC_Social_Types_UnFollowUser_Response)
	err := grpc.Invoke(ctx, "/RPC_Social/UnFollowUser", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPC_SocialClient) BlockUser(ctx context.Context, in *RPC_Social_Types_BlockUser_Param, opts ...grpc.CallOption) (*RPC_Social_Types_BlockUser_Response, error) {
	out := new(RPC_Social_Types_BlockUser_Response)
	err := grpc.Invoke(ctx, "/RPC_Social/BlockUser", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPC_SocialClient) UnBlockUser(ctx context.Context, in *RPC_Social_Types_UnBlockUser_Param, opts ...grpc.CallOption) (*RPC_Social_Types_UnBlockUser_Response, error) {
	out := new(RPC_Social_Types_UnBlockUser_Response)
	err := grpc.Invoke(ctx, "/RPC_Social/UnBlockUser", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPC_SocialClient) AddSeenPosts(ctx context.Context, in *RPC_Social_Types_AddSeenPosts_Param, opts ...grpc.CallOption) (*RPC_Social_Types_AddSeenPosts_Response, error) {
	out := new(RPC_Social_Types_AddSeenPosts_Response)
	err := grpc.Invoke(ctx, "/RPC_Social/AddSeenPosts", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for RPC_Social service

type RPC_SocialServer interface {
	// comments
	AddComment(context.Context, *RPC_Social_Types_AddComment_Param) (*RPC_Social_Types_AddComment_Response, error)
	DeleteComment(context.Context, *RPC_Social_Types_DeleteComment_Param) (*RPC_Social_Types_DeleteComment_Response, error)
	EditComment(context.Context, *RPC_Social_Types_EditComment_Param) (*RPC_Social_Types_EditComment_Response, error)
	// posts
	AddPost(context.Context, *RPC_Social_Types_AddPost_Param) (*RPC_Social_Types_AddPost_Response, error)
	EditPost(context.Context, *RPC_Social_Types_EditPost_Param) (*RPC_Social_Types_EditPost_Response, error)
	DeletePost(context.Context, *RPC_Social_Types_DeletePost_Param) (*RPC_Social_Types_DeletePost_Response, error)
	ArchivePost(context.Context, *RPC_Social_Types_ArchivePost_Param) (*RPC_Social_Types_ArchivePost_Response, error)
	// likes
	LikePost(context.Context, *RPC_Social_Types_LikePost_Param) (*RPC_Social_Types_LikePost_Response, error)
	UnLikePost(context.Context, *RPC_Social_Types_UnLikePost_Param) (*RPC_Social_Types_UnLikePost_Response, error)
	// follow
	FollowUser(context.Context, *RPC_Social_Types_FollowUser_Param) (*RPC_Social_Types_FollowUser_Response, error)
	UnFollowUser(context.Context, *RPC_Social_Types_UnFollowUser_Param) (*RPC_Social_Types_UnFollowUser_Response, error)
	// profile - user
	BlockUser(context.Context, *RPC_Social_Types_BlockUser_Param) (*RPC_Social_Types_BlockUser_Response, error)
	UnBlockUser(context.Context, *RPC_Social_Types_UnBlockUser_Param) (*RPC_Social_Types_UnBlockUser_Response, error)
	AddSeenPosts(context.Context, *RPC_Social_Types_AddSeenPosts_Param) (*RPC_Social_Types_AddSeenPosts_Response, error)
}

func RegisterRPC_SocialServer(s *grpc.Server, srv RPC_SocialServer) {
	s.RegisterService(&_RPC_Social_serviceDesc, srv)
}

func _RPC_Social_AddComment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RPC_Social_Types_AddComment_Param)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPC_SocialServer).AddComment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/RPC_Social/AddComment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPC_SocialServer).AddComment(ctx, req.(*RPC_Social_Types_AddComment_Param))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPC_Social_DeleteComment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RPC_Social_Types_DeleteComment_Param)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPC_SocialServer).DeleteComment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/RPC_Social/DeleteComment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPC_SocialServer).DeleteComment(ctx, req.(*RPC_Social_Types_DeleteComment_Param))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPC_Social_EditComment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RPC_Social_Types_EditComment_Param)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPC_SocialServer).EditComment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/RPC_Social/EditComment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPC_SocialServer).EditComment(ctx, req.(*RPC_Social_Types_EditComment_Param))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPC_Social_AddPost_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RPC_Social_Types_AddPost_Param)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPC_SocialServer).AddPost(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/RPC_Social/AddPost",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPC_SocialServer).AddPost(ctx, req.(*RPC_Social_Types_AddPost_Param))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPC_Social_EditPost_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RPC_Social_Types_EditPost_Param)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPC_SocialServer).EditPost(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/RPC_Social/EditPost",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPC_SocialServer).EditPost(ctx, req.(*RPC_Social_Types_EditPost_Param))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPC_Social_DeletePost_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RPC_Social_Types_DeletePost_Param)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPC_SocialServer).DeletePost(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/RPC_Social/DeletePost",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPC_SocialServer).DeletePost(ctx, req.(*RPC_Social_Types_DeletePost_Param))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPC_Social_ArchivePost_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RPC_Social_Types_ArchivePost_Param)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPC_SocialServer).ArchivePost(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/RPC_Social/ArchivePost",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPC_SocialServer).ArchivePost(ctx, req.(*RPC_Social_Types_ArchivePost_Param))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPC_Social_LikePost_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RPC_Social_Types_LikePost_Param)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPC_SocialServer).LikePost(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/RPC_Social/LikePost",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPC_SocialServer).LikePost(ctx, req.(*RPC_Social_Types_LikePost_Param))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPC_Social_UnLikePost_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RPC_Social_Types_UnLikePost_Param)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPC_SocialServer).UnLikePost(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/RPC_Social/UnLikePost",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPC_SocialServer).UnLikePost(ctx, req.(*RPC_Social_Types_UnLikePost_Param))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPC_Social_FollowUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RPC_Social_Types_FollowUser_Param)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPC_SocialServer).FollowUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/RPC_Social/FollowUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPC_SocialServer).FollowUser(ctx, req.(*RPC_Social_Types_FollowUser_Param))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPC_Social_UnFollowUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RPC_Social_Types_UnFollowUser_Param)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPC_SocialServer).UnFollowUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/RPC_Social/UnFollowUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPC_SocialServer).UnFollowUser(ctx, req.(*RPC_Social_Types_UnFollowUser_Param))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPC_Social_BlockUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RPC_Social_Types_BlockUser_Param)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPC_SocialServer).BlockUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/RPC_Social/BlockUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPC_SocialServer).BlockUser(ctx, req.(*RPC_Social_Types_BlockUser_Param))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPC_Social_UnBlockUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RPC_Social_Types_UnBlockUser_Param)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPC_SocialServer).UnBlockUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/RPC_Social/UnBlockUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPC_SocialServer).UnBlockUser(ctx, req.(*RPC_Social_Types_UnBlockUser_Param))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPC_Social_AddSeenPosts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RPC_Social_Types_AddSeenPosts_Param)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPC_SocialServer).AddSeenPosts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/RPC_Social/AddSeenPosts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPC_SocialServer).AddSeenPosts(ctx, req.(*RPC_Social_Types_AddSeenPosts_Param))
	}
	return interceptor(ctx, in, info, handler)
}

var _RPC_Social_serviceDesc = grpc.ServiceDesc{
	ServiceName: "RPC_Social",
	HandlerType: (*RPC_SocialServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddComment",
			Handler:    _RPC_Social_AddComment_Handler,
		},
		{
			MethodName: "DeleteComment",
			Handler:    _RPC_Social_DeleteComment_Handler,
		},
		{
			MethodName: "EditComment",
			Handler:    _RPC_Social_EditComment_Handler,
		},
		{
			MethodName: "AddPost",
			Handler:    _RPC_Social_AddPost_Handler,
		},
		{
			MethodName: "EditPost",
			Handler:    _RPC_Social_EditPost_Handler,
		},
		{
			MethodName: "DeletePost",
			Handler:    _RPC_Social_DeletePost_Handler,
		},
		{
			MethodName: "ArchivePost",
			Handler:    _RPC_Social_ArchivePost_Handler,
		},
		{
			MethodName: "LikePost",
			Handler:    _RPC_Social_LikePost_Handler,
		},
		{
			MethodName: "UnLikePost",
			Handler:    _RPC_Social_UnLikePost_Handler,
		},
		{
			MethodName: "FollowUser",
			Handler:    _RPC_Social_FollowUser_Handler,
		},
		{
			MethodName: "UnFollowUser",
			Handler:    _RPC_Social_UnFollowUser_Handler,
		},
		{
			MethodName: "BlockUser",
			Handler:    _RPC_Social_BlockUser_Handler,
		},
		{
			MethodName: "UnBlockUser",
			Handler:    _RPC_Social_UnBlockUser_Handler,
		},
		{
			MethodName: "AddSeenPosts",
			Handler:    _RPC_Social_AddSeenPosts_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pb_rpc_social.proto",
}

func init() { proto.RegisterFile("pb_rpc_social.proto", fileDescriptor7) }

var fileDescriptor7 = []byte{
	// 715 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x57, 0xcd, 0x6e, 0xd3, 0x40,
	0x10, 0xd6, 0xd6, 0xfd, 0x71, 0x26, 0x81, 0xc2, 0x22, 0xa1, 0x68, 0x55, 0xa9, 0xa1, 0x2d, 0x10,
	0x2e, 0x3e, 0xb4, 0x27, 0x0e, 0x08, 0x25, 0x6d, 0x51, 0x2b, 0x21, 0x08, 0x6e, 0x43, 0xa5, 0x22,
	0x64, 0xe2, 0x78, 0xd5, 0x9a, 0xda, 0x5e, 0xcb, 0x8e, 0xda, 0xf2, 0x14, 0xbc, 0x47, 0x2f, 0x3c,
	0x07, 0x6f, 0xd2, 0x23, 0x8f, 0x80, 0xbc, 0xb1, 0xd7, 0x93, 0xd6, 0x4e, 0x24, 0x22, 0x99, 0x5b,
	0x76, 0xe6, 0xdb, 0x6f, 0xbe, 0xfd, 0x3c, 0x9a, 0x69, 0xe1, 0x49, 0x68, 0x5b, 0x51, 0x38, 0xb4,
	0x62, 0x31, 0x74, 0x07, 0x9e, 0x11, 0x46, 0x62, 0x24, 0xd8, 0x6a, 0x68, 0x5b, 0x67, 0x9e, 0xb0,
	0x55, 0xe0, 0x61, 0x68, 0x5b, 0x97, 0x2e, 0xbf, 0x8a, 0xc7, 0xe7, 0x8d, 0xdb, 0x55, 0x78, 0x64,
	0xf6, 0x76, 0xad, 0x23, 0x79, 0xcb, 0x3a, 0xfe, 0x11, 0xf2, 0x98, 0xfd, 0x26, 0x00, 0x1d, 0xc7,
	0xd9, 0x15, 0xbe, 0xcf, 0x83, 0x11, 0xfb, 0x08, 0x4b, 0xbd, 0x41, 0x34, 0xf0, 0xe9, 0x53, 0x58,
	0xee, 0x89, 0x78, 0x74, 0xe8, 0x34, 0x49, 0x8b, 0xb4, 0x35, 0x33, 0x3d, 0x51, 0x0a, 0x8b, 0xc7,
	0xfc, 0x7a, 0xd4, 0x5c, 0x68, 0x91, 0x76, 0xcd, 0x94, 0xbf, 0x29, 0x03, 0xdd, 0x1c, 0x04, 0xce,
	0xc1, 0x20, 0x3e, 0x6f, 0x6a, 0x12, 0xad, 0xce, 0xec, 0x3b, 0xe8, 0x26, 0x8f, 0x43, 0x11, 0xc4,
	0x3c, 0xb9, 0xbb, 0x27, 0x02, 0x2e, 0x19, 0x75, 0x53, 0xfe, 0xa6, 0xeb, 0xb0, 0xb4, 0x1f, 0x45,
	0x22, 0x92, 0x84, 0xf5, 0xed, 0x9a, 0xd1, 0xeb, 0x5a, 0x32, 0x60, 0x8e, 0xe3, 0xf4, 0x15, 0xac,
	0xa4, 0xe2, 0x24, 0x77, 0x7d, 0x7b, 0x35, 0x81, 0xa4, 0xa1, 0xcf, 0x2e, 0xbf, 0x32, 0xb3, 0x3c,
	0xfb, 0x49, 0xe0, 0xc1, 0x1e, 0xf7, 0xf8, 0x88, 0x67, 0x91, 0x37, 0xb3, 0x9e, 0xb3, 0x06, 0xb5,
	0x14, 0x7b, 0xe8, 0x48, 0x09, 0x9a, 0x99, 0x07, 0xd8, 0xdb, 0x39, 0xc5, 0xb3, 0x5b, 0x02, 0xf5,
	0x7d, 0xc7, 0x1d, 0x65, 0x7a, 0xfc, 0xb9, 0xf4, 0x28, 0xf3, 0xb5, 0x12, 0xf3, 0x17, 0xff, 0xa3,
	0xf9, 0xbf, 0x08, 0xac, 0x74, 0x1c, 0x27, 0x79, 0x07, 0x7b, 0x9d, 0x3d, 0x33, 0x13, 0x4c, 0x90,
	0xe0, 0x35, 0xa8, 0x1d, 0xfa, 0x83, 0x33, 0xde, 0xf5, 0x84, 0x2d, 0x0b, 0x37, 0xcc, 0x3c, 0xc0,
	0xdc, 0x79, 0x25, 0xb7, 0x41, 0x4f, 0x34, 0x24, 0xe2, 0x52, 0xcd, 0x8d, 0x04, 0x93, 0xc5, 0x4c,
	0x95, 0x65, 0x37, 0x04, 0xf4, 0xe4, 0xe3, 0x48, 0xc9, 0x3b, 0xff, 0xd0, 0xf8, 0x55, 0x8a, 0x0d,
	0x00, 0xc6, 0xad, 0x2d, 0xd5, 0xae, 0xcf, 0x50, 0x3b, 0x7f, 0xe7, 0x0a, 0xa8, 0x77, 0xa2, 0xe1,
	0xb9, 0x7b, 0x59, 0x55, 0x41, 0x0f, 0xf4, 0xf7, 0xee, 0x45, 0x55, 0xd5, 0x02, 0x80, 0x7e, 0x50,
	0x6d, 0xbd, 0x77, 0xc2, 0xf3, 0xc4, 0x55, 0x3f, 0xe6, 0xd1, 0x44, 0xbd, 0x24, 0x90, 0xd7, 0x1b,
	0x9f, 0xe6, 0xaf, 0x17, 0x42, 0xa3, 0x1f, 0x54, 0x5a, 0xd1, 0x87, 0x5a, 0xd7, 0x13, 0xc3, 0x8b,
	0x8a, 0xca, 0x09, 0xa8, 0xf7, 0x83, 0x2a, 0x0b, 0xde, 0x10, 0x68, 0x74, 0x1c, 0xe7, 0x88, 0xf3,
	0x20, 0x69, 0x8a, 0x38, 0xdf, 0x2d, 0x78, 0x02, 0x93, 0xc9, 0x09, 0x4c, 0x9b, 0xb0, 0x32, 0x6e,
	0xa1, 0xb8, 0xb9, 0xd0, 0xd2, 0xda, 0x9a, 0x99, 0x1d, 0xd9, 0x97, 0x79, 0x67, 0xc7, 0x94, 0xad,
	0xbb, 0xfd, 0xa7, 0x06, 0x90, 0xaf, 0x7a, 0x7a, 0x82, 0x77, 0x3c, 0xdd, 0x30, 0xee, 0xfe, 0x15,
	0x60, 0xe4, 0x59, 0x43, 0xbe, 0x89, 0x3d, 0x9f, 0x8a, 0x51, 0xc2, 0xbf, 0xdd, 0x59, 0xb8, 0xb4,
	0xe0, 0xde, 0x04, 0x20, 0xa5, 0x6f, 0xcf, 0x82, 0xa9, 0x0a, 0xa7, 0x13, 0x0b, 0x94, 0x6e, 0xde,
	0xbf, 0x88, 0xd2, 0x29, 0xfb, 0x8b, 0xe9, 0x20, 0xc5, 0xfd, 0x41, 0x6d, 0x2c, 0xba, 0x5e, 0xf8,
	0xde, 0x24, 0x95, 0x72, 0x6e, 0x94, 0x03, 0x14, 0xdf, 0xa7, 0x7c, 0x9f, 0xd0, 0x56, 0xb1, 0x06,
	0xc4, 0xb8, 0x39, 0x05, 0xa1, 0x28, 0x4f, 0xf0, 0xd8, 0x2f, 0xfa, 0x72, 0x79, 0xb6, 0xfc, 0xcb,
	0x21, 0x0c, 0xf6, 0x15, 0xcd, 0xf7, 0x22, 0x5f, 0x51, 0xba, 0xdc, 0x57, 0x0c, 0xc2, 0x3e, 0x64,
	0xa3, 0xb5, 0xc8, 0x87, 0x2c, 0x57, 0xee, 0x83, 0x42, 0x60, 0x1f, 0xf2, 0x79, 0x5d, 0xe4, 0x43,
	0x9e, 0x2d, 0xf7, 0x01, 0x61, 0x30, 0x71, 0x3e, 0x26, 0x8b, 0x88, 0xf3, 0x6c, 0x39, 0x31, 0xc2,
	0x28, 0xe2, 0xaf, 0x93, 0x13, 0x98, 0x6e, 0x15, 0xe9, 0xb9, 0x47, 0xfe, 0x72, 0x06, 0x4a, 0xd1,
	0x1f, 0xa3, 0x71, 0x4b, 0x9f, 0xdd, 0xbf, 0xa5, 0x92, 0x29, 0xf1, 0xd6, 0x34, 0x08, 0xee, 0x0a,
	0x34, 0x55, 0x8b, 0xba, 0x02, 0xa5, 0xcb, 0xbb, 0x02, 0x83, 0xb0, 0x21, 0x78, 0x7e, 0x16, 0x19,
	0x82, 0xf3, 0xe5, 0x86, 0x4c, 0xa0, 0x32, 0xfa, 0xee, 0x63, 0xd0, 0xdd, 0xc8, 0xf0, 0x63, 0x23,
	0xb4, 0x0f, 0xb4, 0x1e, 0x39, 0x25, 0xd7, 0xf6, 0xb2, 0xfc, 0xbf, 0x67, 0xe7, 0x6f, 0x00, 0x00,
	0x00, 0xff, 0xff, 0xdb, 0x84, 0xac, 0x41, 0x2f, 0x0d, 0x00, 0x00,
}
