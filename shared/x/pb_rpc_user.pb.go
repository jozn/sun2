// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pb_rpc_user.proto

package x

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type RPC_User_Types struct {
}

func (m *RPC_User_Types) Reset()                    { *m = RPC_User_Types{} }
func (m *RPC_User_Types) String() string            { return proto.CompactTextString(m) }
func (*RPC_User_Types) ProtoMessage()               {}
func (*RPC_User_Types) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{0} }

type RPC_User_Types_UpdateAbout struct {
}

func (m *RPC_User_Types_UpdateAbout) Reset()                    { *m = RPC_User_Types_UpdateAbout{} }
func (m *RPC_User_Types_UpdateAbout) String() string            { return proto.CompactTextString(m) }
func (*RPC_User_Types_UpdateAbout) ProtoMessage()               {}
func (*RPC_User_Types_UpdateAbout) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{0, 0} }

type RPC_User_Types_UpdateAbout_Param struct {
	NewAbout string `protobuf:"bytes,1,opt,name=NewAbout" json:"NewAbout,omitempty"`
}

func (m *RPC_User_Types_UpdateAbout_Param) Reset()         { *m = RPC_User_Types_UpdateAbout_Param{} }
func (m *RPC_User_Types_UpdateAbout_Param) String() string { return proto.CompactTextString(m) }
func (*RPC_User_Types_UpdateAbout_Param) ProtoMessage()    {}
func (*RPC_User_Types_UpdateAbout_Param) Descriptor() ([]byte, []int) {
	return fileDescriptor8, []int{0, 0, 0}
}

func (m *RPC_User_Types_UpdateAbout_Param) GetNewAbout() string {
	if m != nil {
		return m.NewAbout
	}
	return ""
}

type RPC_User_Types_UpdateAbout_Response struct {
	Done         bool             `protobuf:"varint,1,opt,name=Done" json:"Done,omitempty"`
	Error        *PB_Error        `protobuf:"bytes,2,opt,name=Error" json:"Error,omitempty"`
	SelfUserView *PB_SelfUserView `protobuf:"bytes,3,opt,name=SelfUserView" json:"SelfUserView,omitempty"`
}

func (m *RPC_User_Types_UpdateAbout_Response) Reset()         { *m = RPC_User_Types_UpdateAbout_Response{} }
func (m *RPC_User_Types_UpdateAbout_Response) String() string { return proto.CompactTextString(m) }
func (*RPC_User_Types_UpdateAbout_Response) ProtoMessage()    {}
func (*RPC_User_Types_UpdateAbout_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor8, []int{0, 0, 1}
}

func (m *RPC_User_Types_UpdateAbout_Response) GetDone() bool {
	if m != nil {
		return m.Done
	}
	return false
}

func (m *RPC_User_Types_UpdateAbout_Response) GetError() *PB_Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *RPC_User_Types_UpdateAbout_Response) GetSelfUserView() *PB_SelfUserView {
	if m != nil {
		return m.SelfUserView
	}
	return nil
}

type RPC_User_Types_UpdateUserName struct {
}

func (m *RPC_User_Types_UpdateUserName) Reset()         { *m = RPC_User_Types_UpdateUserName{} }
func (m *RPC_User_Types_UpdateUserName) String() string { return proto.CompactTextString(m) }
func (*RPC_User_Types_UpdateUserName) ProtoMessage()    {}
func (*RPC_User_Types_UpdateUserName) Descriptor() ([]byte, []int) {
	return fileDescriptor8, []int{0, 1}
}

type RPC_User_Types_UpdateUserName_Param struct {
	NewUserName string `protobuf:"bytes,1,opt,name=NewUserName" json:"NewUserName,omitempty"`
}

func (m *RPC_User_Types_UpdateUserName_Param) Reset()         { *m = RPC_User_Types_UpdateUserName_Param{} }
func (m *RPC_User_Types_UpdateUserName_Param) String() string { return proto.CompactTextString(m) }
func (*RPC_User_Types_UpdateUserName_Param) ProtoMessage()    {}
func (*RPC_User_Types_UpdateUserName_Param) Descriptor() ([]byte, []int) {
	return fileDescriptor8, []int{0, 1, 0}
}

func (m *RPC_User_Types_UpdateUserName_Param) GetNewUserName() string {
	if m != nil {
		return m.NewUserName
	}
	return ""
}

type RPC_User_Types_UpdateUserName_Response struct {
	Done         bool             `protobuf:"varint,1,opt,name=Done" json:"Done,omitempty"`
	Error        *PB_Error        `protobuf:"bytes,2,opt,name=Error" json:"Error,omitempty"`
	SelfUserView *PB_SelfUserView `protobuf:"bytes,3,opt,name=SelfUserView" json:"SelfUserView,omitempty"`
}

func (m *RPC_User_Types_UpdateUserName_Response) Reset() {
	*m = RPC_User_Types_UpdateUserName_Response{}
}
func (m *RPC_User_Types_UpdateUserName_Response) String() string { return proto.CompactTextString(m) }
func (*RPC_User_Types_UpdateUserName_Response) ProtoMessage()    {}
func (*RPC_User_Types_UpdateUserName_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor8, []int{0, 1, 1}
}

func (m *RPC_User_Types_UpdateUserName_Response) GetDone() bool {
	if m != nil {
		return m.Done
	}
	return false
}

func (m *RPC_User_Types_UpdateUserName_Response) GetError() *PB_Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *RPC_User_Types_UpdateUserName_Response) GetSelfUserView() *PB_SelfUserView {
	if m != nil {
		return m.SelfUserView
	}
	return nil
}

type RPC_User_Types_ChangeAvatar struct {
}

func (m *RPC_User_Types_ChangeAvatar) Reset()                    { *m = RPC_User_Types_ChangeAvatar{} }
func (m *RPC_User_Types_ChangeAvatar) String() string            { return proto.CompactTextString(m) }
func (*RPC_User_Types_ChangeAvatar) ProtoMessage()               {}
func (*RPC_User_Types_ChangeAvatar) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{0, 2} }

type RPC_User_Types_ChangeAvatar_Param struct {
	None       bool   `protobuf:"varint,1,opt,name=None" json:"None,omitempty"`
	ImageData2 []byte `protobuf:"bytes,2,opt,name=ImageData2,proto3" json:"ImageData2,omitempty"`
}

func (m *RPC_User_Types_ChangeAvatar_Param) Reset()         { *m = RPC_User_Types_ChangeAvatar_Param{} }
func (m *RPC_User_Types_ChangeAvatar_Param) String() string { return proto.CompactTextString(m) }
func (*RPC_User_Types_ChangeAvatar_Param) ProtoMessage()    {}
func (*RPC_User_Types_ChangeAvatar_Param) Descriptor() ([]byte, []int) {
	return fileDescriptor8, []int{0, 2, 0}
}

func (m *RPC_User_Types_ChangeAvatar_Param) GetNone() bool {
	if m != nil {
		return m.None
	}
	return false
}

func (m *RPC_User_Types_ChangeAvatar_Param) GetImageData2() []byte {
	if m != nil {
		return m.ImageData2
	}
	return nil
}

type RPC_User_Types_ChangeAvatar_Response struct {
	Done         bool             `protobuf:"varint,1,opt,name=Done" json:"Done,omitempty"`
	Error        *PB_Error        `protobuf:"bytes,2,opt,name=Error" json:"Error,omitempty"`
	SelfUserView *PB_SelfUserView `protobuf:"bytes,3,opt,name=SelfUserView" json:"SelfUserView,omitempty"`
}

func (m *RPC_User_Types_ChangeAvatar_Response) Reset()         { *m = RPC_User_Types_ChangeAvatar_Response{} }
func (m *RPC_User_Types_ChangeAvatar_Response) String() string { return proto.CompactTextString(m) }
func (*RPC_User_Types_ChangeAvatar_Response) ProtoMessage()    {}
func (*RPC_User_Types_ChangeAvatar_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor8, []int{0, 2, 1}
}

func (m *RPC_User_Types_ChangeAvatar_Response) GetDone() bool {
	if m != nil {
		return m.Done
	}
	return false
}

func (m *RPC_User_Types_ChangeAvatar_Response) GetError() *PB_Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *RPC_User_Types_ChangeAvatar_Response) GetSelfUserView() *PB_SelfUserView {
	if m != nil {
		return m.SelfUserView
	}
	return nil
}

type RPC_User_Types_ChangePrivacy struct {
}

func (m *RPC_User_Types_ChangePrivacy) Reset()                    { *m = RPC_User_Types_ChangePrivacy{} }
func (m *RPC_User_Types_ChangePrivacy) String() string            { return proto.CompactTextString(m) }
func (*RPC_User_Types_ChangePrivacy) ProtoMessage()               {}
func (*RPC_User_Types_ChangePrivacy) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{0, 3} }

type RPC_User_Types_ChangePrivacy_Param struct {
	Level ProfilePrivacyLevelEnum `protobuf:"varint,1,opt,name=Level,enum=ProfilePrivacyLevelEnum" json:"Level,omitempty"`
}

func (m *RPC_User_Types_ChangePrivacy_Param) Reset()         { *m = RPC_User_Types_ChangePrivacy_Param{} }
func (m *RPC_User_Types_ChangePrivacy_Param) String() string { return proto.CompactTextString(m) }
func (*RPC_User_Types_ChangePrivacy_Param) ProtoMessage()    {}
func (*RPC_User_Types_ChangePrivacy_Param) Descriptor() ([]byte, []int) {
	return fileDescriptor8, []int{0, 3, 0}
}

func (m *RPC_User_Types_ChangePrivacy_Param) GetLevel() ProfilePrivacyLevelEnum {
	if m != nil {
		return m.Level
	}
	return ProfilePrivacyLevelEnum_NONE
}

type RPC_User_Types_ChangePrivacy_Response struct {
	Done         bool             `protobuf:"varint,1,opt,name=Done" json:"Done,omitempty"`
	Error        *PB_Error        `protobuf:"bytes,2,opt,name=Error" json:"Error,omitempty"`
	SelfUserView *PB_SelfUserView `protobuf:"bytes,3,opt,name=SelfUserView" json:"SelfUserView,omitempty"`
}

func (m *RPC_User_Types_ChangePrivacy_Response) Reset()         { *m = RPC_User_Types_ChangePrivacy_Response{} }
func (m *RPC_User_Types_ChangePrivacy_Response) String() string { return proto.CompactTextString(m) }
func (*RPC_User_Types_ChangePrivacy_Response) ProtoMessage()    {}
func (*RPC_User_Types_ChangePrivacy_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor8, []int{0, 3, 1}
}

func (m *RPC_User_Types_ChangePrivacy_Response) GetDone() bool {
	if m != nil {
		return m.Done
	}
	return false
}

func (m *RPC_User_Types_ChangePrivacy_Response) GetError() *PB_Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *RPC_User_Types_ChangePrivacy_Response) GetSelfUserView() *PB_SelfUserView {
	if m != nil {
		return m.SelfUserView
	}
	return nil
}

func init() {
	proto.RegisterType((*RPC_User_Types)(nil), "RPC_User_Types")
	proto.RegisterType((*RPC_User_Types_UpdateAbout)(nil), "RPC_User_Types.UpdateAbout")
	proto.RegisterType((*RPC_User_Types_UpdateAbout_Param)(nil), "RPC_User_Types.UpdateAbout.Param")
	proto.RegisterType((*RPC_User_Types_UpdateAbout_Response)(nil), "RPC_User_Types.UpdateAbout.Response")
	proto.RegisterType((*RPC_User_Types_UpdateUserName)(nil), "RPC_User_Types.UpdateUserName")
	proto.RegisterType((*RPC_User_Types_UpdateUserName_Param)(nil), "RPC_User_Types.UpdateUserName.Param")
	proto.RegisterType((*RPC_User_Types_UpdateUserName_Response)(nil), "RPC_User_Types.UpdateUserName.Response")
	proto.RegisterType((*RPC_User_Types_ChangeAvatar)(nil), "RPC_User_Types.ChangeAvatar")
	proto.RegisterType((*RPC_User_Types_ChangeAvatar_Param)(nil), "RPC_User_Types.ChangeAvatar.Param")
	proto.RegisterType((*RPC_User_Types_ChangeAvatar_Response)(nil), "RPC_User_Types.ChangeAvatar.Response")
	proto.RegisterType((*RPC_User_Types_ChangePrivacy)(nil), "RPC_User_Types.ChangePrivacy")
	proto.RegisterType((*RPC_User_Types_ChangePrivacy_Param)(nil), "RPC_User_Types.ChangePrivacy.Param")
	proto.RegisterType((*RPC_User_Types_ChangePrivacy_Response)(nil), "RPC_User_Types.ChangePrivacy.Response")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for RPC_User service

type RPC_UserClient interface {
	// rpc GetBlockedList (PB_UserParam_BlockedList) returns (PB_UserResponse_BlockedList);//to pages
	UpdateAbout(ctx context.Context, in *RPC_User_Types_UpdateAbout_Param, opts ...grpc.CallOption) (*RPC_User_Types_UpdateAbout_Response, error)
	UpdateUserName(ctx context.Context, in *RPC_User_Types_UpdateUserName_Param, opts ...grpc.CallOption) (*RPC_User_Types_UpdateUserName_Response, error)
	ChangePrivacy(ctx context.Context, in *RPC_User_Types_ChangePrivacy_Param, opts ...grpc.CallOption) (*RPC_User_Types_ChangePrivacy_Response, error)
	ChangeAvatar(ctx context.Context, in *RPC_User_Types_ChangeAvatar_Param, opts ...grpc.CallOption) (*RPC_User_Types_ChangeAvatar_Response, error)
}

type rPC_UserClient struct {
	cc *grpc.ClientConn
}

func NewRPC_UserClient(cc *grpc.ClientConn) RPC_UserClient {
	return &rPC_UserClient{cc}
}

func (c *rPC_UserClient) UpdateAbout(ctx context.Context, in *RPC_User_Types_UpdateAbout_Param, opts ...grpc.CallOption) (*RPC_User_Types_UpdateAbout_Response, error) {
	out := new(RPC_User_Types_UpdateAbout_Response)
	err := grpc.Invoke(ctx, "/RPC_User/UpdateAbout", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPC_UserClient) UpdateUserName(ctx context.Context, in *RPC_User_Types_UpdateUserName_Param, opts ...grpc.CallOption) (*RPC_User_Types_UpdateUserName_Response, error) {
	out := new(RPC_User_Types_UpdateUserName_Response)
	err := grpc.Invoke(ctx, "/RPC_User/UpdateUserName", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPC_UserClient) ChangePrivacy(ctx context.Context, in *RPC_User_Types_ChangePrivacy_Param, opts ...grpc.CallOption) (*RPC_User_Types_ChangePrivacy_Response, error) {
	out := new(RPC_User_Types_ChangePrivacy_Response)
	err := grpc.Invoke(ctx, "/RPC_User/ChangePrivacy", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPC_UserClient) ChangeAvatar(ctx context.Context, in *RPC_User_Types_ChangeAvatar_Param, opts ...grpc.CallOption) (*RPC_User_Types_ChangeAvatar_Response, error) {
	out := new(RPC_User_Types_ChangeAvatar_Response)
	err := grpc.Invoke(ctx, "/RPC_User/ChangeAvatar", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for RPC_User service

type RPC_UserServer interface {
	// rpc GetBlockedList (PB_UserParam_BlockedList) returns (PB_UserResponse_BlockedList);//to pages
	UpdateAbout(context.Context, *RPC_User_Types_UpdateAbout_Param) (*RPC_User_Types_UpdateAbout_Response, error)
	UpdateUserName(context.Context, *RPC_User_Types_UpdateUserName_Param) (*RPC_User_Types_UpdateUserName_Response, error)
	ChangePrivacy(context.Context, *RPC_User_Types_ChangePrivacy_Param) (*RPC_User_Types_ChangePrivacy_Response, error)
	ChangeAvatar(context.Context, *RPC_User_Types_ChangeAvatar_Param) (*RPC_User_Types_ChangeAvatar_Response, error)
}

func RegisterRPC_UserServer(s *grpc.Server, srv RPC_UserServer) {
	s.RegisterService(&_RPC_User_serviceDesc, srv)
}

func _RPC_User_UpdateAbout_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RPC_User_Types_UpdateAbout_Param)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPC_UserServer).UpdateAbout(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/RPC_User/UpdateAbout",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPC_UserServer).UpdateAbout(ctx, req.(*RPC_User_Types_UpdateAbout_Param))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPC_User_UpdateUserName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RPC_User_Types_UpdateUserName_Param)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPC_UserServer).UpdateUserName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/RPC_User/UpdateUserName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPC_UserServer).UpdateUserName(ctx, req.(*RPC_User_Types_UpdateUserName_Param))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPC_User_ChangePrivacy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RPC_User_Types_ChangePrivacy_Param)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPC_UserServer).ChangePrivacy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/RPC_User/ChangePrivacy",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPC_UserServer).ChangePrivacy(ctx, req.(*RPC_User_Types_ChangePrivacy_Param))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPC_User_ChangeAvatar_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RPC_User_Types_ChangeAvatar_Param)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPC_UserServer).ChangeAvatar(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/RPC_User/ChangeAvatar",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPC_UserServer).ChangeAvatar(ctx, req.(*RPC_User_Types_ChangeAvatar_Param))
	}
	return interceptor(ctx, in, info, handler)
}

var _RPC_User_serviceDesc = grpc.ServiceDesc{
	ServiceName: "RPC_User",
	HandlerType: (*RPC_UserServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "UpdateAbout",
			Handler:    _RPC_User_UpdateAbout_Handler,
		},
		{
			MethodName: "UpdateUserName",
			Handler:    _RPC_User_UpdateUserName_Handler,
		},
		{
			MethodName: "ChangePrivacy",
			Handler:    _RPC_User_ChangePrivacy_Handler,
		},
		{
			MethodName: "ChangeAvatar",
			Handler:    _RPC_User_ChangeAvatar_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pb_rpc_user.proto",
}

func init() { proto.RegisterFile("pb_rpc_user.proto", fileDescriptor8) }

var fileDescriptor8 = []byte{
	// 431 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x94, 0x4d, 0x6f, 0xd4, 0x30,
	0x10, 0x86, 0xe5, 0xb6, 0x8b, 0xd2, 0xd9, 0xed, 0x8a, 0xfa, 0xb4, 0xf2, 0x01, 0x96, 0x96, 0x8f,
	0x72, 0xf1, 0x61, 0x41, 0xe2, 0xc0, 0xa9, 0x5f, 0x12, 0x48, 0x28, 0x8a, 0x0c, 0xad, 0x04, 0x42,
	0xb2, 0x9c, 0x32, 0x2d, 0x91, 0x36, 0x89, 0xe5, 0x7c, 0xd1, 0x9f, 0xc4, 0x95, 0x3f, 0x80, 0xc4,
	0xaf, 0xe2, 0xc0, 0x01, 0xc5, 0x89, 0xa3, 0x64, 0x05, 0xdb, 0xe3, 0xde, 0xec, 0x77, 0x9e, 0x99,
	0xbc, 0xaf, 0x32, 0x09, 0xec, 0xeb, 0x50, 0x1a, 0x7d, 0x25, 0x8b, 0x0c, 0x0d, 0xd7, 0x26, 0xcd,
	0x53, 0xb6, 0xa7, 0x43, 0x89, 0x49, 0x11, 0xb7, 0xd7, 0xa9, 0x0e, 0x65, 0x19, 0x61, 0x95, 0x35,
	0xf7, 0x83, 0xdf, 0x23, 0x98, 0x8a, 0xe0, 0x54, 0x5e, 0x64, 0x68, 0xe4, 0x87, 0x5b, 0x8d, 0x19,
	0xfb, 0x4e, 0x60, 0x7c, 0xa1, 0xbf, 0xa8, 0x1c, 0x8f, 0xc3, 0xb4, 0xc8, 0xd9, 0x21, 0x8c, 0x02,
	0x65, 0x54, 0x4c, 0x19, 0x78, 0x3e, 0x56, 0x56, 0x9c, 0x91, 0x39, 0x39, 0xda, 0x15, 0xdd, 0x9d,
	0x15, 0xe0, 0x09, 0xcc, 0x74, 0x9a, 0x64, 0x48, 0x29, 0xec, 0x9c, 0xa5, 0x09, 0x5a, 0xc6, 0x13,
	0xf6, 0x4c, 0x1f, 0xc2, 0xe8, 0xdc, 0x98, 0xd4, 0xcc, 0xb6, 0xe6, 0xe4, 0x68, 0xbc, 0xd8, 0xe5,
	0xc1, 0x89, 0xb4, 0x82, 0x68, 0x74, 0xfa, 0x12, 0x26, 0xef, 0x71, 0x79, 0x5d, 0xfb, 0xb8, 0x8c,
	0xb0, 0x9a, 0x6d, 0x5b, 0xee, 0x7e, 0xcd, 0xf5, 0x75, 0x31, 0xa0, 0xd8, 0x0f, 0x02, 0xd3, 0xc6,
	0x6b, 0x2d, 0xf9, 0x2a, 0x46, 0xf6, 0xdc, 0xd9, 0x9d, 0xc3, 0xd8, 0xc7, 0xca, 0xe9, 0xad, 0xe3,
	0xbe, 0xb4, 0x29, 0xd3, 0xbf, 0x08, 0x4c, 0x4e, 0xbf, 0xaa, 0xe4, 0x06, 0x8f, 0x4b, 0x95, 0x2b,
	0xc3, 0x5e, 0x3b, 0xcb, 0x14, 0x76, 0xfc, 0x9e, 0x89, 0xfa, 0x4c, 0x1f, 0x00, 0xbc, 0x8d, 0xd5,
	0x0d, 0x9e, 0xa9, 0x5c, 0x2d, 0xac, 0x93, 0x89, 0xe8, 0x29, 0x9b, 0x0a, 0xf1, 0x93, 0xc0, 0x5e,
	0x13, 0x22, 0x30, 0x51, 0xa9, 0xae, 0x6e, 0xd9, 0x2b, 0x97, 0x82, 0xc3, 0xe8, 0x1d, 0x96, 0xb8,
	0xb4, 0x36, 0xa6, 0x8b, 0x19, 0x0f, 0x4c, 0x7a, 0x1d, 0x2d, 0x1d, 0x68, 0x6b, 0xe7, 0x49, 0x11,
	0x8b, 0x06, 0xdb, 0x50, 0x82, 0xc5, 0x9f, 0x2d, 0xf0, 0xdc, 0xea, 0xd3, 0xcb, 0xc1, 0xce, 0xd3,
	0x47, 0x7c, 0xf8, 0x51, 0xf0, 0x5e, 0x91, 0xdb, 0x94, 0xec, 0xf1, 0x3a, 0xa4, 0xcb, 0x23, 0x57,
	0xf7, 0x93, 0xfe, 0xa7, 0xcf, 0xd5, 0xdb, 0xe9, 0xcf, 0xee, 0xa0, 0xba, 0x07, 0x7c, 0x5e, 0x79,
	0x0d, 0xf4, 0x70, 0xb5, 0x73, 0x50, 0x6e, 0xc7, 0x3f, 0x5d, 0x0f, 0x75, 0xd3, 0x3f, 0x0e, 0x37,
	0x95, 0x1e, 0xfc, 0xbb, 0xaf, 0xa9, 0xb6, 0xb3, 0x9f, 0xac, 0x65, 0xdc, 0xe8, 0x93, 0x7d, 0xf0,
	0x22, 0xc3, 0xe3, 0x8c, 0xeb, 0xf0, 0xcd, 0x76, 0x40, 0x3e, 0x91, 0x6f, 0xe1, 0x3d, 0xfb, 0x4f,
	0x7a, 0xf1, 0x37, 0x00, 0x00, 0xff, 0xff, 0x39, 0x41, 0x16, 0x99, 0xc7, 0x04, 0x00, 0x00,
}
