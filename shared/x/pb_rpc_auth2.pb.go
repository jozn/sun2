// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pb_rpc_auth2.proto

package x

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type RPC_Auth_Types_SendConfirmCode_SendConfirmCodeTypeEnum int32

const (
	RPC_Auth_Types_SendConfirmCode_SEND_CODE_OK    RPC_Auth_Types_SendConfirmCode_SendConfirmCodeTypeEnum = 0
	RPC_Auth_Types_SendConfirmCode_SEND_CODE_EMAIL RPC_Auth_Types_SendConfirmCode_SendConfirmCodeTypeEnum = 1
)

var RPC_Auth_Types_SendConfirmCode_SendConfirmCodeTypeEnum_name = map[int32]string{
	0: "SEND_CODE_OK",
	1: "SEND_CODE_EMAIL",
}
var RPC_Auth_Types_SendConfirmCode_SendConfirmCodeTypeEnum_value = map[string]int32{
	"SEND_CODE_OK":    0,
	"SEND_CODE_EMAIL": 1,
}

func (x RPC_Auth_Types_SendConfirmCode_SendConfirmCodeTypeEnum) String() string {
	return proto.EnumName(RPC_Auth_Types_SendConfirmCode_SendConfirmCodeTypeEnum_name, int32(x))
}
func (RPC_Auth_Types_SendConfirmCode_SendConfirmCodeTypeEnum) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor3, []int{0, 0, 0}
}

type RPC_Auth_Types struct {
}

func (m *RPC_Auth_Types) Reset()                    { *m = RPC_Auth_Types{} }
func (m *RPC_Auth_Types) String() string            { return proto.CompactTextString(m) }
func (*RPC_Auth_Types) ProtoMessage()               {}
func (*RPC_Auth_Types) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{0} }

type RPC_Auth_Types_SendConfirmCode struct {
}

func (m *RPC_Auth_Types_SendConfirmCode) Reset()         { *m = RPC_Auth_Types_SendConfirmCode{} }
func (m *RPC_Auth_Types_SendConfirmCode) String() string { return proto.CompactTextString(m) }
func (*RPC_Auth_Types_SendConfirmCode) ProtoMessage()    {}
func (*RPC_Auth_Types_SendConfirmCode) Descriptor() ([]byte, []int) {
	return fileDescriptor3, []int{0, 0}
}

type RPC_Auth_Types_SendConfirmCode_Param struct {
	Hash   string `protobuf:"bytes,1,opt,name=Hash" json:"Hash,omitempty"`
	Phone  string `protobuf:"bytes,2,opt,name=Phone" json:"Phone,omitempty"`
	Resend bool   `protobuf:"varint,3,opt,name=Resend" json:"Resend,omitempty"`
}

func (m *RPC_Auth_Types_SendConfirmCode_Param) Reset()         { *m = RPC_Auth_Types_SendConfirmCode_Param{} }
func (m *RPC_Auth_Types_SendConfirmCode_Param) String() string { return proto.CompactTextString(m) }
func (*RPC_Auth_Types_SendConfirmCode_Param) ProtoMessage()    {}
func (*RPC_Auth_Types_SendConfirmCode_Param) Descriptor() ([]byte, []int) {
	return fileDescriptor3, []int{0, 0, 0}
}

func (m *RPC_Auth_Types_SendConfirmCode_Param) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

func (m *RPC_Auth_Types_SendConfirmCode_Param) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *RPC_Auth_Types_SendConfirmCode_Param) GetResend() bool {
	if m != nil {
		return m.Resend
	}
	return false
}

type RPC_Auth_Types_SendConfirmCode_Response struct {
	Done              bool     `protobuf:"varint,1,opt,name=Done" json:"Done,omitempty"`
	ErrorMessage      string   `protobuf:"bytes,2,opt,name=ErrorMessage" json:"ErrorMessage,omitempty"`
	JustEmailRegister bool     `protobuf:"varint,3,opt,name=JustEmailRegister" json:"JustEmailRegister,omitempty"`
	SmsNumbers        []uint64 `protobuf:"varint,4,rep,packed,name=SmsNumbers" json:"SmsNumbers,omitempty"`
	IsLogin           bool     `protobuf:"varint,5,opt,name=IsLogin" json:"IsLogin,omitempty"`
}

func (m *RPC_Auth_Types_SendConfirmCode_Response) Reset() {
	*m = RPC_Auth_Types_SendConfirmCode_Response{}
}
func (m *RPC_Auth_Types_SendConfirmCode_Response) String() string { return proto.CompactTextString(m) }
func (*RPC_Auth_Types_SendConfirmCode_Response) ProtoMessage()    {}
func (*RPC_Auth_Types_SendConfirmCode_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor3, []int{0, 0, 1}
}

func (m *RPC_Auth_Types_SendConfirmCode_Response) GetDone() bool {
	if m != nil {
		return m.Done
	}
	return false
}

func (m *RPC_Auth_Types_SendConfirmCode_Response) GetErrorMessage() string {
	if m != nil {
		return m.ErrorMessage
	}
	return ""
}

func (m *RPC_Auth_Types_SendConfirmCode_Response) GetJustEmailRegister() bool {
	if m != nil {
		return m.JustEmailRegister
	}
	return false
}

func (m *RPC_Auth_Types_SendConfirmCode_Response) GetSmsNumbers() []uint64 {
	if m != nil {
		return m.SmsNumbers
	}
	return nil
}

func (m *RPC_Auth_Types_SendConfirmCode_Response) GetIsLogin() bool {
	if m != nil {
		return m.IsLogin
	}
	return false
}

type RPC_Auth_Types_ConfirmCode struct {
}

func (m *RPC_Auth_Types_ConfirmCode) Reset()                    { *m = RPC_Auth_Types_ConfirmCode{} }
func (m *RPC_Auth_Types_ConfirmCode) String() string            { return proto.CompactTextString(m) }
func (*RPC_Auth_Types_ConfirmCode) ProtoMessage()               {}
func (*RPC_Auth_Types_ConfirmCode) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{0, 1} }

type RPC_Auth_Types_ConfirmCode_Param struct {
	Hash  string `protobuf:"bytes,1,opt,name=Hash" json:"Hash,omitempty"`
	Phone string `protobuf:"bytes,2,opt,name=Phone" json:"Phone,omitempty"`
	Code  int32  `protobuf:"varint,3,opt,name=Code" json:"Code,omitempty"`
}

func (m *RPC_Auth_Types_ConfirmCode_Param) Reset()         { *m = RPC_Auth_Types_ConfirmCode_Param{} }
func (m *RPC_Auth_Types_ConfirmCode_Param) String() string { return proto.CompactTextString(m) }
func (*RPC_Auth_Types_ConfirmCode_Param) ProtoMessage()    {}
func (*RPC_Auth_Types_ConfirmCode_Param) Descriptor() ([]byte, []int) {
	return fileDescriptor3, []int{0, 1, 0}
}

func (m *RPC_Auth_Types_ConfirmCode_Param) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

func (m *RPC_Auth_Types_ConfirmCode_Param) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *RPC_Auth_Types_ConfirmCode_Param) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

type RPC_Auth_Types_ConfirmCode_Response struct {
	Done         bool             `protobuf:"varint,1,opt,name=Done" json:"Done,omitempty"`
	Error        *PB_Error        `protobuf:"bytes,2,opt,name=Error" json:"Error,omitempty"`
	SelfUserView *PB_SelfUserView `protobuf:"bytes,3,opt,name=SelfUserView" json:"SelfUserView,omitempty"`
}

func (m *RPC_Auth_Types_ConfirmCode_Response) Reset()         { *m = RPC_Auth_Types_ConfirmCode_Response{} }
func (m *RPC_Auth_Types_ConfirmCode_Response) String() string { return proto.CompactTextString(m) }
func (*RPC_Auth_Types_ConfirmCode_Response) ProtoMessage()    {}
func (*RPC_Auth_Types_ConfirmCode_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor3, []int{0, 1, 1}
}

func (m *RPC_Auth_Types_ConfirmCode_Response) GetDone() bool {
	if m != nil {
		return m.Done
	}
	return false
}

func (m *RPC_Auth_Types_ConfirmCode_Response) GetError() *PB_Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *RPC_Auth_Types_ConfirmCode_Response) GetSelfUserView() *PB_SelfUserView {
	if m != nil {
		return m.SelfUserView
	}
	return nil
}

type RPC_Auth_Types_SingUp struct {
}

func (m *RPC_Auth_Types_SingUp) Reset()                    { *m = RPC_Auth_Types_SingUp{} }
func (m *RPC_Auth_Types_SingUp) String() string            { return proto.CompactTextString(m) }
func (*RPC_Auth_Types_SingUp) ProtoMessage()               {}
func (*RPC_Auth_Types_SingUp) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{0, 2} }

type RPC_Auth_Types_SingUp_Param struct {
	Hash      string `protobuf:"bytes,1,opt,name=Hash" json:"Hash,omitempty"`
	FirstName string `protobuf:"bytes,2,opt,name=FirstName" json:"FirstName,omitempty"`
	LastName  string `protobuf:"bytes,3,opt,name=LastName" json:"LastName,omitempty"`
	UserName  string `protobuf:"bytes,4,opt,name=UserName" json:"UserName,omitempty"`
	Email     string `protobuf:"bytes,5,opt,name=Email" json:"Email,omitempty"`
}

func (m *RPC_Auth_Types_SingUp_Param) Reset()         { *m = RPC_Auth_Types_SingUp_Param{} }
func (m *RPC_Auth_Types_SingUp_Param) String() string { return proto.CompactTextString(m) }
func (*RPC_Auth_Types_SingUp_Param) ProtoMessage()    {}
func (*RPC_Auth_Types_SingUp_Param) Descriptor() ([]byte, []int) {
	return fileDescriptor3, []int{0, 2, 0}
}

func (m *RPC_Auth_Types_SingUp_Param) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

func (m *RPC_Auth_Types_SingUp_Param) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

func (m *RPC_Auth_Types_SingUp_Param) GetLastName() string {
	if m != nil {
		return m.LastName
	}
	return ""
}

func (m *RPC_Auth_Types_SingUp_Param) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

func (m *RPC_Auth_Types_SingUp_Param) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

type RPC_Auth_Types_SingUp_Response struct {
	Done         bool             `protobuf:"varint,1,opt,name=Done" json:"Done,omitempty"`
	Error        *PB_Error        `protobuf:"bytes,2,opt,name=Error" json:"Error,omitempty"`
	SelfUserView *PB_SelfUserView `protobuf:"bytes,3,opt,name=SelfUserView" json:"SelfUserView,omitempty"`
}

func (m *RPC_Auth_Types_SingUp_Response) Reset()         { *m = RPC_Auth_Types_SingUp_Response{} }
func (m *RPC_Auth_Types_SingUp_Response) String() string { return proto.CompactTextString(m) }
func (*RPC_Auth_Types_SingUp_Response) ProtoMessage()    {}
func (*RPC_Auth_Types_SingUp_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor3, []int{0, 2, 1}
}

func (m *RPC_Auth_Types_SingUp_Response) GetDone() bool {
	if m != nil {
		return m.Done
	}
	return false
}

func (m *RPC_Auth_Types_SingUp_Response) GetError() *PB_Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *RPC_Auth_Types_SingUp_Response) GetSelfUserView() *PB_SelfUserView {
	if m != nil {
		return m.SelfUserView
	}
	return nil
}

type RPC_Auth_Types_SingIn struct {
}

func (m *RPC_Auth_Types_SingIn) Reset()                    { *m = RPC_Auth_Types_SingIn{} }
func (m *RPC_Auth_Types_SingIn) String() string            { return proto.CompactTextString(m) }
func (*RPC_Auth_Types_SingIn) ProtoMessage()               {}
func (*RPC_Auth_Types_SingIn) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{0, 3} }

type RPC_Auth_Types_SingIn_Param struct {
	UserNamePhoneEmail string `protobuf:"bytes,4,opt,name=UserNamePhoneEmail" json:"UserNamePhoneEmail,omitempty"`
	Password           string `protobuf:"bytes,5,opt,name=Password" json:"Password,omitempty"`
}

func (m *RPC_Auth_Types_SingIn_Param) Reset()         { *m = RPC_Auth_Types_SingIn_Param{} }
func (m *RPC_Auth_Types_SingIn_Param) String() string { return proto.CompactTextString(m) }
func (*RPC_Auth_Types_SingIn_Param) ProtoMessage()    {}
func (*RPC_Auth_Types_SingIn_Param) Descriptor() ([]byte, []int) {
	return fileDescriptor3, []int{0, 3, 0}
}

func (m *RPC_Auth_Types_SingIn_Param) GetUserNamePhoneEmail() string {
	if m != nil {
		return m.UserNamePhoneEmail
	}
	return ""
}

func (m *RPC_Auth_Types_SingIn_Param) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type RPC_Auth_Types_SingIn_Response struct {
	Done         bool             `protobuf:"varint,1,opt,name=Done" json:"Done,omitempty"`
	Error        *PB_Error        `protobuf:"bytes,2,opt,name=Error" json:"Error,omitempty"`
	SelfUserView *PB_SelfUserView `protobuf:"bytes,3,opt,name=SelfUserView" json:"SelfUserView,omitempty"`
}

func (m *RPC_Auth_Types_SingIn_Response) Reset()         { *m = RPC_Auth_Types_SingIn_Response{} }
func (m *RPC_Auth_Types_SingIn_Response) String() string { return proto.CompactTextString(m) }
func (*RPC_Auth_Types_SingIn_Response) ProtoMessage()    {}
func (*RPC_Auth_Types_SingIn_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor3, []int{0, 3, 1}
}

func (m *RPC_Auth_Types_SingIn_Response) GetDone() bool {
	if m != nil {
		return m.Done
	}
	return false
}

func (m *RPC_Auth_Types_SingIn_Response) GetError() *PB_Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *RPC_Auth_Types_SingIn_Response) GetSelfUserView() *PB_SelfUserView {
	if m != nil {
		return m.SelfUserView
	}
	return nil
}

type RPC_Auth_Types_LogOut struct {
}

func (m *RPC_Auth_Types_LogOut) Reset()                    { *m = RPC_Auth_Types_LogOut{} }
func (m *RPC_Auth_Types_LogOut) String() string            { return proto.CompactTextString(m) }
func (*RPC_Auth_Types_LogOut) ProtoMessage()               {}
func (*RPC_Auth_Types_LogOut) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{0, 4} }

type RPC_Auth_Types_LogOut_Param struct {
}

func (m *RPC_Auth_Types_LogOut_Param) Reset()         { *m = RPC_Auth_Types_LogOut_Param{} }
func (m *RPC_Auth_Types_LogOut_Param) String() string { return proto.CompactTextString(m) }
func (*RPC_Auth_Types_LogOut_Param) ProtoMessage()    {}
func (*RPC_Auth_Types_LogOut_Param) Descriptor() ([]byte, []int) {
	return fileDescriptor3, []int{0, 4, 0}
}

type RPC_Auth_Types_LogOut_Response struct {
	Done  bool      `protobuf:"varint,1,opt,name=Done" json:"Done,omitempty"`
	Error *PB_Error `protobuf:"bytes,2,opt,name=Error" json:"Error,omitempty"`
}

func (m *RPC_Auth_Types_LogOut_Response) Reset()         { *m = RPC_Auth_Types_LogOut_Response{} }
func (m *RPC_Auth_Types_LogOut_Response) String() string { return proto.CompactTextString(m) }
func (*RPC_Auth_Types_LogOut_Response) ProtoMessage()    {}
func (*RPC_Auth_Types_LogOut_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor3, []int{0, 4, 1}
}

func (m *RPC_Auth_Types_LogOut_Response) GetDone() bool {
	if m != nil {
		return m.Done
	}
	return false
}

func (m *RPC_Auth_Types_LogOut_Response) GetError() *PB_Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func init() {
	proto.RegisterType((*RPC_Auth_Types)(nil), "RPC_Auth_Types")
	proto.RegisterType((*RPC_Auth_Types_SendConfirmCode)(nil), "RPC_Auth_Types.SendConfirmCode")
	proto.RegisterType((*RPC_Auth_Types_SendConfirmCode_Param)(nil), "RPC_Auth_Types.SendConfirmCode.Param")
	proto.RegisterType((*RPC_Auth_Types_SendConfirmCode_Response)(nil), "RPC_Auth_Types.SendConfirmCode.Response")
	proto.RegisterType((*RPC_Auth_Types_ConfirmCode)(nil), "RPC_Auth_Types.ConfirmCode")
	proto.RegisterType((*RPC_Auth_Types_ConfirmCode_Param)(nil), "RPC_Auth_Types.ConfirmCode.Param")
	proto.RegisterType((*RPC_Auth_Types_ConfirmCode_Response)(nil), "RPC_Auth_Types.ConfirmCode.Response")
	proto.RegisterType((*RPC_Auth_Types_SingUp)(nil), "RPC_Auth_Types.SingUp")
	proto.RegisterType((*RPC_Auth_Types_SingUp_Param)(nil), "RPC_Auth_Types.SingUp.Param")
	proto.RegisterType((*RPC_Auth_Types_SingUp_Response)(nil), "RPC_Auth_Types.SingUp.Response")
	proto.RegisterType((*RPC_Auth_Types_SingIn)(nil), "RPC_Auth_Types.SingIn")
	proto.RegisterType((*RPC_Auth_Types_SingIn_Param)(nil), "RPC_Auth_Types.SingIn.Param")
	proto.RegisterType((*RPC_Auth_Types_SingIn_Response)(nil), "RPC_Auth_Types.SingIn.Response")
	proto.RegisterType((*RPC_Auth_Types_LogOut)(nil), "RPC_Auth_Types.LogOut")
	proto.RegisterType((*RPC_Auth_Types_LogOut_Param)(nil), "RPC_Auth_Types.LogOut.Param")
	proto.RegisterType((*RPC_Auth_Types_LogOut_Response)(nil), "RPC_Auth_Types.LogOut.Response")
	proto.RegisterEnum("RPC_Auth_Types_SendConfirmCode_SendConfirmCodeTypeEnum", RPC_Auth_Types_SendConfirmCode_SendConfirmCodeTypeEnum_name, RPC_Auth_Types_SendConfirmCode_SendConfirmCodeTypeEnum_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for RPC_Auth service

type RPC_AuthClient interface {
	//    rpc CheckPhone (PB_UserParam_CheckUserName2) returns (PB_UserResponse_CheckUserName2);
	SendConfirmCode(ctx context.Context, in *RPC_Auth_Types_SendConfirmCode_Param, opts ...grpc.CallOption) (*RPC_Auth_Types_SendConfirmCode_Response, error)
	ConfirmCode(ctx context.Context, in *RPC_Auth_Types_ConfirmCode_Param, opts ...grpc.CallOption) (*RPC_Auth_Types_ConfirmCode_Response, error)
	SingUp(ctx context.Context, in *RPC_Auth_Types_SingUp_Param, opts ...grpc.CallOption) (*RPC_Auth_Types_SingUp_Response, error)
	SingIn(ctx context.Context, in *RPC_Auth_Types_SingIn_Param, opts ...grpc.CallOption) (*RPC_Auth_Types_SingIn_Response, error)
	LogOut(ctx context.Context, in *RPC_Auth_Types_LogOut_Param, opts ...grpc.CallOption) (*RPC_Auth_Types_LogOut_Response, error)
}

type rPC_AuthClient struct {
	cc *grpc.ClientConn
}

func NewRPC_AuthClient(cc *grpc.ClientConn) RPC_AuthClient {
	return &rPC_AuthClient{cc}
}

func (c *rPC_AuthClient) SendConfirmCode(ctx context.Context, in *RPC_Auth_Types_SendConfirmCode_Param, opts ...grpc.CallOption) (*RPC_Auth_Types_SendConfirmCode_Response, error) {
	out := new(RPC_Auth_Types_SendConfirmCode_Response)
	err := grpc.Invoke(ctx, "/RPC_Auth/SendConfirmCode", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPC_AuthClient) ConfirmCode(ctx context.Context, in *RPC_Auth_Types_ConfirmCode_Param, opts ...grpc.CallOption) (*RPC_Auth_Types_ConfirmCode_Response, error) {
	out := new(RPC_Auth_Types_ConfirmCode_Response)
	err := grpc.Invoke(ctx, "/RPC_Auth/ConfirmCode", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPC_AuthClient) SingUp(ctx context.Context, in *RPC_Auth_Types_SingUp_Param, opts ...grpc.CallOption) (*RPC_Auth_Types_SingUp_Response, error) {
	out := new(RPC_Auth_Types_SingUp_Response)
	err := grpc.Invoke(ctx, "/RPC_Auth/SingUp", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPC_AuthClient) SingIn(ctx context.Context, in *RPC_Auth_Types_SingIn_Param, opts ...grpc.CallOption) (*RPC_Auth_Types_SingIn_Response, error) {
	out := new(RPC_Auth_Types_SingIn_Response)
	err := grpc.Invoke(ctx, "/RPC_Auth/SingIn", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPC_AuthClient) LogOut(ctx context.Context, in *RPC_Auth_Types_LogOut_Param, opts ...grpc.CallOption) (*RPC_Auth_Types_LogOut_Response, error) {
	out := new(RPC_Auth_Types_LogOut_Response)
	err := grpc.Invoke(ctx, "/RPC_Auth/LogOut", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for RPC_Auth service

type RPC_AuthServer interface {
	//    rpc CheckPhone (PB_UserParam_CheckUserName2) returns (PB_UserResponse_CheckUserName2);
	SendConfirmCode(context.Context, *RPC_Auth_Types_SendConfirmCode_Param) (*RPC_Auth_Types_SendConfirmCode_Response, error)
	ConfirmCode(context.Context, *RPC_Auth_Types_ConfirmCode_Param) (*RPC_Auth_Types_ConfirmCode_Response, error)
	SingUp(context.Context, *RPC_Auth_Types_SingUp_Param) (*RPC_Auth_Types_SingUp_Response, error)
	SingIn(context.Context, *RPC_Auth_Types_SingIn_Param) (*RPC_Auth_Types_SingIn_Response, error)
	LogOut(context.Context, *RPC_Auth_Types_LogOut_Param) (*RPC_Auth_Types_LogOut_Response, error)
}

func RegisterRPC_AuthServer(s *grpc.Server, srv RPC_AuthServer) {
	s.RegisterService(&_RPC_Auth_serviceDesc, srv)
}

func _RPC_Auth_SendConfirmCode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RPC_Auth_Types_SendConfirmCode_Param)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPC_AuthServer).SendConfirmCode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/RPC_Auth/SendConfirmCode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPC_AuthServer).SendConfirmCode(ctx, req.(*RPC_Auth_Types_SendConfirmCode_Param))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPC_Auth_ConfirmCode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RPC_Auth_Types_ConfirmCode_Param)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPC_AuthServer).ConfirmCode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/RPC_Auth/ConfirmCode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPC_AuthServer).ConfirmCode(ctx, req.(*RPC_Auth_Types_ConfirmCode_Param))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPC_Auth_SingUp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RPC_Auth_Types_SingUp_Param)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPC_AuthServer).SingUp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/RPC_Auth/SingUp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPC_AuthServer).SingUp(ctx, req.(*RPC_Auth_Types_SingUp_Param))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPC_Auth_SingIn_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RPC_Auth_Types_SingIn_Param)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPC_AuthServer).SingIn(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/RPC_Auth/SingIn",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPC_AuthServer).SingIn(ctx, req.(*RPC_Auth_Types_SingIn_Param))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPC_Auth_LogOut_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RPC_Auth_Types_LogOut_Param)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPC_AuthServer).LogOut(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/RPC_Auth/LogOut",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPC_AuthServer).LogOut(ctx, req.(*RPC_Auth_Types_LogOut_Param))
	}
	return interceptor(ctx, in, info, handler)
}

var _RPC_Auth_serviceDesc = grpc.ServiceDesc{
	ServiceName: "RPC_Auth",
	HandlerType: (*RPC_AuthServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SendConfirmCode",
			Handler:    _RPC_Auth_SendConfirmCode_Handler,
		},
		{
			MethodName: "ConfirmCode",
			Handler:    _RPC_Auth_ConfirmCode_Handler,
		},
		{
			MethodName: "SingUp",
			Handler:    _RPC_Auth_SingUp_Handler,
		},
		{
			MethodName: "SingIn",
			Handler:    _RPC_Auth_SingIn_Handler,
		},
		{
			MethodName: "LogOut",
			Handler:    _RPC_Auth_LogOut_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pb_rpc_auth2.proto",
}

func init() { proto.RegisterFile("pb_rpc_auth2.proto", fileDescriptor3) }

var fileDescriptor3 = []byte{
	// 592 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x55, 0xcb, 0x6e, 0xd3, 0x40,
	0x14, 0xc5, 0xcd, 0xa3, 0xce, 0x4d, 0x68, 0xd3, 0x01, 0x81, 0x35, 0xaa, 0x68, 0x88, 0x40, 0xca,
	0x02, 0x79, 0x11, 0xd8, 0x43, 0x9b, 0x18, 0x6a, 0x48, 0x13, 0x6b, 0x4c, 0xbb, 0x60, 0x63, 0xd9,
	0x64, 0x9a, 0x58, 0xaa, 0xc7, 0xd6, 0x8c, 0x4d, 0xe0, 0x0b, 0x10, 0x9f, 0xc1, 0x96, 0x5f, 0xe9,
	0x96, 0x3f, 0xe0, 0x47, 0x90, 0xc7, 0x76, 0x9a, 0x47, 0x9b, 0x0a, 0xb1, 0xe8, 0x6e, 0xce, 0x39,
	0x77, 0xce, 0xdc, 0x7b, 0x26, 0x19, 0x03, 0x8a, 0x3c, 0x87, 0x47, 0x9f, 0x1d, 0x37, 0x89, 0xa7,
	0x5d, 0x3d, 0xe2, 0x61, 0x1c, 0xe2, 0xfb, 0x91, 0xe7, 0x50, 0x96, 0x04, 0x39, 0xdc, 0x89, 0x3c,
	0xe7, 0x8b, 0x4f, 0x67, 0x22, 0xc3, 0xed, 0x3f, 0x2a, 0xec, 0x10, 0xab, 0xe7, 0x1c, 0x26, 0xf1,
	0xd4, 0xf9, 0xf8, 0x2d, 0xa2, 0x02, 0x5f, 0x6e, 0xc1, 0xae, 0x4d, 0xd9, 0xb8, 0x17, 0xb2, 0x73,
	0x9f, 0x07, 0xbd, 0x70, 0x4c, 0xb1, 0x09, 0x15, 0xcb, 0xe5, 0x6e, 0x80, 0x10, 0x94, 0x8f, 0x5d,
	0x31, 0xd5, 0x94, 0x96, 0xd2, 0xa9, 0x11, 0xb9, 0x46, 0x0f, 0xa1, 0x62, 0x4d, 0x43, 0x46, 0xb5,
	0x2d, 0x49, 0x66, 0x00, 0x3d, 0x82, 0x2a, 0xa1, 0x82, 0xb2, 0xb1, 0x56, 0x6a, 0x29, 0x1d, 0x95,
	0xe4, 0x08, 0xff, 0x52, 0x40, 0x25, 0x54, 0x44, 0x21, 0x13, 0x34, 0xb5, 0xeb, 0xa7, 0x3b, 0x15,
	0x59, 0x22, 0xd7, 0xa8, 0x0d, 0x0d, 0x83, 0xf3, 0x90, 0x9f, 0x50, 0x21, 0xdc, 0x49, 0xe1, 0xba,
	0xc4, 0xa1, 0x17, 0xb0, 0xf7, 0x3e, 0x11, 0xb1, 0x11, 0xb8, 0xfe, 0x05, 0xa1, 0x13, 0x5f, 0xc4,
	0x94, 0xe7, 0xe7, 0xac, 0x0b, 0xe8, 0x09, 0x80, 0x1d, 0x88, 0x61, 0x12, 0x78, 0x94, 0x0b, 0xad,
	0xdc, 0x2a, 0x75, 0xca, 0x64, 0x81, 0x41, 0x1a, 0x6c, 0x9b, 0x62, 0x10, 0x4e, 0x7c, 0xa6, 0x55,
	0xa4, 0x47, 0x01, 0xdb, 0x6f, 0xe0, 0xf1, 0x4a, 0x14, 0x69, 0x46, 0x06, 0x4b, 0x02, 0xd4, 0x84,
	0x86, 0x6d, 0x0c, 0xfb, 0x4e, 0x6f, 0xd4, 0x37, 0x9c, 0xd1, 0x87, 0xe6, 0x3d, 0xf4, 0x00, 0x76,
	0xaf, 0x18, 0xe3, 0xe4, 0xd0, 0x1c, 0x34, 0x15, 0x7c, 0xa9, 0x40, 0x7d, 0x31, 0x49, 0xe3, 0xdf,
	0x93, 0x44, 0x50, 0x4e, 0xb7, 0xca, 0xf9, 0x2a, 0x44, 0xae, 0x71, 0x72, 0x4b, 0x88, 0x07, 0x50,
	0x91, 0x81, 0x49, 0xa7, 0x7a, 0xb7, 0xa6, 0x5b, 0x47, 0x8e, 0x24, 0x48, 0xc6, 0xa3, 0x57, 0xd0,
	0xb0, 0xe9, 0xc5, 0xf9, 0xa9, 0xa0, 0xfc, 0xcc, 0xa7, 0x33, 0x69, 0x5e, 0xef, 0x36, 0xd3, 0xba,
	0x45, 0x9e, 0x2c, 0x55, 0xe1, 0x1f, 0x5b, 0x50, 0xb5, 0x7d, 0x36, 0x39, 0x8d, 0xf0, 0x77, 0x65,
	0xd3, 0x24, 0xfb, 0x50, 0x7b, 0xeb, 0x73, 0x11, 0x0f, 0xdd, 0xa0, 0x98, 0xe6, 0x8a, 0x40, 0x18,
	0xd4, 0x81, 0x9b, 0x8b, 0x25, 0x29, 0xce, 0x71, 0xaa, 0xa5, 0xc7, 0x49, 0xad, 0x9c, 0x69, 0x05,
	0x4e, 0xf3, 0x91, 0x37, 0x2b, 0xaf, 0xa9, 0x46, 0x32, 0x70, 0x57, 0x59, 0xfc, 0x56, 0xb2, 0x2c,
	0x4c, 0x86, 0xed, 0x22, 0x0a, 0x1d, 0x50, 0xd1, 0xac, 0xbc, 0xbb, 0xac, 0xdb, 0x6c, 0x8c, 0x6b,
	0x94, 0x74, 0x58, 0xcb, 0x15, 0x62, 0x16, 0xf2, 0x71, 0x3e, 0xd3, 0x1c, 0xdf, 0xd5, 0x58, 0x04,
	0xaa, 0x83, 0x70, 0x32, 0x4a, 0x62, 0xbc, 0x9d, 0x4f, 0x85, 0x5f, 0xff, 0x67, 0x27, 0xdd, 0x9f,
	0x25, 0x50, 0x8b, 0x57, 0x06, 0x79, 0x6b, 0xcf, 0x0b, 0x7a, 0xae, 0x2f, 0xbf, 0x41, 0xfa, 0x4a,
	0x81, 0x9e, 0xf5, 0xd1, 0xb9, 0xad, 0x6c, 0xde, 0xe5, 0xd9, 0xd2, 0x9f, 0x0e, 0x3d, 0x5d, 0xdd,
	0xb8, 0xee, 0xfd, 0x6c, 0x53, 0xc9, 0xdc, 0xf7, 0x5d, 0xf1, 0xf3, 0x47, 0xfb, 0x6b, 0xbd, 0x48,
	0x3e, 0x77, 0x3b, 0xb8, 0x41, 0x5d, 0x35, 0x32, 0xd9, 0xf5, 0x46, 0x26, 0xdb, 0x64, 0x64, 0xb2,
	0x25, 0xa3, 0xec, 0xba, 0xd6, 0x8d, 0x32, 0xfe, 0x26, 0xa3, 0x5c, 0x2d, 0x8c, 0x8e, 0xf6, 0x40,
	0xf5, 0xb9, 0x1e, 0x08, 0x3d, 0xf2, 0x8e, 0x4b, 0x96, 0xf2, 0x49, 0xf9, 0xea, 0x55, 0xe5, 0x37,
	0xe2, 0xe5, 0xdf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x33, 0xed, 0xbd, 0x5a, 0x58, 0x06, 0x00, 0x00,
}
