// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pb_view_social.proto

package x

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type PB_PostView struct {
	PostId         int64        `protobuf:"varint,1,opt,name=PostId" json:"PostId,omitempty"`
	UserId         int32        `protobuf:"varint,2,opt,name=UserId" json:"UserId,omitempty"`
	PostTypeEnum   PostTypeEnum `protobuf:"varint,3,opt,name=PostTypeEnum,enum=PostTypeEnum" json:"PostTypeEnum,omitempty"`
	Text           string       `protobuf:"bytes,4,opt,name=Text" json:"Text,omitempty"`
	RichText       string       `protobuf:"bytes,5,opt,name=RichText" json:"RichText,omitempty"`
	MediaCount     int32        `protobuf:"varint,6,opt,name=MediaCount" json:"MediaCount,omitempty"`
	SharedTo       int32        `protobuf:"varint,7,opt,name=SharedTo" json:"SharedTo,omitempty"`
	DisableComment int32        `protobuf:"varint,8,opt,name=DisableComment" json:"DisableComment,omitempty"`
	HasTag         int32        `protobuf:"varint,9,opt,name=HasTag" json:"HasTag,omitempty"`
	CommentsCount  int32        `protobuf:"varint,10,opt,name=CommentsCount" json:"CommentsCount,omitempty"`
	LikesCount     int32        `protobuf:"varint,11,opt,name=LikesCount" json:"LikesCount,omitempty"`
	ViewsCount     int32        `protobuf:"varint,12,opt,name=ViewsCount" json:"ViewsCount,omitempty"`
	EditedTime     int32        `protobuf:"varint,13,opt,name=EditedTime" json:"EditedTime,omitempty"`
	CreatedTime    int32        `protobuf:"varint,14,opt,name=CreatedTime" json:"CreatedTime,omitempty"`
	ReSharedPostId int64        `protobuf:"varint,15,opt,name=ReSharedPostId" json:"ReSharedPostId,omitempty"`
	// With me
	DidILiked    bool            `protobuf:"varint,50,opt,name=DidILiked" json:"DidILiked,omitempty"`
	DidIReShared bool            `protobuf:"varint,51,opt,name=DidIReShared" json:"DidIReShared,omitempty"`
	SenderUser   *PB_UserView    `protobuf:"bytes,100,opt,name=SenderUser" json:"SenderUser,omitempty"`
	ReSharedUser *PB_UserView    `protobuf:"bytes,101,opt,name=ReSharedUser" json:"ReSharedUser,omitempty"`
	Media        *PB_MediaView   `protobuf:"bytes,102,opt,name=Media" json:"Media,omitempty"`
	MediaList    []*PB_MediaView `protobuf:"bytes,103,rep,name=MediaList" json:"MediaList,omitempty"`
}

func (m *PB_PostView) Reset()                    { *m = PB_PostView{} }
func (m *PB_PostView) String() string            { return proto.CompactTextString(m) }
func (*PB_PostView) ProtoMessage()               {}
func (*PB_PostView) Descriptor() ([]byte, []int) { return fileDescriptor11, []int{0} }

func (m *PB_PostView) GetPostId() int64 {
	if m != nil {
		return m.PostId
	}
	return 0
}

func (m *PB_PostView) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *PB_PostView) GetPostTypeEnum() PostTypeEnum {
	if m != nil {
		return m.PostTypeEnum
	}
	return PostTypeEnum_POST_RESHARED
}

func (m *PB_PostView) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func (m *PB_PostView) GetRichText() string {
	if m != nil {
		return m.RichText
	}
	return ""
}

func (m *PB_PostView) GetMediaCount() int32 {
	if m != nil {
		return m.MediaCount
	}
	return 0
}

func (m *PB_PostView) GetSharedTo() int32 {
	if m != nil {
		return m.SharedTo
	}
	return 0
}

func (m *PB_PostView) GetDisableComment() int32 {
	if m != nil {
		return m.DisableComment
	}
	return 0
}

func (m *PB_PostView) GetHasTag() int32 {
	if m != nil {
		return m.HasTag
	}
	return 0
}

func (m *PB_PostView) GetCommentsCount() int32 {
	if m != nil {
		return m.CommentsCount
	}
	return 0
}

func (m *PB_PostView) GetLikesCount() int32 {
	if m != nil {
		return m.LikesCount
	}
	return 0
}

func (m *PB_PostView) GetViewsCount() int32 {
	if m != nil {
		return m.ViewsCount
	}
	return 0
}

func (m *PB_PostView) GetEditedTime() int32 {
	if m != nil {
		return m.EditedTime
	}
	return 0
}

func (m *PB_PostView) GetCreatedTime() int32 {
	if m != nil {
		return m.CreatedTime
	}
	return 0
}

func (m *PB_PostView) GetReSharedPostId() int64 {
	if m != nil {
		return m.ReSharedPostId
	}
	return 0
}

func (m *PB_PostView) GetDidILiked() bool {
	if m != nil {
		return m.DidILiked
	}
	return false
}

func (m *PB_PostView) GetDidIReShared() bool {
	if m != nil {
		return m.DidIReShared
	}
	return false
}

func (m *PB_PostView) GetSenderUser() *PB_UserView {
	if m != nil {
		return m.SenderUser
	}
	return nil
}

func (m *PB_PostView) GetReSharedUser() *PB_UserView {
	if m != nil {
		return m.ReSharedUser
	}
	return nil
}

func (m *PB_PostView) GetMedia() *PB_MediaView {
	if m != nil {
		return m.Media
	}
	return nil
}

func (m *PB_PostView) GetMediaList() []*PB_MediaView {
	if m != nil {
		return m.MediaList
	}
	return nil
}

type PB_MediaView struct {
	MediaId       int64  `protobuf:"varint,1,opt,name=MediaId" json:"MediaId,omitempty"`
	UserId        int32  `protobuf:"varint,2,opt,name=UserId" json:"UserId,omitempty"`
	PostId        int32  `protobuf:"varint,3,opt,name=PostId" json:"PostId,omitempty"`
	AlbumId       int32  `protobuf:"varint,4,opt,name=AlbumId" json:"AlbumId,omitempty"`
	MediaTypeEnum int32  `protobuf:"varint,5,opt,name=MediaTypeEnum" json:"MediaTypeEnum,omitempty"`
	Width         int32  `protobuf:"varint,6,opt,name=Width" json:"Width,omitempty"`
	Height        int32  `protobuf:"varint,7,opt,name=Height" json:"Height,omitempty"`
	Size          int32  `protobuf:"varint,8,opt,name=Size" json:"Size,omitempty"`
	Duration      int32  `protobuf:"varint,9,opt,name=Duration" json:"Duration,omitempty"`
	Color         string `protobuf:"bytes,10,opt,name=Color" json:"Color,omitempty"`
	CreatedTime   int32  `protobuf:"varint,11,opt,name=CreatedTime" json:"CreatedTime,omitempty"`
}

func (m *PB_MediaView) Reset()                    { *m = PB_MediaView{} }
func (m *PB_MediaView) String() string            { return proto.CompactTextString(m) }
func (*PB_MediaView) ProtoMessage()               {}
func (*PB_MediaView) Descriptor() ([]byte, []int) { return fileDescriptor11, []int{1} }

func (m *PB_MediaView) GetMediaId() int64 {
	if m != nil {
		return m.MediaId
	}
	return 0
}

func (m *PB_MediaView) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *PB_MediaView) GetPostId() int32 {
	if m != nil {
		return m.PostId
	}
	return 0
}

func (m *PB_MediaView) GetAlbumId() int32 {
	if m != nil {
		return m.AlbumId
	}
	return 0
}

func (m *PB_MediaView) GetMediaTypeEnum() int32 {
	if m != nil {
		return m.MediaTypeEnum
	}
	return 0
}

func (m *PB_MediaView) GetWidth() int32 {
	if m != nil {
		return m.Width
	}
	return 0
}

func (m *PB_MediaView) GetHeight() int32 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *PB_MediaView) GetSize() int32 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *PB_MediaView) GetDuration() int32 {
	if m != nil {
		return m.Duration
	}
	return 0
}

func (m *PB_MediaView) GetColor() string {
	if m != nil {
		return m.Color
	}
	return ""
}

func (m *PB_MediaView) GetCreatedTime() int32 {
	if m != nil {
		return m.CreatedTime
	}
	return 0
}

type PB_ActionView struct {
	ActionId          int64           `protobuf:"varint,1,opt,name=ActionId" json:"ActionId,omitempty"`
	ActorUserId       int32           `protobuf:"varint,2,opt,name=ActorUserId" json:"ActorUserId,omitempty"`
	ActionTypeEnum    int32           `protobuf:"varint,3,opt,name=ActionTypeEnum" json:"ActionTypeEnum,omitempty"`
	PeerUserId        int32           `protobuf:"varint,4,opt,name=PeerUserId" json:"PeerUserId,omitempty"`
	PostId            int64           `protobuf:"varint,5,opt,name=PostId" json:"PostId,omitempty"`
	CommentId         int64           `protobuf:"varint,6,opt,name=CommentId" json:"CommentId,omitempty"`
	Murmur64Hash      int64           `protobuf:"varint,7,opt,name=Murmur64Hash" json:"Murmur64Hash,omitempty"`
	CreatedTime       int32           `protobuf:"varint,8,opt,name=CreatedTime" json:"CreatedTime,omitempty"`
	ActorUser         *PB_UserView    `protobuf:"bytes,100,opt,name=ActorUser" json:"ActorUser,omitempty"`
	Post              *PB_PostView    `protobuf:"bytes,101,opt,name=Post" json:"Post,omitempty"`
	Comment           *PB_CommentView `protobuf:"bytes,102,opt,name=Comment" json:"Comment,omitempty"`
	FollowedUser      *PB_UserView    `protobuf:"bytes,103,opt,name=FollowedUser" json:"FollowedUser,omitempty"`
	ContentOwenerUser *PB_UserView    `protobuf:"bytes,104,opt,name=ContentOwenerUser" json:"ContentOwenerUser,omitempty"`
}

func (m *PB_ActionView) Reset()                    { *m = PB_ActionView{} }
func (m *PB_ActionView) String() string            { return proto.CompactTextString(m) }
func (*PB_ActionView) ProtoMessage()               {}
func (*PB_ActionView) Descriptor() ([]byte, []int) { return fileDescriptor11, []int{2} }

func (m *PB_ActionView) GetActionId() int64 {
	if m != nil {
		return m.ActionId
	}
	return 0
}

func (m *PB_ActionView) GetActorUserId() int32 {
	if m != nil {
		return m.ActorUserId
	}
	return 0
}

func (m *PB_ActionView) GetActionTypeEnum() int32 {
	if m != nil {
		return m.ActionTypeEnum
	}
	return 0
}

func (m *PB_ActionView) GetPeerUserId() int32 {
	if m != nil {
		return m.PeerUserId
	}
	return 0
}

func (m *PB_ActionView) GetPostId() int64 {
	if m != nil {
		return m.PostId
	}
	return 0
}

func (m *PB_ActionView) GetCommentId() int64 {
	if m != nil {
		return m.CommentId
	}
	return 0
}

func (m *PB_ActionView) GetMurmur64Hash() int64 {
	if m != nil {
		return m.Murmur64Hash
	}
	return 0
}

func (m *PB_ActionView) GetCreatedTime() int32 {
	if m != nil {
		return m.CreatedTime
	}
	return 0
}

func (m *PB_ActionView) GetActorUser() *PB_UserView {
	if m != nil {
		return m.ActorUser
	}
	return nil
}

func (m *PB_ActionView) GetPost() *PB_PostView {
	if m != nil {
		return m.Post
	}
	return nil
}

func (m *PB_ActionView) GetComment() *PB_CommentView {
	if m != nil {
		return m.Comment
	}
	return nil
}

func (m *PB_ActionView) GetFollowedUser() *PB_UserView {
	if m != nil {
		return m.FollowedUser
	}
	return nil
}

func (m *PB_ActionView) GetContentOwenerUser() *PB_UserView {
	if m != nil {
		return m.ContentOwenerUser
	}
	return nil
}

type PB_NotifyView struct {
	NotifyId      int64           `protobuf:"varint,1,opt,name=NotifyId" json:"NotifyId,omitempty"`
	ForUserId     int32           `protobuf:"varint,2,opt,name=ForUserId" json:"ForUserId,omitempty"`
	ActorUserId   int32           `protobuf:"varint,3,opt,name=ActorUserId" json:"ActorUserId,omitempty"`
	NotiyTypeEnum int32           `protobuf:"varint,4,opt,name=NotiyTypeEnum" json:"NotiyTypeEnum,omitempty"`
	PostId        int64           `protobuf:"varint,5,opt,name=PostId" json:"PostId,omitempty"`
	CommentId     int64           `protobuf:"varint,6,opt,name=CommentId" json:"CommentId,omitempty"`
	PeerUserId    int32           `protobuf:"varint,7,opt,name=PeerUserId" json:"PeerUserId,omitempty"`
	Murmur64Hash  int64           `protobuf:"varint,8,opt,name=Murmur64Hash" json:"Murmur64Hash,omitempty"`
	SeenStatus    int32           `protobuf:"varint,9,opt,name=SeenStatus" json:"SeenStatus,omitempty"`
	CreatedTime   int32           `protobuf:"varint,10,opt,name=CreatedTime" json:"CreatedTime,omitempty"`
	ActorUser     *PB_UserView    `protobuf:"bytes,100,opt,name=ActorUser" json:"ActorUser,omitempty"`
	Post          *PB_PostView    `protobuf:"bytes,101,opt,name=Post" json:"Post,omitempty"`
	Comment       *PB_CommentView `protobuf:"bytes,102,opt,name=Comment" json:"Comment,omitempty"`
}

func (m *PB_NotifyView) Reset()                    { *m = PB_NotifyView{} }
func (m *PB_NotifyView) String() string            { return proto.CompactTextString(m) }
func (*PB_NotifyView) ProtoMessage()               {}
func (*PB_NotifyView) Descriptor() ([]byte, []int) { return fileDescriptor11, []int{3} }

func (m *PB_NotifyView) GetNotifyId() int64 {
	if m != nil {
		return m.NotifyId
	}
	return 0
}

func (m *PB_NotifyView) GetForUserId() int32 {
	if m != nil {
		return m.ForUserId
	}
	return 0
}

func (m *PB_NotifyView) GetActorUserId() int32 {
	if m != nil {
		return m.ActorUserId
	}
	return 0
}

func (m *PB_NotifyView) GetNotiyTypeEnum() int32 {
	if m != nil {
		return m.NotiyTypeEnum
	}
	return 0
}

func (m *PB_NotifyView) GetPostId() int64 {
	if m != nil {
		return m.PostId
	}
	return 0
}

func (m *PB_NotifyView) GetCommentId() int64 {
	if m != nil {
		return m.CommentId
	}
	return 0
}

func (m *PB_NotifyView) GetPeerUserId() int32 {
	if m != nil {
		return m.PeerUserId
	}
	return 0
}

func (m *PB_NotifyView) GetMurmur64Hash() int64 {
	if m != nil {
		return m.Murmur64Hash
	}
	return 0
}

func (m *PB_NotifyView) GetSeenStatus() int32 {
	if m != nil {
		return m.SeenStatus
	}
	return 0
}

func (m *PB_NotifyView) GetCreatedTime() int32 {
	if m != nil {
		return m.CreatedTime
	}
	return 0
}

func (m *PB_NotifyView) GetActorUser() *PB_UserView {
	if m != nil {
		return m.ActorUser
	}
	return nil
}

func (m *PB_NotifyView) GetPost() *PB_PostView {
	if m != nil {
		return m.Post
	}
	return nil
}

func (m *PB_NotifyView) GetComment() *PB_CommentView {
	if m != nil {
		return m.Comment
	}
	return nil
}

type PB_CommentView struct {
	CommentId   int64        `protobuf:"varint,1,opt,name=CommentId" json:"CommentId,omitempty"`
	UserId      int32        `protobuf:"varint,2,opt,name=UserId" json:"UserId,omitempty"`
	PostId      int64        `protobuf:"varint,3,opt,name=PostId" json:"PostId,omitempty"`
	Text        string       `protobuf:"bytes,4,opt,name=Text" json:"Text,omitempty"`
	LikesCount  int32        `protobuf:"varint,5,opt,name=LikesCount" json:"LikesCount,omitempty"`
	CreatedTime int32        `protobuf:"varint,6,opt,name=CreatedTime" json:"CreatedTime,omitempty"`
	SenderUser  *PB_UserView `protobuf:"bytes,15,opt,name=SenderUser" json:"SenderUser,omitempty"`
}

func (m *PB_CommentView) Reset()                    { *m = PB_CommentView{} }
func (m *PB_CommentView) String() string            { return proto.CompactTextString(m) }
func (*PB_CommentView) ProtoMessage()               {}
func (*PB_CommentView) Descriptor() ([]byte, []int) { return fileDescriptor11, []int{4} }

func (m *PB_CommentView) GetCommentId() int64 {
	if m != nil {
		return m.CommentId
	}
	return 0
}

func (m *PB_CommentView) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *PB_CommentView) GetPostId() int64 {
	if m != nil {
		return m.PostId
	}
	return 0
}

func (m *PB_CommentView) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func (m *PB_CommentView) GetLikesCount() int32 {
	if m != nil {
		return m.LikesCount
	}
	return 0
}

func (m *PB_CommentView) GetCreatedTime() int32 {
	if m != nil {
		return m.CreatedTime
	}
	return 0
}

func (m *PB_CommentView) GetSenderUser() *PB_UserView {
	if m != nil {
		return m.SenderUser
	}
	return nil
}

type PB_UserView struct {
	UserId             int32         `protobuf:"varint,1,opt,name=UserId" json:"UserId,omitempty"`
	UserName           string        `protobuf:"bytes,2,opt,name=UserName" json:"UserName,omitempty"`
	FirstName          string        `protobuf:"bytes,4,opt,name=FirstName" json:"FirstName,omitempty"`
	LastName           string        `protobuf:"bytes,5,opt,name=LastName" json:"LastName,omitempty"`
	UserTypeEnum       UserTypeEnum  `protobuf:"varint,6,opt,name=UserTypeEnum,enum=UserTypeEnum" json:"UserTypeEnum,omitempty"`
	UserLevelEnum      UserLevelEnum `protobuf:"varint,7,opt,name=UserLevelEnum,enum=UserLevelEnum" json:"UserLevelEnum,omitempty"`
	AvatarId           int64         `protobuf:"varint,8,opt,name=AvatarId" json:"AvatarId,omitempty"`
	ProfilePrivacyEnum int32         `protobuf:"varint,9,opt,name=ProfilePrivacyEnum" json:"ProfilePrivacyEnum,omitempty"`
	Phone              int64         `protobuf:"varint,10,opt,name=Phone" json:"Phone,omitempty"`
	About              string        `protobuf:"bytes,11,opt,name=About" json:"About,omitempty"`
	// counters 100 - 200
	FollowersCount int32 `protobuf:"varint,100,opt,name=FollowersCount" json:"FollowersCount,omitempty"`
	FollowingCount int32 `protobuf:"varint,101,opt,name=FollowingCount" json:"FollowingCount,omitempty"`
	PostsCount     int32 `protobuf:"varint,102,opt,name=PostsCount" json:"PostsCount,omitempty"`
	MediaCount     int32 `protobuf:"varint,103,opt,name=MediaCount" json:"MediaCount,omitempty"`
	LikesCount     int32 `protobuf:"varint,104,opt,name=LikesCount" json:"LikesCount,omitempty"`
	ResharedCount  int32 `protobuf:"varint,105,opt,name=ResharedCount" json:"ResharedCount,omitempty"`
	// last activities
	UserOnlineStatusEnum UserOnlineStatusEnum `protobuf:"varint,200,opt,name=UserOnlineStatusEnum,enum=UserOnlineStatusEnum" json:"UserOnlineStatusEnum,omitempty"`
	LastActiveTime       int32                `protobuf:"varint,201,opt,name=LastActiveTime" json:"LastActiveTime,omitempty"`
	// with me
	MyFollwing FollowingEnum `protobuf:"varint,300,opt,name=MyFollwing,enum=FollowingEnum" json:"MyFollwing,omitempty"`
}

func (m *PB_UserView) Reset()                    { *m = PB_UserView{} }
func (m *PB_UserView) String() string            { return proto.CompactTextString(m) }
func (*PB_UserView) ProtoMessage()               {}
func (*PB_UserView) Descriptor() ([]byte, []int) { return fileDescriptor11, []int{5} }

func (m *PB_UserView) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *PB_UserView) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

func (m *PB_UserView) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

func (m *PB_UserView) GetLastName() string {
	if m != nil {
		return m.LastName
	}
	return ""
}

func (m *PB_UserView) GetUserTypeEnum() UserTypeEnum {
	if m != nil {
		return m.UserTypeEnum
	}
	return UserTypeEnum_USER
}

func (m *PB_UserView) GetUserLevelEnum() UserLevelEnum {
	if m != nil {
		return m.UserLevelEnum
	}
	return UserLevelEnum_LEVEL_NORMAL
}

func (m *PB_UserView) GetAvatarId() int64 {
	if m != nil {
		return m.AvatarId
	}
	return 0
}

func (m *PB_UserView) GetProfilePrivacyEnum() int32 {
	if m != nil {
		return m.ProfilePrivacyEnum
	}
	return 0
}

func (m *PB_UserView) GetPhone() int64 {
	if m != nil {
		return m.Phone
	}
	return 0
}

func (m *PB_UserView) GetAbout() string {
	if m != nil {
		return m.About
	}
	return ""
}

func (m *PB_UserView) GetFollowersCount() int32 {
	if m != nil {
		return m.FollowersCount
	}
	return 0
}

func (m *PB_UserView) GetFollowingCount() int32 {
	if m != nil {
		return m.FollowingCount
	}
	return 0
}

func (m *PB_UserView) GetPostsCount() int32 {
	if m != nil {
		return m.PostsCount
	}
	return 0
}

func (m *PB_UserView) GetMediaCount() int32 {
	if m != nil {
		return m.MediaCount
	}
	return 0
}

func (m *PB_UserView) GetLikesCount() int32 {
	if m != nil {
		return m.LikesCount
	}
	return 0
}

func (m *PB_UserView) GetResharedCount() int32 {
	if m != nil {
		return m.ResharedCount
	}
	return 0
}

func (m *PB_UserView) GetUserOnlineStatusEnum() UserOnlineStatusEnum {
	if m != nil {
		return m.UserOnlineStatusEnum
	}
	return UserOnlineStatusEnum_EXACTLY
}

func (m *PB_UserView) GetLastActiveTime() int32 {
	if m != nil {
		return m.LastActiveTime
	}
	return 0
}

func (m *PB_UserView) GetMyFollwing() FollowingEnum {
	if m != nil {
		return m.MyFollwing
	}
	return FollowingEnum_FOLLOWING_NONE
}

type PB_TopProfileView struct {
	User *PB_UserView `protobuf:"bytes,1,opt,name=User" json:"User,omitempty"`
}

func (m *PB_TopProfileView) Reset()                    { *m = PB_TopProfileView{} }
func (m *PB_TopProfileView) String() string            { return proto.CompactTextString(m) }
func (*PB_TopProfileView) ProtoMessage()               {}
func (*PB_TopProfileView) Descriptor() ([]byte, []int) { return fileDescriptor11, []int{6} }

func (m *PB_TopProfileView) GetUser() *PB_UserView {
	if m != nil {
		return m.User
	}
	return nil
}

// used for list of users in like/followings/followers list
type PB_UserViewRowify struct {
	Id          int64        `protobuf:"varint,1,opt,name=Id" json:"Id,omitempty"`
	CreatedTime int32        `protobuf:"varint,2,opt,name=CreatedTime" json:"CreatedTime,omitempty"`
	UserView    *PB_UserView `protobuf:"bytes,10,opt,name=UserView" json:"UserView,omitempty"`
}

func (m *PB_UserViewRowify) Reset()                    { *m = PB_UserViewRowify{} }
func (m *PB_UserViewRowify) String() string            { return proto.CompactTextString(m) }
func (*PB_UserViewRowify) ProtoMessage()               {}
func (*PB_UserViewRowify) Descriptor() ([]byte, []int) { return fileDescriptor11, []int{7} }

func (m *PB_UserViewRowify) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *PB_UserViewRowify) GetCreatedTime() int32 {
	if m != nil {
		return m.CreatedTime
	}
	return 0
}

func (m *PB_UserViewRowify) GetUserView() *PB_UserView {
	if m != nil {
		return m.UserView
	}
	return nil
}

func init() {
	proto.RegisterType((*PB_PostView)(nil), "PB_PostView")
	proto.RegisterType((*PB_MediaView)(nil), "PB_MediaView")
	proto.RegisterType((*PB_ActionView)(nil), "PB_ActionView")
	proto.RegisterType((*PB_NotifyView)(nil), "PB_NotifyView")
	proto.RegisterType((*PB_CommentView)(nil), "PB_CommentView")
	proto.RegisterType((*PB_UserView)(nil), "PB_UserView")
	proto.RegisterType((*PB_TopProfileView)(nil), "PB_TopProfileView")
	proto.RegisterType((*PB_UserViewRowify)(nil), "PB_UserViewRowify")
}

func init() { proto.RegisterFile("pb_view_social.proto", fileDescriptor11) }

var fileDescriptor11 = []byte{
	// 1136 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x57, 0xdd, 0x6e, 0xe3, 0x44,
	0x14, 0x96, 0x93, 0xa6, 0x49, 0x4e, 0x93, 0x54, 0x1d, 0x15, 0x64, 0x55, 0xab, 0x55, 0x14, 0x2a,
	0x08, 0x3f, 0x0a, 0xd0, 0x5d, 0xb8, 0xe0, 0xae, 0x3f, 0xbb, 0x6a, 0x51, 0xbb, 0x1b, 0x4d, 0x03,
	0x48, 0xdc, 0x44, 0x4e, 0x3d, 0x4d, 0x46, 0x24, 0x9e, 0xc8, 0x76, 0xda, 0x0d, 0xcf, 0x84, 0x78,
	0x0c, 0x04, 0x6f, 0xc0, 0x25, 0xe2, 0x29, 0xb8, 0x44, 0xe7, 0xcc, 0xf8, 0x67, 0x6c, 0x83, 0x10,
	0x57, 0x7b, 0xe7, 0xef, 0x3b, 0xdf, 0x4c, 0x3c, 0xe7, 0x7c, 0xe7, 0x78, 0x02, 0x87, 0xeb, 0xd9,
	0xf4, 0x41, 0x8a, 0xc7, 0x69, 0xa4, 0xee, 0xa4, 0xb7, 0x1c, 0xad, 0x43, 0x15, 0xab, 0xa3, 0xfd,
	0xf5, 0x6c, 0x1a, 0x7b, 0xb3, 0xa5, 0x88, 0x0c, 0xd1, 0x33, 0xb2, 0x04, 0x77, 0xd7, 0xb3, 0xa9,
	0x08, 0x36, 0x2b, 0x0d, 0x07, 0x7f, 0x34, 0x60, 0x6f, 0x7c, 0x36, 0x1d, 0xab, 0x28, 0xfe, 0x56,
	0x8a, 0x47, 0xf6, 0x2e, 0xec, 0xe2, 0xf3, 0x95, 0xef, 0x3a, 0x7d, 0x67, 0x58, 0xe7, 0x06, 0x21,
	0xff, 0x4d, 0x24, 0xc2, 0x2b, 0xdf, 0xad, 0xf5, 0x9d, 0x61, 0x83, 0x1b, 0xc4, 0x3e, 0x87, 0x0e,
	0x2a, 0x26, 0xdb, 0xb5, 0x78, 0x11, 0x6c, 0x56, 0x6e, 0xbd, 0xef, 0x0c, 0x7b, 0x27, 0xdd, 0x51,
	0x9e, 0xe4, 0x96, 0x84, 0x31, 0xd8, 0x99, 0x88, 0x37, 0xb1, 0xbb, 0xd3, 0x77, 0x86, 0x6d, 0x4e,
	0xcf, 0xec, 0x08, 0x5a, 0x5c, 0xde, 0x2d, 0x88, 0x6f, 0x10, 0x9f, 0x62, 0xf6, 0x14, 0xe0, 0x46,
	0xf8, 0xd2, 0x3b, 0x57, 0x9b, 0x20, 0x76, 0x77, 0xe9, 0xe7, 0x73, 0x0c, 0xae, 0xbd, 0x5d, 0x78,
	0xa1, 0xf0, 0x27, 0xca, 0x6d, 0x52, 0x34, 0xc5, 0xec, 0x7d, 0xe8, 0x5d, 0xc8, 0x08, 0xf3, 0x71,
	0xae, 0x56, 0x2b, 0x11, 0xc4, 0x6e, 0x8b, 0x14, 0x05, 0x16, 0x8f, 0x77, 0xe9, 0x45, 0x13, 0x6f,
	0xee, 0xb6, 0xf5, 0xf1, 0x34, 0x62, 0xc7, 0xd0, 0x35, 0x92, 0x48, 0xff, 0x3c, 0x50, 0xd8, 0x26,
	0xf1, 0x0d, 0xaf, 0xe5, 0x0f, 0xc2, 0x48, 0xf6, 0xf4, 0x1b, 0x66, 0x0c, 0xc6, 0x31, 0xb9, 0x26,
	0xde, 0xd1, 0xf1, 0x8c, 0xc1, 0xf8, 0x0b, 0x5f, 0xc6, 0xc2, 0x9f, 0xc8, 0x95, 0x70, 0xbb, 0x3a,
	0x9e, 0x31, 0xac, 0x0f, 0x7b, 0xe7, 0xa1, 0xf0, 0x12, 0x41, 0x8f, 0x04, 0x79, 0x0a, 0xcf, 0xc9,
	0x85, 0x3e, 0xb5, 0x29, 0xdf, 0x3e, 0x95, 0xaf, 0xc0, 0xb2, 0x27, 0xd0, 0xbe, 0x90, 0xfe, 0x15,
	0xbe, 0x9b, 0xef, 0x9e, 0xf4, 0x9d, 0x61, 0x8b, 0x67, 0x04, 0x1b, 0x40, 0x07, 0x41, 0xb2, 0xc6,
	0x7d, 0x46, 0x02, 0x8b, 0x63, 0x9f, 0x00, 0xdc, 0x8a, 0xc0, 0x17, 0x21, 0x1a, 0xc0, 0xf5, 0xfb,
	0xce, 0x70, 0xef, 0xa4, 0x33, 0x1a, 0x9f, 0x4d, 0x11, 0xe3, 0x99, 0x78, 0x2e, 0xce, 0x3e, 0x83,
	0x4e, 0xb2, 0x92, 0xf4, 0xa2, 0x42, 0x6f, 0x29, 0xd8, 0x7b, 0xd0, 0xa0, 0xda, 0xba, 0xf7, 0x24,
	0xed, 0xa2, 0x94, 0x08, 0xd2, 0xea, 0x18, 0xfb, 0x18, 0xda, 0xf4, 0x70, 0x2d, 0xa3, 0xd8, 0x9d,
	0xf7, 0xeb, 0x65, 0x61, 0x16, 0x1f, 0xfc, 0x5c, 0x83, 0x4e, 0x3e, 0xc6, 0x5c, 0x68, 0x12, 0x48,
	0x4d, 0x9e, 0xc0, 0x7f, 0x74, 0x79, 0xd6, 0x15, 0x75, 0xcd, 0x9b, 0x74, 0xba, 0xd0, 0x3c, 0x5d,
	0xce, 0x36, 0xab, 0x2b, 0x9f, 0xdc, 0xdc, 0xe0, 0x09, 0x44, 0xe3, 0xd0, 0xa6, 0x69, 0x63, 0x34,
	0xb4, 0x71, 0x2c, 0x92, 0x1d, 0x42, 0xe3, 0x3b, 0xe9, 0xc7, 0x0b, 0xe3, 0x6a, 0x0d, 0xc8, 0x8c,
	0x42, 0xce, 0x17, 0xb1, 0xb1, 0xb3, 0x41, 0xd8, 0x38, 0xb7, 0xf2, 0x47, 0x61, 0x2c, 0x4c, 0xcf,
	0x68, 0xfe, 0x8b, 0x4d, 0xe8, 0xc5, 0x52, 0x05, 0xc6, 0xba, 0x29, 0xc6, 0xdd, 0xcf, 0xd5, 0x52,
	0x85, 0x64, 0xda, 0x36, 0xd7, 0xa0, 0x68, 0xa6, 0xbd, 0x92, 0x99, 0x06, 0x7f, 0xd5, 0xa1, 0x3b,
	0x3e, 0x9b, 0x9e, 0xde, 0xe1, 0x2e, 0x94, 0xb1, 0x23, 0x68, 0x69, 0x94, 0xa6, 0x2c, 0xc5, 0xb8,
	0xdf, 0xe9, 0x5d, 0xac, 0x42, 0x2b, 0x71, 0x79, 0x0a, 0xcd, 0xa9, 0xd5, 0xd6, 0x94, 0x68, 0xf0,
	0x02, 0x8b, 0x6d, 0x30, 0x16, 0x22, 0xd9, 0x48, 0x27, 0x34, 0xc7, 0xe4, 0xaa, 0xd0, 0xb0, 0x66,
	0xd3, 0x13, 0x68, 0x9b, 0x7e, 0xbc, 0xf2, 0x29, 0x93, 0x75, 0x9e, 0x11, 0x68, 0xea, 0x9b, 0x4d,
	0xb8, 0xda, 0x84, 0x5f, 0x3e, 0xbf, 0xf4, 0xa2, 0x05, 0xe5, 0xb4, 0xce, 0x2d, 0xae, 0x98, 0x93,
	0x56, 0xb9, 0xc1, 0x3e, 0x82, 0x76, 0x7a, 0xa4, 0x4a, 0xd7, 0x67, 0x61, 0xd6, 0x87, 0x1d, 0x7c,
	0xb3, 0xbc, 0xd9, 0x93, 0xf9, 0xca, 0x29, 0xc2, 0x3e, 0x84, 0x66, 0x32, 0x8f, 0xb4, 0xcd, 0xf7,
	0x51, 0x64, 0x28, 0xd2, 0x25, 0x71, 0xec, 0xa0, 0x97, 0x6a, 0xb9, 0x54, 0x8f, 0xa6, 0x83, 0xe6,
	0x55, 0x1d, 0x94, 0x57, 0xb0, 0xaf, 0xe0, 0xe0, 0x5c, 0x05, 0xb1, 0x08, 0xe2, 0xd7, 0x8f, 0x22,
	0x30, 0x8d, 0xba, 0xa8, 0x58, 0x56, 0x96, 0x0d, 0x7e, 0xd1, 0xa5, 0x7f, 0xa5, 0x62, 0x79, 0xbf,
	0x4d, 0x4a, 0xaf, 0x51, 0x56, 0xfa, 0x04, 0x63, 0xe2, 0x5f, 0x16, 0x0a, 0x9f, 0x11, 0x45, 0x63,
	0xd4, 0xcb, 0xc6, 0x38, 0x86, 0x2e, 0xee, 0xb5, 0x4d, 0x7d, 0xa1, 0x6b, 0x6e, 0x93, 0xff, 0xb3,
	0xec, 0xb6, 0x99, 0x9a, 0x25, 0x33, 0x15, 0x6d, 0xd1, 0xaa, 0xb0, 0xc5, 0x53, 0x9c, 0x75, 0x22,
	0xb8, 0x8d, 0xbd, 0x78, 0x13, 0x99, 0xf6, 0xca, 0x31, 0x45, 0xdb, 0xc0, 0xdb, 0x63, 0x9b, 0xc1,
	0x9f, 0x0e, 0xf4, 0xec, 0x98, 0x9d, 0x2f, 0xa7, 0x98, 0xaf, 0xff, 0x36, 0xfa, 0xb2, 0xec, 0x57,
	0x7d, 0xc5, 0xed, 0xef, 0x60, 0xa3, 0xf4, 0x1d, 0x2c, 0xe4, 0x6b, 0xb7, 0x9c, 0x2f, 0xfb, 0xeb,
	0xb2, 0xff, 0xef, 0x5f, 0x97, 0xc1, 0xef, 0xfa, 0xf2, 0x92, 0xc4, 0x72, 0x67, 0x70, 0xac, 0x33,
	0x1c, 0x41, 0x0b, 0x9f, 0x5e, 0x79, 0x2b, 0x41, 0xa7, 0x6b, 0xf3, 0x14, 0x93, 0x87, 0x65, 0x18,
	0xc5, 0x14, 0xd4, 0x87, 0xc9, 0x08, 0x5c, 0x79, 0xed, 0x99, 0xa0, 0xb9, 0x97, 0x24, 0x18, 0xaf,
	0x3e, 0xb8, 0x4b, 0x6a, 0xde, 0x5d, 0x73, 0xf5, 0xc9, 0x93, 0xdc, 0x92, 0xb0, 0xe7, 0xd0, 0x45,
	0x7c, 0x2d, 0x1e, 0xc4, 0x92, 0xd6, 0x34, 0x69, 0x4d, 0x6f, 0x64, 0xb1, 0xdc, 0x16, 0xd1, 0xf4,
	0x7d, 0xf0, 0x62, 0x0f, 0x0f, 0xd6, 0x32, 0xd3, 0xd7, 0x60, 0x36, 0x02, 0x36, 0x0e, 0xd5, 0xbd,
	0x5c, 0x8a, 0x71, 0x28, 0x1f, 0xbc, 0xbb, 0x2d, 0x6d, 0xab, 0xad, 0x5a, 0x11, 0xc1, 0x6f, 0xc2,
	0x78, 0xa1, 0x02, 0x6d, 0xd6, 0x3a, 0xd7, 0x00, 0xd9, 0xd3, 0x99, 0xda, 0xe8, 0xbb, 0x4b, 0x9b,
	0x6b, 0x80, 0x73, 0xdb, 0x0c, 0x96, 0xd0, 0x94, 0xd4, 0xd7, 0x73, 0xdb, 0x66, 0x33, 0x9d, 0x0c,
	0xe6, 0x5a, 0x27, 0xf2, 0xba, 0x84, 0xa5, 0x96, 0x54, 0x51, 0x72, 0x93, 0xba, 0x37, 0x2d, 0x99,
	0x32, 0x85, 0x8b, 0xde, 0xbc, 0x74, 0xd1, 0xb3, 0xed, 0xb5, 0x28, 0xd9, 0xeb, 0x18, 0xba, 0x5c,
	0x44, 0x74, 0x95, 0xd0, 0x12, 0xa9, 0xc7, 0x89, 0x45, 0xb2, 0xaf, 0xe1, 0x10, 0xd3, 0xfb, 0x3a,
	0x58, 0xca, 0x40, 0xe8, 0x46, 0xa6, 0x9c, 0xfd, 0xea, 0x50, 0x2d, 0xde, 0x19, 0x55, 0x45, 0x79,
	0xe5, 0x1a, 0xf6, 0x01, 0xf4, 0xd0, 0x0e, 0xf8, 0x1d, 0x7b, 0x10, 0xe4, 0xe9, 0xdf, 0xb4, 0xf3,
	0x0a, 0x34, 0xfb, 0x14, 0xe0, 0x66, 0x8b, 0xe9, 0xc0, 0x6c, 0xb8, 0x3f, 0xd5, 0x4c, 0xd9, 0xd3,
	0x04, 0xd1, 0x6f, 0xe4, 0x24, 0x83, 0x2f, 0xe0, 0x60, 0x7c, 0x36, 0x9d, 0xa8, 0xb5, 0xa9, 0x21,
	0xf9, 0xbb, 0x0f, 0x3b, 0xd4, 0x17, 0x4e, 0x45, 0x5f, 0x50, 0x64, 0xa0, 0x68, 0x59, 0x4a, 0xaa,
	0x47, 0x79, 0xbf, 0x65, 0x3d, 0xa8, 0xa5, 0x1d, 0x5f, 0xd3, 0x83, 0x39, 0xdf, 0x86, 0xb5, 0x72,
	0x1b, 0x0e, 0x75, 0xc3, 0xe0, 0x1e, 0x64, 0x94, 0xe2, 0x8f, 0xa5, 0xd1, 0xb3, 0x03, 0x68, 0xc9,
	0x70, 0xb4, 0x8a, 0x46, 0xeb, 0xd9, 0x65, 0x7d, 0xec, 0x7c, 0xef, 0xbc, 0x99, 0xed, 0xd2, 0x3f,
	0x8b, 0x67, 0x7f, 0x07, 0x00, 0x00, 0xff, 0xff, 0x7c, 0x70, 0x26, 0xa2, 0xa1, 0x0c, 0x00, 0x00,
}
